require("dotenv").config();
//import packages
const express = require("express");
const app = express();
const bcrypt = require("bcryptjs");
const cookieParser = require("cookie-parser");
const cron = require("node-cron");
//for HBD SUPPORT lib//
const path = require("path");
const hbs = require("hbs");

//for HBD SUPPORT lib//
const cors = require("cors");
const CsvParser = require("json2csv").Parser;
//////////bulck upload support lib/////////
const multer = require("multer");
const csv = require("csv-parser");
const fs = require("fs");
//napkin vending machine import
const https = require("https"); //FIXME:Check and Remove//FIXME:
const querystring = require("querystring"); //FIXME:Check and Remove//FIXME:
const cjs = require("crypto-js");
const request = require("request");
//import local db modules
require("./db/conn");
const mongoose = require("mongoose");
//const Company = require("./models/Company");
const Employee = require("./models/employee");
const User = require("./models/user");
const Transaction = require("./models/transaction");
const Rejectedcard = require("./models/rejectedcards");
const Pendingstatus = require("./models/pendingstatus");
const Product = require("./models/product");
const Machine = require("./models/machine");
const Napkinvendtransaction = require("./models/napkinvendtransaction"); //FIXME:Check and Remove//FIXME:
const Callbacktransaction = require("./models/callbacktransaction");
const Napkinjobtable = require("./models/napkinjobtable"); //FIXME:Check and Remove//FIXME:
const Refund = require("./models/refund");
const Refundrequest = require("./models/refundrequest");
const Credittable = require("./models/credittable");
const QrData = require("./models/qrdata");
const QrCredit = require("./models/qrcredit");
const QrTransaction = require("./models/qrtransactions");
//import local modules
const auth = require("./middleware/auth");
const email = require("./emailscript");

const port = process.env.PORT || 80;

const staticPath = path.join(__dirname, "/src");
console.log(staticPath);
const templatePath = path.join(__dirname, "/templates/views");
const partialsPath = path.join(__dirname, "/templates/partials");
app.set("view engine", "hbs");
app.set("views", templatePath);
hbs.registerPartials(partialsPath);

app.use(express.static(staticPath));
app.use(cors());
app.use(express.json());
app.use(cookieParser());
app.use(express.urlencoded({ extended: true }));

async function makeTransaction(vendData) {
  try {
    qrcredit = await QrCredit.findOne(
      { internalTransactionId: vendData.transactionID, cycleDone: true },
      {
        created_date: 0,
        __v: 0,
        _id: 0,
        activeStatus: 0,
        qrPaymentGateway: 0,
        machineType: 0,
      }
    );
    console.log(
      "ðŸš€ ~ file: server.js:69 ~ makeTransaction ~ qrcredit",
      qrcredit
    );

    if (qrcredit) {
      data = new QrTransaction();
      data.qrId = qrcredit.qrId;
      data.qrCreditID = qrcredit.internalTransactionId;
      data.machine_id = qrcredit.machineId;
      data.slote_number = vendData.item_slot;
      data.item_price = vendData.item_price;
      data.status = "Completed";
      data = await data.save();
      if (data)
        console.log(
          "#################################TRANSACTION RECODED #############################################"
        );
    } else {
      console.log(
        "#################################TRANSACTION RECODED failed  #############################################"
      );
    }
  } catch (e) {
    console.log(e);
    console.log(" ~ file: server.js:92 ~ makeTransaction ~ e", e);
  }
}

app.get("/", (req, res) => {
  res.send("Smartvendz:Backend update");
});

//TODO: Pulsar VMC QR tesing Demo API Code/////////////////////////////////////////////////////////////////////////////PULSAR VMC API//////////////////

var vmctestpayment = 0;
var vmcstoreid = "snaxsmartstore1";
var vmcterminalid = "444f4r343443f443ff4";
var vmcmerchantid = "QRTV3442";
var vmctransaction = "34545h434uuhgg4";

// app.get("/vmctestqr/checkpayment/:machine/:storeId/:terminalId/:merchantId", async (req, res) => {
//        console.log(req.params);
//        console.log(req.headers);
//        console.log(req.body);
//     try {
//         if (vmctestpayment == 0) {
//             console.log("transaction not found");
//             res.status(400).json({ "success": false });
//         } else {
//             console.log("transaction found");
//                 res.status(200).json({ "success": true, "credit_amount":vmctestpayment ,"transactionID":vmctransaction});
//                 vmctestpayment=0;
//         }
//     }
//     catch (e) {
//         res.status(500).json({ "success": false });
//         console.log(e);
//     }
// });
// app.get("/vmctestqr/setcredit/:amount", async (req, res) => {
//     console.log(req.params);
//     //console.log(req.headers);
//     console.log(req.body);
//  try {
//      if (req.params.amount == 0) {
//          console.log("transaction not found");
//          res.status(400).json({ "success": false, "payment_set":false });
//      } else {
//          console.log("transaction found");
//          vmctestpayment=req.params.amount;
//              res.status(200).json({ "success": true, "payment_set":true});
//      }
//  }
//  catch (e) {
//      res.status(500).json({ "success": false });
//      console.log(e);
//  }
// });
// app.post("/vmctestqr/vendack/", async (req, res) => {
//     console.log(req.params);
//     //console.log(req.headers);
//     console.log(req.body);
//  try {
//      if (req.body.transactionID!=vmctransaction) { //in main real api you need to compaire the refund amount and credit amount.
//          console.log("transaction not found");
//          res.status(400).json({ "success": false, "refund":false });
//      } else {
//          console.log("transaction found");
//          vmctestpayment=req.params.amount;
//              res.status(200).json({ "success": true, "refund":true});
//      }
//  }
//  catch (e) {
//      res.status(500).json({ "success": false });
//      console.log(e);
//  }
// });
/////////////////////////////////////////////////////////////////////////////////////////////////
app.get(
  "/vmctestqr/checkpayment/:machine/:storeId/:terminalId/:merchantId",
  async (req, res) => {
    console.log(req.params);
    //console.log(req.headers);
    console.log(req.body);
    try {
      var d = new Date();
      d.setMinutes(d.getMinutes() - 5);

      const qrdata = await QrCredit.findOne(
        {
          storeId: req.params.storeId,
          terminalId: req.params.terminalId,
          merchantId: req.params.merchantId,
          pending_job: false,
          vend_status: false,
          created_date: { $gte: d },
        },
        { __v: 0, activeStatus: 0, qrPaymentGateway: 0, machineType: 0 }
      );
      if (qrdata) {
        console.log("ðŸš€ ~ file: server.js:157 ~ app.get ~ qrdata", qrdata);
        qrdata.pending_job = true;
        qrdata.machine = req.params.machine;
        const jobdata = await qrdata.save();
        console.log("ðŸš€ ~ file: server.js:162 ~ app.get ~ jobdata", jobdata);
        if (jobdata) {
          res.status(200).json({
            success: true,
            credit_amount: jobdata.amount,
            transactionID: jobdata.internalTransactionId,
          });
        } else {
          res.status(400).json({ success: false });
        }
      } else {
        res.status(500).json({ success: false });
      }
    } catch (e) {
      res.status(500).json({ success: false });
      console.log(e);
    }
  }
);
app.get("/vmctestqr/setcredit/:amount", async (req, res) => {
  var vmctestpayment = 0;
  var vmcstoreid = "snaxsmartstore1";
  var vmcterminalid = "444f4r343443f443ff4";
  var vmcmerchantid = "QRTV3442";
  var vmctransaction = "34545h434uuhgg4";
  console.log(req.params);
  //console.log(req.headers);
  console.log(req.body);

  try {
    const qrdata = await QrData.findOne(
      {
        storeId: vmcstoreid,
        terminalId: vmcterminalid,
        merchantId: vmcmerchantid,
      },
      {
        created_date: 0,
        __v: 0,
        _id: 0,
        activeStatus: 0,
        qrPaymentGateway: 0,
        machineType: 0,
      }
    );
    console.log("ðŸš€ ~ file: server.js:174 ~ app.get ~ qrdata", qrdata);

    if (qrdata) {
      const data = new QrCredit(qrdata);
      data._id = mongoose.Types.ObjectId();
      data.isNew = true;
      data.amount = req.params.amount;
      const qrcredit = await data.save();
      if (qrcredit)
        console.log("ðŸš€ ~ file: server.js:211 ~ app.post ~ qrdata", qrcredit);
      res.status(200).json({ success: true, payment_set: true });
    } else {
      console.log("ðŸš€ ~ file: server.js:211 ~ app.post ~ qrdata", qrcredit);
      res.status(400).json({ success: false, payment_set: false });
    }
  } catch (e) {
    console.log(e);
    res.status(500).json({ success: false });
  }
});
app.post("/vmctestqr/vendack/", async (req, res) => {
  console.log(req.params);
  //console.log(req.headers);
  console.log(req.body);
  try {
    const qrdata = await QrCredit.findOne(
      {
        internalTransactionId: req.body.transactionID,
        pending_job: true,
        vend_status: false,
        cycleDone: false,
      },
      { __v: 0, activeStatus: 0, qrPaymentGateway: 0, machineType: 0 }
    );
    if (qrdata) {
      if (req.body.vend_status == "success") {
        console.log("ðŸš€ ~ file: server.js:157 ~ app.get ~ qrdata", qrdata);
        qrdata.pending_job = false;
        qrdata.vend_status = true;
        qrdata.cycleDone = true;
      } else {
        qrdata.cycleDone = true;
      }

      if (req.body.refund) {
        qrdata.refund = true;
        qrdata.refundAmount = req.body.refund_amount;
        qrdata.refundStatus = "initiate";
        const jobdata = await qrdata.save();
        console.log("ðŸš€ ~ file: server.js:162 ~ app.get ~ jobdata", jobdata);
        if (jobdata) {
          res.status(200).json({ success: true });
          const r = await makeTransaction(req.body);
        } else {
          res.status(400).json({ success: false });
        }
      } else {
        const jobdata = await qrdata.save();
        console.log("ðŸš€ ~ file: server.js:162 ~ app.get ~ jobdata", jobdata);
        if (jobdata) {
          res.status(200).json({ success: true });
          const r = await makeTransaction(req.body);
        } else {
          res.status(400).json({ success: false });
        }
      }
    } else {
      res.status(500).json({ success: false });
    }
  } catch (e) {
    res.status(500).json({ success: false });
    console.log(e);
  }
});
app.post("/vmctestqr/setQRcode/", auth, async (req, res) => {
  console.log(req.params);
  console.log(req.body);
  if (req.user.role == "superAdmin") {
    try {
      const data = new QrData(req.body);
      const qrdata = await data.save();
      if (qrdata) {
        console.log("ðŸš€ ~ file: server.js:211 ~ app.post ~ qrdata", qrdata);
        res
          .status(200)
          .json({ status: "Machine Created Successfully", data: qrdata });
      } else {
        console.log("ðŸš€ ~ file: server.js:211 ~ app.post ~ qrdata", qrdata);
        res.status(200).json({ status: "failed" });
      }
    } catch (error) {
      console.log("ðŸš€ ~ file: server.js:219 ~ app.post ~ error", error);
      res
        .status(200)
        .json({ status: "failed", error: "internal server error " });
    }
  } else {
    res.status(401).json({
      status: "failed",
      error: "You are not Have permission to add QR DATA",
    });
  }
});

//TODO: Pulsar VMC QR tesing Demo API Code/////////////////////////////////////////////////////////////////////////////PULSAR VMC API//////////////////

app.get("/", (req, res) => {
  res.send("Smartvendz:403:pro15:18/1");
});

//Snaxsmart Support///////////////////////////////////////////////////////////////////////////////
app.get("/SnaxsmartSupport", (req, res) => {
  res.status(200).render("SnaxsmartSupport");
});
app.get("/Submiterror", (req, res) => {
  res.status(200).render("Submiterror");
});
app.get(
  "/RefundRequestslkflfldffjd233qqez6y95jyleziggcoder55845jjgjfjkdfkfkkgjdtrutrutrjf",
  async (req, res) => {
    console.log(req.url);
    res.render("RefundRequests", {
      default: true,
      notify: false,
      error: false,
      popup: false,
      heading: "Transactions Records",
    });
    console.log("Fetch Data and Send to client");
  }
);
//Snaxsmart Support Render Pages/////////////////////////////////
//Snaxsmart Support APIs////////////////////////////////////////
app.post("/api/SnaxsmartSupport", async (req, res) => {
  try {
    console.log(req.query);
    console.log(req.body);
    var data = req.body;
    if (data.select == "cash") {
      console.log("Cash Refund Request");
      data.remark = data.comment[0];
      data.comment = "";
      data.tamount = data.tamount[0];
      data.ramount = data.ramount[0];
      console.log(data);
    } else if (data.select == "online") {
      console.log("Online Refund Request");
      data.remark = data.comment[1];
      data.comment = "";
      data.tamount = data.tamount[1];
      data.ramount = data.ramount[1];
      console.log(data);
    } else if (data.select == "other") {
      console.log("Other Request");
      data.remark = data.suggestion;
      data.tamount = "";
      data.ramount = "";
      console.log(data);
    }
    const formdata = new Refundrequest(data);
    const submitdata = await formdata.save();
    console.log(submitdata);
    res.status(200).render("SubmitSuccess");
  } catch (e) {
    console.log(e);
    res.status(200).render("Submiterror");
  }
});
app.get("/api/RefundRequestTable", async (req, res) => {
  console.log(req.url);
  // console.log(req.user.user_id);
  try {
    const requestdata = await Refundrequest.find({}, { __v: 0 })
      .sort({ created_date: -1 })
      .lean()
      .limit(50);
    if (requestdata != null) {
      console.log(requestdata[0]);
      res.status(200).json({ status: "success", data: requestdata });
      console.log("/api/products: Fetch Data and Send to client");
    } else {
      console.log("/api/products: No data found");
      res.status(400).json({ status: "No data Found", data: {} });
    }
  } catch (e) {
    console.log("/api/products: error in finding pending orders " + e);
    res
      .status(500)
      .json({ status: "Failed error in internal server", data: {} });
  }
});
app.get("/api/RefundRequestReport", async (req, res) => {
  console.log("****************************************88");
  console.log(req.url);
  console.log(req.query);
  var trans = []; //change array name
  function transaction(x) {
    //change the fun name
    if (x) {
      trans.push(x);
    }
    return trans;
  }

  try {
    const startDate = req.query.start_date;
    const start_date = new Date(new Date(startDate));
    console.log(start_date);
    const endDate = req.query.end_date;
    const end_date = new Date(new Date(endDate));
    console.log(end_date);
    const machine_id = req.query.machine_id;
    const select = req.query.type;

    var query = {};
    if (select !== "") {
      query["select"] = select;
    }
    if (machine_id !== "") {
      query["machine"] = machine_id;
    }
    console.log(`${startDate} to ${endDate}`);
    console.log(`${start_date} to ${end_date}`);
    console.log(query);
    const data = await Refundrequest.find({
      $and: [
        //{$or:[{ admin_id:req.user._id }]},
        {
          created_date: {
            $gte: new Date(new Date(startDate)),
            $lte: new Date(new Date(endDate)),
          },
        },
        query,
      ],
    });

    console.log("No. of transactions found : " + data.length);
    if (!(data.length == 0)) {
      for (i = 0; i < data.length; i++) {
        console.log(data[i].created_date);
        //  dp=data[i].created_date+"";
        //  dp=dp.slice(0, 24);
        //  console.log(dp)
        const j = {
          created_date: data[i].created_date.toLocaleString(undefined, {
            timeZone: "Asia/Kolkata",
          }),
          ename: data[i].ename,
          phone: data[i].phone,
          machine: data[i].machine,
          tdate: data[i].tdate,
          select: data[i].select,
          tamount: data[i].tamount,
          ramount: data[i].ramount,
          remark: data[i].remark,
          transaction_id: data[i].transaction_id,
        };
        //console.log(j);
        transaction(j);
        // console.log(trans);
      }
      const csvFields = [
        "Created_Date",
        "Employee Name",
        "Contact No.",
        "Machine No.",
        "Transaction Time",
        "Payment Type",
        "Cash Total Paid Amount",
        "Cash Refundable Amount",
        "Suggestion",
        "Online Total Paid Amount",
        "Online Refundable Amount",
        "Online Transaction ID",
        "Suggestion",
      ];
      const csvParser = new CsvParser({ csvFields });
      const csvData = csvParser.parse(trans);
      res.setHeader("Content-Type", "text/csv");
      res.setHeader(
        "Content-Disposition",
        "attachment; filename=Transactions.csv"
      );
      console.log("csv respose");
      // res.render('transactionpage', {default:false, notify:true, popup:true, estatus:"CSV Downloaded",heading:"Transactions Records"});
      res.status(200).end(csvData);
    } else {
      console.log("no data found");
      res.render("RefundRequests", {
        default: false,
        notify: true,
        error: true,
        popup: false,
        estatus: "Refund Requests not found.. for CSV Report",
        heading: "Refund Requests Records",
      });
    }
  } catch (e) {
    console.log("internal server err");
    res.render("RefundRequests", {
      default: false,
      notify: true,
      error: true,
      popup: false,
      estatus: "Internal Server Error ",
      heading: "Refund Requests Records",
    });
    console.log(e);
  }
});
app.post("/api/RefundRequestReport", async (req, res) => {
  console.log(req.url);
  console.log(req.body);
  var trans = []; //change array name
  function transaction(x) {
    //change the fun name
    if (x) {
      trans.push(x);
    }
    return trans;
  }

  try {
    const startDate = req.body.start_date;
    const start_date = new Date(new Date(startDate));
    console.log(start_date);
    const endDate = req.body.end_date;
    const end_date = new Date(new Date(endDate));
    console.log(end_date);
    const machine_id = req.body.machine_id;
    const select = req.body.type;

    var query = {};
    if (select !== "") {
      query["select"] = select;
    }
    if (machine_id !== "") {
      query["machine"] = machine_id;
    }
    console.log(`${startDate} to ${endDate}`);
    console.log(`${start_date} to ${end_date}`);
    console.log(query);
    const data = await Refundrequest.find({
      $and: [
        //{$or:[{ admin_id:req.user._id }]},
        {
          created_date: {
            $gte: new Date(new Date(startDate)),
            $lte: new Date(new Date(endDate)),
          },
        },
        query,
      ],
    });

    console.log("No. of transactions found : " + data.length);
    if (!(data.length == 0)) {
      for (i = 0; i < data.length; i++) {
        console.log(data[i].created_date);
        //  dp=data[i].created_date+"";
        //  dp=dp.slice(0, 24);
        //  console.log(dp)
        const j = {
          created_date: data[i].created_date.toLocaleString(undefined, {
            timeZone: "Asia/Kolkata",
          }),
          ename: data[i].ename,
          phone: data[i].phone,
          machine: data[i].machine,
          tdate: data[i].tdate,
          select: data[i].select,
          tamount: data[i].tamount,
          ramount: data[i].ramount,
          remark: data[i].remark,
          transaction_id: data[i].transaction_id,
        };
        //console.log(j);
        transaction(j);
        // console.log(trans);
      }
      // const csvFields = ["Created_Date", "Card_number", "Employee_name", "Email", "Manager_Email", "Cost_center", "Item_Description", "Slote_Number", "Machine_Number", "Item_Price"];
      // const csvParser = new CsvParser({ csvFields });
      // const csvData = csvParser.parse(trans);
      // res.setHeader("Content-Type", "text/csv");
      //  res.setHeader("Content-Disposition", "attachment; filename=Transactions.csv");
      // console.log("csv respose");
      // res.render('transactionpage', {default:false, notify:true, popup:true, estatus:"CSV Downloaded",heading:"Transactions Records"});
      res.json({ status: "success", data: trans });
    } else {
      // console.log("no data found")
      res.json({ status: "error", error: "Transaction not found" });
      // res.render('transactionpage', {default:false,notify:true, error:true, popup:false , estatus:"Transctions not found.. for CSV Report",heading:"Transactions Records"});
    }
  } catch (e) {
    //console.log("internal server err")
    res.json({ status: "error", error: "Internal server Error" });
    // res.render('transactionpage', {default:false, notify:true, error:true, popup:false, estatus:"Internal Server Error ",heading:"Transactions Records"});
    console.log(e);
  }
});
//Snaxsmart Support APIs////////////////////////////////////////
//Snaxsmart Support///////////////////////////////////////////////////////////////////////////////

//TODO: Old APIs////////////////////////////////////////////////////////////////////////////////
app.get("/logo", (req, res) => {
  res.sendFile(__dirname + "/snaxmartimg.png");
});
//FIXME: No need this Upload page this is only use for testing//FIXME:
app.get("/machine/sales", (req, res) => {
  res.sendFile(__dirname + "/getSalesReportOnMachine.html");
});
// app.get("/machine/product/update", (req, res) => {
//     res.sendFile(__dirname + '/index.html');
// });
app.post("/register", async (req, res) => {
  try {
    if (req.body.password === req.body.cpassword) {
      const hashpassword = await bcrypt.hash(req.body.password, 10);
      const registerUser = new User({
        company_name: req.body.company_name,
        company_id: req.body.company_id,
        company_address: req.body.company_address,
        company_location: req.body.company_location,
        company_building_no: req.body.company_building_no,
        contact_person_name: req.body.contact_person_name,
        contact_person_email: req.body.contact_person_email,
        contact_person_phone: req.body.contact_person_phone,
        password: hashpassword,
        role: req.body.role,
      });
      //console.log("middleware is calling for token generation ....");
      const token = await registerUser.generateAuthToken();
      const registered = await registerUser.save();
      email.registerNotification(registered, req.body.password);

      const tokenjson = { "register-status": "success" };
      console.log(
        `company is registerd successfully, data is stored in database`
      );
      // //cookie save in response code
      // res.cookie("jwt", token, {
      // //  expires: new Date(Date.now() + 30000),
      // });
      // //cookie save in response code
      res.status(200).send(tokenjson);
      console.log(
        `Register:User {${registered.contact_person_email}} Register Successfull`
      );
    } else {
      res.status(401).send("password and confirm are not matching");
    }
  } catch (error) {
    res.status(400).send(error);
  }
});
app.post("/companyregister", auth, async (req, res) => {
  if (req.user.role == "superAdmin") {
    try {
      if (req.body.password === req.body.cpassword) {
        const hashpassword = await bcrypt.hash(req.body.password, 10);
        const registerUser = new User({
          company_name: req.body.company_name,
          company_id: req.body.company_id,
          company_address: req.body.company_address,
          company_location: req.body.company_location,
          company_building_no: req.body.company_building_no,
          contact_person_name: req.body.contact_person_name,
          contact_person_email: req.body.contact_person_email,
          contact_person_phone: req.body.contact_person_phone,
          password: hashpassword,
          role: req.body.role,
          superadmin: req.user.id,
        });
        //console.log("middleware is calling for token generation ....");
        const token = await registerUser.generateAuthToken();
        const registered = await registerUser.save();
        email.registerNotification(registered, req.body.password);

        const tokenjson = { "register-status": "success" };
        console.log(
          `company is registerd successfully, data is stored in database`
        );
        // //cookie save in response code
        // res.cookie("jwt", token, {
        // //  expires: new Date(Date.now() + 30000),
        // });
        // //cookie save in response code
        res.status(200).send(tokenjson);
        console.log(
          `Register:User {${registered.contact_person_email}} Register Successfull`
        );
      } else {
        res.status(401).send("password and confirm are not matching");
      }
    } catch (error) {
      res.status(400).send(error);
    }
  } else {
    res
      .status(401)
      .json({ error: "You are not Have permisstion to Create company Admin" });
  }
});
app.post("/createmachine", auth, async (req, res) => {
  if (req.user.role == "superAdmin") {
    try {
      console.log(req.body.company_id);
      const ca = req.body.company_id;
      const userdata = await User.findOne({ company_id: ca });
      if (req.user.id == userdata.superadmin) {
        const createMachine = new Machine(req.body);
        //console.log(req.user.id);
        createMachine.super_admin = req.user.id;
        createMachine.admin = userdata.id;
        //console.log(createMachine);
        const machineData = await createMachine.save();
        //console.log(machineData);
        res.status(200).json({ status: "Machine Created Successfully" });
      } else {
        res.status(401).json({
          error:
            "You don't have Permission to create Machine for this company Admin",
        });
      }
    } catch (error) {
      res.status(400).json({ error: "ERROR in machine_id or company_id" });
    }
  } else {
    res
      .status(401)
      .json({ error: "You are not Have permisstion to Create Machine" });
  }
});
app.get("/productcsv/:machine", auth, async (req, res) => {
  var trans = [];
  function transaction(x) {
    if (x) {
      trans.push(x);
    }
    return trans;
  }
  var d;
  try {
    //console.log(req.user);
    const machinedata = await Machine.findOne(
      {
        $and: [
          { machine_id: req.params.machine },
          { company_id: req.user.company_id },
        ],
      },
      { __v: 0 }
    );
    if (machinedata !== null) {
      // d=machinedata;
      d = machinedata.slots_name;
      console.log(d.length);
      if (!(d.lenght == 0)) {
        for (i = 0; i < d.length; i++) {
          const j = {
            machine_id: machinedata.machine_id,
            company_id: req.user.company_id,
            slote_number: d[i].slote,
            item_description: "",
            quantity: "",
            item_price: "",
          };
          // console.log(j);
          transaction(j);
          // console.log(trans);
        }
        const csvFields = [
          "machine_id",
          "company_id",
          "slote_number",
          "item_decription",
          "quantity",
          "item_price",
        ];
        const csvParser = new CsvParser({ csvFields });
        const csvData = csvParser.parse(trans);
        res.setHeader("Content-Type", "text/csv");
        res.setHeader(
          "Content-Disposition",
          "attachment; filename=Product_List.csv"
        );

        res.status(200).end(csvData);
        // res.status(200).json(d);
      } else {
        res.status(200).json({ error: "Slote entry not found" });
      }
    } else {
      res
        .status(404)
        .json({ error: "machine data not found, Put valid Machine ID" });
    }
  } catch (e) {
    if (e == null) {
      res
        .status(404)
        .json({ error: "Wrong Machine Id Try with Valid Machine Id" });
    }
    res.status(200).json({ error: "server internal error" });
    //console.log(e);
  }
});
app.post("/login", async (req, res) => {
  try {
    const email = req.body.email;
    const password = req.body.password;
    //console.log(`${email} and password is ${password}`);//comment for live
    const userdata = await User.findOne(
      { contact_person_email: email },
      { created_date: 0, otp: 0, admin: 0, __v: 0 }
    );
    const passwordmatch = await bcrypt.compare(password, userdata.password);
    if (passwordmatch) {
      // res.cookie("cookie",userdata.token,{
      //     //  expires: new Date(Date.now() + 30000),
      //     });

      if (userdata.role == "superAdmin") {
        const admindata = await User.find(
          { superadmin: userdata.id },
          { password: 0, created_date: 0, otp: 0, token: 0, admin: 0, __v: 0 }
        );

        const rdata = {
          status: "success",
          admin_role: userdata.role,
          company_name: userdata.company_name,
          company_address: userdata.company_address,
          company_location: userdata.company_location,
          company_building_no: userdata.company_building_no,
          contact_person_name: userdata.contact_person_name,
          contact_person_email: userdata.contact_person_email,
          contact_person_phone: userdata.contact_person_phone,
          session_token: userdata.token,
        };

        res.status(200).json({ ...rdata, company: admindata });
      } else {
        const machinedata = await Machine.find(
          { company_id: userdata.company_id },
          { created_date: 0, __v: 0 }
        );
        const rdata = {
          status: "success",
          admin_role: userdata.role,
          company_name: userdata.company_name,
          company_address: userdata.company_address,
          company_location: userdata.company_location,
          company_building_no: userdata.company_building_no,
          contact_person_name: userdata.contact_person_name,
          contact_person_email: userdata.contact_person_email,
          contact_person_phone: userdata.contact_person_phone,
          session_token: userdata.token,
        };
        res.status(200).json({ ...rdata, machine: machinedata });
      }

      console.log(
        `Login:User {${userdata.contact_person_email}} Login Successfull`
      );
      //res.send(userdata);// send data modification... required while impliment with react...
    } else {
      res.status(401).json({ status: "user_email or password is invalid" });
    }
  } catch (error) {
    res.status(400).json({ error: error });
  }
});
app.post("/passwordreset", async (req, res) => {
  try {
    if (req.body.new_password === req.body.new_cpassword) {
      const email = req.body.email;
      const password = req.body.password;
      const new_password = req.body.new_password;

      console.log(
        `${email} and password is ${password} new :${new_password} cpass: ${req.body.new_cpassword}`
      ); //comment for live
      const userdata = await User.findOne({ contact_person_email: email });
      const passwordmatch = await bcrypt.compare(password, userdata.password);

      if (passwordmatch) {
        const hashpassword = await bcrypt.hash(new_password, 10);
        console.log(hashpassword);
        userdata.password = hashpassword;
        const u = await userdata.save();
        console.log(u.password);
        res
          .status(200)
          .json({ status: "Password Change Successfull, Try to login again" });
        //res.send(userdata);// send data modification... required while impliment with react...
      } else {
        res.status(401).json({ status: "user_email or password is invalid" });
      }
    } else {
      res.status(401).json({ status: "password and confirm are not matching" });
    }
  } catch (error) {
    res.status(400).send("Invalid UserName or Usee not Found\n" + error);
  }
});
app.post("/forgotpass", async (req, res) => {
  try {
    const emailaddress = req.body.email;
    const userdata = await User.findOne({ contact_person_email: emailaddress });
    const otp = Math.floor(100000 + Math.random() * 900000);
    console.log(otp);
    userdata.otp = otp;
    console.log(userdata);
    const u = await userdata.save();
    console.log(u);
    email.otpsend(userdata, otp);
    res
      .status(200)
      .json({ status: "OTP send successfully to your email addresss" });
  } catch (error) {
    res.status(200).json({ status: "Username not Found", error: error });
  }
});
app.post("/otpverify", async (req, res) => {
  try {
    const emailaddress = req.body.email;
    const otp = req.body.otp;
    const new_password = req.body.new_password;
    const new_cpassword = req.body.new_cpassword;
    const userdata = await User.findOne({ contact_person_email: emailaddress });
    if (otp == userdata.otp) {
      if (new_password == new_cpassword) {
        const hashpassword = await bcrypt.hash(new_password, 10);
        console.log(hashpassword);
        userdata.otp = null;
        userdata.password = hashpassword;
        const u = await userdata.save();
        console.log(u.password);
        res
          .status(200)
          .json({ status: "Password Change Successfull, Try to login again" });
      } else {
        res
          .status(401)
          .json({ status: "Password and confirm are not matching" });
      }
    } else {
      res.status(401).json({ status: "Wrong OTP" });
    }
  } catch (error) {
    res.status(200).json({ status: "Username not Found", error: error });
  }
});
app.post("/user", auth, async (req, res) => {
  res.json(req.user._id);
  console.log(req.user._id);
});
//TODO: Modify or remove It//////////////////////////////////
app.get("/machinelist", auth, async (req, res) => {
  console.log("used : /machinelist");
  try {
    const machinedata = await Machine.find({}, { machine_id: 1 })
      .sort({ created_date: -1 })
      .limit(3);
    res.status(200).json(machinedata);
  } catch (e) {
    console.log(e);
  }
});
//////////multer code/////////
const storage = multer.diskStorage({
  destination: function (req, file, cb) {
    cb(null, "public");
  },
  limits: {
    files: 1,
  },
  filename: function (req, file, cb) {
    const parts = file.mimetype.split("/");
    // cb(null,`${file.fieldname}-${Date.now()}.${parts[1]}`)
    cb(null, `${file.fieldname}-${Date.now()}.csv`);
  },
  onFileUploadStart: function (file) {
    console.log("Inside uploads");
    if (file.mimetype == "text/csv") {
      return true;
    } else {
      return false;
    }
  },
});
const upload = multer({ storage });
//////////multer code/////////
//TODO: bulck data_file upload code  ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
app.post(
  "/fileUpload/:machine",
  auth,
  upload.single("image"),
  async (req, res) => {
    var rejectdata = [];
    function reject(x) {
      if (x) {
        rejectdata.push(x);
      }
      return rejectdata;
    }
    var storeddata = [];
    function succ(x) {
      if (x) {
        storeddata.push(x);
      }
      return storeddata;
    }

    var path = `public/${req.file.filename}`;
    //console.log(path);
    //console.log(req.params.machine);
    //console.log(req.user.id);
    ///////////////////////////////////data_entry code //////////////////////////////
    const results = [];
    try {
      const machinedata = await Machine.findOne(
        { machine_id: req.params.machine },
        { machine_id: 1, total_slots: 1, admin: 1, company_id: 1 }
      );
      console.log(req.user);
      console.log(machinedata);
      if (req.params.machine == "all" || machinedata.admin === req.user.id) {
        fs.createReadStream(path)
          .pipe(csv({}))
          .on("data", (data) => results.push(data))
          .on("end", async () => {
            //console.log(results.length);
            for (i = 0; i < results.length; i++) {
              if (
                results[i].card_number == "" ||
                results[i].card_number == "NA" ||
                results[i].card_number == "#N/A"
              ) {
                console.log(`card_no is not available`);
                console.log(results[i]);
                const r = reject(results[i]);
              } else if (
                results[i].employee_name == "" ||
                results[i].employee_name == "NA" ||
                results[i].employee_name == "#N/A"
              ) {
                console.log(`employee_name is not available`);
                console.log(results[i]);
                const r = reject(results[i]);
              } else if (
                results[i].email == "" ||
                results[i].email == "NA" ||
                results[i].email == "#N/A"
              ) {
                console.log(`email is not available`);
                console.log(results[i]);
                const r = reject(results[i]);
              } else if (
                results[i].employee_id == "" ||
                results[i].employee_id == "NA" ||
                results[i].employee_id == "#N/A"
              ) {
                console.log(`employee_id is not available`);
                console.log(results[i]);
                const r = reject(results[i]);
              } else {
                const employee = new Employee(results[i]);
                employee.admin_id = req.user.id; ////here you u can edit when you creating employee upload byr local admin
                employee.iempid =
                  "2" + req.user.company_id + results[i].employee_id; //change p13 "22/09"
                employee.admin_id = req.user.id;
                employee.super_admin = req.user.superadmin;
                employee.company_id = req.user.company_id;
                employee.machine_id = req.params.machine;
                try {
                  const enterdata = await employee.save();
                  const r = succ(results[i]);
                } catch (e) {
                  if (e.code == 11000) {
                    const r = reject(results[i]);
                  }
                }
              }
            }
            // const r= reject();
            console.log(storeddata.length);
            console.log(rejectdata);

            console.log(rejectdata.length);
            if (rejectdata.length > 0) {
              res.status(200).json({
                dataupload: "error",
                reject_data: rejectdata,
                stored_data: storeddata.length,
              });
            } else {
              res
                .status(200)
                .json({ dataupload: "success", data: storeddata.length });
            }
          });
      } else {
        res.status(200).json({
          dataupload: "failed",
          error: "you don't have permission add product to this machine",
        });
      }
    } catch (e) {
      if (!e.length == 0) {
        //console.log("if");
        res.status(200).json({ dataupload: "failed", error: e });
      } else {
        //console.log("else");
        console.log(e);
        res
          .status(200)
          .json({ dataupload: "failed", error: "machine not found " });
      }
    }

    ///////////////////////////////////data_entry code //////////////////////////////
  }
);
//FIXME: Need to CHECK It is using or not, if not using anywhere remove it//FIXME:
app.post("/singleEmpAdd/:machine", async (req, res) => {
  var rejectdata = [];
  function reject(x) {
    if (x) {
      rejectdata.push(x);
    }
    return rejectdata;
  }
  var storeddata = [];
  function succ(x) {
    if (x) {
      storeddata.push(x);
    }
    return storeddata;
  }

  console.log(req.body);
  console.log(req.params.machine);
  // res.status(200).json(req.body);
  const results = req.body;
  try {
    // const machinedata = await Machine.findOne({ machine_id: req.params.machine }, { machine_id: 1, total_slots: 1, admin: 1, company_id: 1 });

    // console.log(machinedata);
    // if ( req.params.machine == "all"|| machinedata.admin === req.user.id) {
    if (req.params.machine) {
      if (
        results.card_number == "" ||
        results.card_number == "NA" ||
        results.card_number == "#N/A"
      ) {
        console.log(`card_no is not available`);
        console.log(results);
        const r = reject(results);
      } else if (
        results.employee_name == "" ||
        results.employee_name == "NA" ||
        results.employee_name == "#N/A"
      ) {
        console.log(`employee_name is not available`);
        console.log(results);
        const r = reject(results);
      } else if (
        results.email == "" ||
        results.email == "NA" ||
        results.email == "#N/A"
      ) {
        console.log(`email is not available`);
        console.log(results);
        const r = reject(results);
      } else if (
        results.employee_id == "" ||
        results.employee_id == "NA" ||
        results.employee_id == "#N/A"
      ) {
        console.log(`employee_id is not available`);
        console.log(results);
        const r = reject(results);
      } else {
        try {
          const employee = new Employee(results);
          // employee.admin_id = req.user.id;////here you u can edit when you creating employee upload byr local admin
          // employee.iempid=req.user.company_id+results.employee_id;
          // employee.admin_id=req.user.id;
          // employee.super_admin=req.user.superadmin;
          // employee.company_id=req.user.company_id;
          // employee.machine_id=

          const enterdata = await employee.save();
          const r = succ(enterdata);
        } catch (e) {
          if (e.code == 11000) {
            const r = reject(results);
          }
        }
      }
      // const r= reject();
      console.log(storeddata.length);
      console.log(rejectdata);
      console.log(rejectdata.length);
      if (rejectdata.length > 0) {
        res.status(200).json({
          dataupload: "error",
          reject_data: rejectdata,
          stored_data: storeddata.length,
        });
      } else {
        res.status(200).json({ dataupload: "success", data: storeddata });
      }
    } else {
      res.status(200).json({
        dataupload: "failed",
        error: "you don't have permission add product to this machine",
      });
    }
  } catch (e) {
    if (!e.length == 0) {
      //console.log("if");
      res.status(200).json({ dataupload: "failed", error: e });
    } else {
      //console.log("else");
      console.log(e);
      res
        .status(200)
        .json({ dataupload: "failed", error: "machine not found " });
    }
  }
});
app.post(
  "/productFileUpload/:machine",
  auth,
  upload.single("image"),
  async (req, res) => {
    var rejectdata = [];
    function reject(x) {
      if (x) {
        rejectdata.push(x);
      }
      return rejectdata;
    }
    var storeddata = [];
    function succ(x) {
      if (x) {
        storeddata.push(x);
      }
      return storeddata;
    }

    var path = `public/${req.file.filename}`;
    //console.log(path);
    //console.log(req.params.machine);
    //console.log(req.user.id);
    ///////////////////////////////////data_entry code //////////////////////////////
    const results = [];
    try {
      const machinedata = await Machine.findOne(
        { machine_id: req.params.machine },
        { machine_id: 1, total_slots: 1, admin: 1, company_id: 1 }
      );
      //console.log(machinedata);
      if (machinedata.admin === req.user.id) {
        fs.createReadStream(path)
          .pipe(csv({}))
          .on("data", (data) => results.push(data))
          .on("end", async () => {
            //console.log(results.length);
            for (i = 0; i < results.length; i++) {
              const product = new Product(results[i]);
              pid = results[i].machine_id + results[i].slote_number;
              // console.log(pid);
              product.admin_id = req.user.id;
              product.product_id = pid;
              await product
                .save()
                .then(() => {
                  // console.log(product);
                  const s = succ(results[i]);
                })
                .catch((e) => {
                  if (e.code == 11000) {
                    const r = reject(results[i]);
                    //        console.log(e.code);
                  } else {
                    console.log(e);
                  }
                });
            }
            // const r= reject();
            //console.log(storeddata.length);
            //console.log(rejectdata);
            //console.log(machinedata.total_slots);
            //console.log(rejectdata.length);
            if (rejectdata.length > 0) {
              res.status(200).json({
                dataupload: "error",
                reject_data: rejectdata,
                stored_data: storeddata,
              });
            } else {
              res
                .status(200)
                .json({ dataupload: "success", data: storeddata.length });
            }
          });
      } else {
        res.status(200).json({
          dataupload: "failed",
          error: "you don't have permission add product to this machine",
        });
      }
    } catch (e) {
      if (!e.length == 0) {
        //console.log("if");
        res.status(200).json({ dataupload: "failed", error: e });
      } else {
        //console.log("else");
        console.log(e);
        res
          .status(200)
          .json({ dataupload: "failed", error: "machine not found " });
      }
    }
    ///////////////////////////////////data_entry code //////////////////////////////
  }
);
//TODO: Product Bulk Update///////////////
app.patch(
  "/productFileUpload/:machine",
  auth,
  upload.single("image"),
  async (req, res) => {
    var rejectdata = [];
    function reject(x) {
      if (x) {
        rejectdata.push(x);
      }
      return rejectdata;
    }
    var storeddata = [];
    function succ(x) {
      if (x) {
        storeddata.push(x);
      }
      return storeddata;
    }

    var path = `public/${req.file.filename}`;
    //console.log(path);
    //console.log(req.params.machine);
    //console.log(req.user);
    ///////////////////////////////////data_entry code //////////////////////////////
    const results = [];
    try {
      const machinedata = await Machine.findOne(
        { machine_id: req.params.machine },
        { machine_id: 1, total_slots: 1, admin: 1, company_id: 1 }
      );
      //console.log(machinedata);
      if (machinedata.admin === req.user.id) {
        await fs
          .createReadStream(path)
          .pipe(csv({}))
          .on("data", (data) => results.push(data))
          .on("end", async () => {
            //console.log(results.length);
            for (i = 0; i < results.length; i++) {
              try {
                //console.log(result[i]);
                const update = {
                  item_description: results[i].item_description,
                  quantity: results[i].quantity,
                  item_price: results[i].item_price,
                };
                let doc = await Product.findOneAndUpdate(
                  {
                    $and: [
                      { admin_id: req.user.id },
                      { company_id: machinedata.company_id },
                      { machine_id: machinedata.machine_id },
                      { slote_number: results[i].slote_number },
                    ],
                  },
                  update
                );
                //console.log(doc);
                if (doc == null) {
                  console.log("item not found");
                  const product = new Product(results[i]);
                  pid = results[i].machine_id + results[i].slote_number;
                  product.admin_id = req.user.id;
                  product.product_id = pid;
                  await product
                    .save()
                    .then(() => {
                      const s = succ(results[i]);
                    })
                    .catch((e) => {
                      if (e.code == 11000) {
                        const r = reject(results[i]);
                        //        console.log(e.code);
                      } else {
                        console.log(e);
                      }
                    });
                } else {
                  const s = succ(results[i]);
                }
              } catch (e) {
                const r = reject(results[i]);
                console.log(e);
              }
            }
            const r = reject();
            console.log(storeddata.length);
            //console.log(rejectdata);
            //console.log(machinedata.total_slots);
            //console.log(rejectdata.length);
            if (rejectdata.length > 0) {
              res.status(200).json({
                dataupload: "error",
                reject_data: rejectdata,
                stored_data: storeddata,
              });
            } else {
              res
                .status(200)
                .json({ dataupload: "success", data: storeddata.length });
            }
          });
      } else {
        res.status(200).json({
          dataupload: "failed",
          error: "you don't have permission add product to this machine",
        });
      }
    } catch (e) {
      if (!e.length == 0) {
        //console.log("if");
        res.status(200).json({ dataupload: "failed", error: e });
      } else {
        //console.log("else");
        console.log(e);
        res
          .status(200)
          .json({ dataupload: "failed", error: "machine not found " });
      }
    }
    ///////////////////////////////////data_entry code //////////////////////////////
  }
);
//TODO: bulck data_file upload code  ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//TODO: Transaction JSON AND Dowanload CSV Report code  ////////////////////////////////////////////////////////////////////////////////////////////////
app.post("/report", auth, async (req, res) => {
  console.log("/report");
  var data = [];
  function day(x) {
    if (x) {
      data.push(x);
    }
    return data;
  }
  for (i = 0; i <= 6; i++) {
    const date_ob = new Date() - 86400000 * i;
    console.log(date_ob);
    const data = await Transaction.find({
      $and: [
        { admin_id: req.user._id },
        {
          created_date: {
            $gte: new Date(new Date(date_ob).setHours(00, 00, 00)),
            $lte: new Date(new Date(date_ob).setHours(23, 59, 59)),
          },
        },
      ],
    }).countDocuments();
    const da = new Date(date_ob).toLocaleDateString();
    const j = { date: da, count: data };
    console.log(j);
    day(j);
  }
  res.status(200).json({ data: data });
});
app.get("/machine/sales/report", auth, async (req, res) => {
  console.log(req.body);
  console.log(req.params);
  console.log(req.query);
  const machine_id = req.query.machine;
  var productSale = [];
  function ProductSale(x) {
    if (x) {
      productSale.push(x);
    }
    return productSale;
  }
  try {
    const startDate = req.query.start;
    const endDate = req.query.end;
    console.log(`${startDate} to ${endDate}`);
    const data = await Transaction.find({
      $and: [
        { $or: [{ admin_id: req.user._id }, { super_admin: req.user.id }] },
        {
          created_date: {
            $gte: new Date(new Date(startDate)),
            $lte: new Date(new Date(endDate)),
          },
        },
        { machine_id: machine_id },
      ],
    });
    console.log(data.length);
    if (!(data.lenght == 0)) {
      for (i = 0; i < data.length; i++) {
        const pdata = await Pendingstatus.findOne({
          $and: [{ transaction_id: data[i].id }, { status: "Completed" }],
        });
        // console.log("product data= "+pdata);
        if (pdata) {
          var result = productSale.find(
            (product) =>
              product.slote_number === pdata.slote_number &&
              product.item_description === pdata.item_description
          );

          if (result != undefined) {
            console.log(result);
            result.sold_quantity += 1;
          } else {
            const j = {
              date_time: pdata.created_date.toLocaleString(undefined, {
                timeZone: "Asia/Kolkata",
              }),
              company_id: data[i].company_id,
              machine_id: data[i].machine_id,
              slote_number: pdata.slote_number,
              item_description: pdata.item_description,
              item_price: pdata.item_price,
              sold_quantity: 1,
            };
            ProductSale(j);
          }
        } else {
          console.log("pending transaction");
        }
      }

      const csvFields = [
        "date_time",
        "company_id",
        "machine_id",
        "slote_number",
        "item_description",
        "item_price",
        "sold_quantity",
      ];
      const csvParser = new CsvParser({ csvFields });
      const csvData = csvParser.parse(productSale);
      res.setHeader("Content-Type", "text/csv");
      res.setHeader(
        "Content-Disposition",
        "attachment; filename=Transactions.csv"
      );

      res.status(200).end(csvData);
    } else {
      res.status(200).json({ error: "transactions not found" });
    }
  } catch (e) {
    res.status(200).json({ error: "server internal error" });
    console.log(e);
  }
});

//-------------------changed this api as post previosly it is working as get api --------------------------//
app.post("/csvreport", auth, async (req, res) => {
  console.log(req.body);
  var trans = [];
  function transaction(x) {
    if (x) {
      trans.push(x);
    }
    return trans;
  }
  try {
    const startDate = req.body.start;
    const endDate = req.body.end;
    console.log(`${startDate} to ${endDate}`);
    const data = await Pendingstatus.find({
      $and: [
        { machine_id: req.body.machine_id },
        { status: "Completed" },
        {
          created_date: {
            $gte: new Date(new Date(startDate).setHours(00, 00, 00)),
            $lte: new Date(new Date(endDate).setHours(23, 59, 59)),
          },
        },
      ],
    });
    console.log(data.length);
    if (!(data.length == 0)) {
      for (i = 0; i < data.length; i++) {
        // const pdata = await Product.findOne({ _id: data[i].titem });

        //   var edata = await Employee.findOne({ card_number: data[i].card_no });

        // console.log("employee data="+edata);
        // if(edata==null)

        // {
        //     console.log("employee data not found in employee table");
        //      edata={
        //       "card_number":data[i].card_no,
        //       "employee_name":data[i].teid,
        //        "email": "",
        //       "manager_email": "",
        //       "cost_center": "",

        //       }

        // }
        // // let text = d.toLocaleString(undefined, {timeZone: 'Asia/Kolkata'});;
        // console.log(edata);
        const j = {
          created_date: data[i].created_date.toLocaleString(undefined, {
            timeZone: "Asia/Kolkata",
          }),
          card_number: data[i].card_number,
          employee_name: data[i].employee_name,
          email: data[i].email,
          manager_email: data[i].manager_email,
          cost_center: "",
          item_description: data[i].item_description,
          slote_number: data[i].slote_number,
          machine_number: data[i].machine_id,
          item_price: data[i].item_price,
        };
        console.log(j);
        transaction(j);
        console.log(trans);
      }
      const csvFields = [
        "Created_Date",
        "Card_number",
        "Employee_name",
        "Employee_Email",
        "Manager_Email",
        "Cost_center",
        "Item_Description",
        "Slot_Number",
        "Machine_Number",
        "Item_Price",
      ];
      const csvParser = new CsvParser({ csvFields });
      const csvData = csvParser.parse(trans);
      res.setHeader("Content-Type", "text/csv");
      res.setHeader(
        "Content-Disposition",
        "attachment; filename=Transactions.csv"
      );

      res.status(200).end(csvData);
    } else {
      res.status(200).json({ error: "transactions not found" });
    }
  } catch (e) {
    res.status(200).json({ error: "server internal error" });
    console.log(e);
  }
});

// this function used for rejected transactions or rejected cards // Rakesh

app.get("/rejectedCards", async (req, res) => {
  const { startDate, endDate, machineId } = req.query;
  const DataArray = [];
  const filter = {};

  if (startDate && endDate) {
    filter.created_date = { $gte: new Date(new Date(startDate).toISOString()), $lte: new Date(new Date(endDate).toISOString()) };
  }

  if (machineId) {
    filter.machine_id = machineId;
  }
// console.log(filter)
  try {
    const rejectData = await Rejectedcard.find(filter);
    if(rejectData.length<=0){
       return res.status(200).json({ "message": "No Transactions found" });
    }
    rejectData.map((card) => {
      const { tdate, ttime, card_no, machine_id, error } = card;
      DataArray.push({ tdate, ttime, card_no, machine_id, error });
    });

    const csvFields = ["Date", "Time", "Card_number", "Machine_Id", "Error"];
    const csvParser = new CsvParser({ csvFields });
    const csvData = csvParser.parse(DataArray);
    res.setHeader("Content-Type", "text/csv");
    res.setHeader(
      "Content-Disposition",
      "attachment; filename=RejectedCards.csv"
    );

    res.status(200).end(csvData);
  } catch (e) {
    res.status(200).json({ error: "server internal error" });
    console.log(e);
  }
});

//TODO: Transaction JSON AND Dowanload CSV Report code  ////////////////////////////////////////////////////////////////////////////////////////////////
//TODO: Credit Upload, Vend From Credit API And JSON AND Dowanload CSV Report code  ////////////////////////////////////////////////////////////////////
//-------------------changed this api as post previosly it is working as get api --------------------------//
app.post("/credit/csvreport", auth, async (req, res) => {
  console.log(req.body);
  var trans = [];
  function transaction(x) {
    if (x) {
      trans.push(x);
    }
    return trans;
  }

  try {
    const startDate = req.body.start;
    const endDate = req.body.end;
    const company_id = req.body.company_id;
    const machine_id = req.body.machine_id;
    var total_credit = 0;
    var total_balance = 0;
    console.log(`${startDate} to ${endDate}`);
    const data = await Credittable.find({
      $and: [
        { $or: [{ admin_id: req.user._id }, { super_admin: req.user.id }] },
        {
          created_date: {
            $gte: new Date(new Date(startDate).setHours(00, 00, 00)),
            $lte: new Date(new Date(endDate).setHours(23, 59, 59)),
          },
        },
        { company_id: company_id },
        { machine_id: machine_id },
      ],
    });

    console.log(data.length);
    if (!(data.length == 0)) {
      for (i = 0; i < data.length; i++) {
        const j = {
          created_date: data[i].created_date.toLocaleString(undefined, {
            timeZone: "Asia/Kolkata",
          }),
          credit_month: data[i].credit_month,
          card_number: data[i].card_number,
          employee_name: data[i].employee_name,
          email: data[i].email,
          manager_email: data[i].manager_email,
          cost_center: data[i].cost_center,
          credit_amount: data[i].monthly_limit,
          transaction_count: data[i].transaction_count,
          credit_balance: data[i].credit_balance,
          active_status: data[i].active_status,
        };
        total_balance += data[i].credit_balance;
        total_credit += data[i].monthly_limit;
        transaction(j);
      }
      console.log(total_balance);
      console.log(total_credit);

      const csvFields = [
        "Credit_Date",
        "Credit_Month",
        "Card_number",
        "Employee_name",
        "Email",
        "Manager_Email",
        "Cost_center",
        "credit_amount",
        "transaction_count",
        "credit_balance",
        "active_status",
      ];
      const csvParser = new CsvParser({ csvFields });
      var csvData = csvParser.parse(trans);
      // console.log(csvData);
      var csvrow = `\n\"total_credit\",\"${total_credit}\"\n\"total_balance\",\"${total_balance}\"`;
      csvData = csvData + csvrow;
      console.log(csvrow);
      res.setHeader("Content-Type", "text/csv");
      res.setHeader(
        "Content-Disposition",
        "attachment; filename=Transactions.csv"
      );

      res.status(200).end(csvData);
    } else {
      res.status(200).json({ error: "transactions not found" });
    }
  } catch (e) {
    res.status(200).json({ error: "server internal error" });
    console.log(e);
  }
});
app.post(
  "/creditupload/:machine",
  auth,
  upload.single("credit"),
  async (req, res) => {
    var rejectdata = [];
    function reject(x) {
      if (x) {
        rejectdata.push(x);
      }
      return rejectdata;
    }
    var storeddata = [];
    function succ(x) {
      if (x) {
        storeddata.push(x);
      }
      return storeddata;
    }

    var path = `public/${req.file.filename}`;
    console.log(path);
    console.log(req.params.machine);
    console.log(req.user.id);
    ///////////////////////////////////data_entry code //////////////////////////////
    const results = [];
    try {
      const machinedata = await Machine.findOne(
        { machine_id: req.params.machine },
        { machine_id: 1, total_slots: 1, admin: 1, company_id: 1 }
      );
      console.log(req.user);
      console.log(machinedata);
      if (req.params.machine == "all" || machinedata.admin === req.user.id) {
        fs.createReadStream(path)
          .pipe(csv({}))
          .on("data", (data) => results.push(data))
          .on("end", async () => {
            //console.log(results.length);
            for (i = 0; i < results.length; i++) {
              if (
                results[i].card_number == "" ||
                results[i].card_number == "NA" ||
                results[i].card_number == "#N/A"
              ) {
                console.log(`card_no is not available`);
                console.log(results[i]);
                const r = reject(results[i]);
              } else if (
                results[i].employee_name == "" ||
                results[i].employee_name == "NA" ||
                results[i].employee_name == "#N/A"
              ) {
                console.log(`employee_name is not available`);
                console.log(results[i]);
                const r = reject(results[i]);
              } else if (
                results[i].email == "" ||
                results[i].email == "NA" ||
                results[i].email == "#N/A"
              ) {
                console.log(`email is not available`);
                console.log(results[i]);
                const r = reject(results[i]);
              } else if (
                results[i].employee_id == "" ||
                results[i].employee_id == "NA" ||
                results[i].employee_id == "#N/A"
              ) {
                console.log(`employee_id is not available`);
                console.log(results[i]);
                const r = reject(results[i]);
              } else if (
                results[i].monthly_limit == " " ||
                results[i].monthly_limit == "" ||
                results[i].monthly_limit == "NA" ||
                results[i].monthly_limit == "#N/A"
              ) {
                console.log(`employee_id is not available`);
                console.log(results[i]);
                const r = reject(results[i]);
              } else {
                console.log(machinedata.admin);
                console.log(results[i].card_number);
                try {
                  const employee = await Employee.findOne({
                    admin_id: req.user.id,
                    card_number: results[i].card_number,
                  });
                  console.log(
                    employee.id +
                      " " +
                      employee.employee_name +
                      " " +
                      employee.card_number +
                      " " +
                      employee.machine_id
                  );

                  //, { machine_id: 1, total_slots: 1, admin: 1, company_id: 1 }

                  const credittable = new Credittable(results[i]);
                  credittable.admin_id = req.user.id; ////here you u can edit when you creating employee upload byr local admin
                  //credittable.iempid = "2" + req.user.company_id + results[i].employee_id; //change p13 "22/09"
                  credittable.admin_id = req.user.id;
                  credittable.super_admin = req.user.superadmin;
                  credittable.company_id = req.user.company_id;
                  credittable.machine_id = req.params.machine;
                  credittable.empid = employee.id;
                  credittable.active_status = true;
                  const enterdata = await credittable.save();
                  console.log(enterdata);
                  const r = succ(results[i]);
                } catch (e) {
                  if (e.code == 11000) {
                    const r = reject(results[i]);
                  }
                }
              }
            }
            // const r= reject();
            console.log(storeddata.length);
            console.log(rejectdata);

            console.log(rejectdata.length);
            if (rejectdata.length > 0) {
              res.status(200).json({
                dataupload: "error",
                reject_data: rejectdata,
                stored_data: storeddata.length,
              });
            } else {
              res
                .status(200)
                .json({ dataupload: "success", data: storeddata.length });
            }
          });
      } else {
        res.status(200).json({
          dataupload: "failed",
          error: "you don't have permission add product to this machine",
        });
      }
    } catch (e) {
      if (!e.length == 0) {
        //console.log("if");
        res.status(200).json({ dataupload: "failed", error: e });
      } else {
        //console.log("else");
        console.log(e);
        res
          .status(200)
          .json({ dataupload: "failed", error: "machine not found " });
      }
    }

    ///////////////////////////////////data_entry code //////////////////////////////
  }
);
app.get("/credit/snaxsmart/:machine", async (req, res) => {
  let currentDate = new Date();
  const year = currentDate.getFullYear();
  const month = currentDate.getMonth() + 1; // Months are zero-based, so we add 1
  const day = currentDate.getDate();
  const hours = currentDate.getHours();
  const minutes = currentDate.getMinutes();
  const seconds = currentDate.getSeconds();
  let current_date =  `${day}/${month}/${year}`
  let current_Time = `${hours}:${minutes}:${seconds}`
  console.log("-------------------------time & date changes--------------------------------------------------");
  console.log(current_date);
  console.log(current_Time);
  console.log("-------------------------time & date changes--------------------------------------------------")
  if (!(req.query.card == undefined)) {
    // console.log(req.query);
    // console.log(req.params);
    console.log(
      "------------------------------------------------credit valid request-----------------------------------------------"
    );
    try {
      const card = req.query.card;
      const slote = req.query.item;
      // const ma= req.params.machine;
      console.log(
        `Request No.1 comes for:~ machine=${req.params.machine} card=${req.query.card}| item=${req.query.item}| date=${req.query.date}| time= ${req.query.time}| serial=${req.query.serial}| status= ${req.query.status}| price=${req.query.price}| ~~~~~~~~~~~~`
      );
      /// query data /////
      console.log(req.params.machine);
      console.log(req.query);
      const mdata = await Machine.findOne(
        { machine_id: req.params.machine },
        { total_slots: 0, slots_name: 0, created_date: 0, __v: 0 }
      );
      // console.log(mdata.admin);
      dv = Date.now();
      const edata = await Credittable.findOne(
        {
          $and: [
            { card_number: card },
            { admin_id: mdata.admin },
            { active_status: true },
          ],
        },
        { cost_center_owner_name: 0, machine_id: 0, __v: 0, created_date: 0 }
      ).sort({ created_date: -1 });
      //,{credit_validity_to:{$lte:Date.now()}},{credit_validity_from:{$gte:Date.now()}}
      const pdata = await Product.findOne(
        {
          $and: [
            { slote_number: slote },
            { machine_id: req.params.machine },
            { company_id: mdata.company_id },
          ],
        },
        { quantity: 0, created_date: 0, __v: 0 }
      );

      console.log(mdata);
      console.log("-----------------mdata-----------")
      console.log(edata);
      console.log("-----------------edata-----------")
      console.log(pdata);
      console.log("-----------------pdata-----------")


      if (edata && edata.credit_balance >= pdata.item_price) {
        /////////////////////transaction creation code ///////////////////
        const transaction = new Transaction();
        transaction.teid = edata.id;
        transaction.titem = pdata.id;
        transaction.tdate = current_date;
        transaction.ttime = current_Time;
        transaction.tstatus = req.query.status;
        transaction.tserial = req.query.serial;
        transaction.card_no = req.query.card;
        transaction.admin_id = edata.admin_id;
        transaction.super_admin = edata.super_admin;
        transaction.local_admin = edata.local_admin;
        transaction.machine_id = mdata.machine_id;
        transaction.price = pdata.item_price;
        transaction.credit_wallet = edata.id;
        transaction.credit_balance = edata.credit_balance - pdata.item_price;

        transaction.machine_id = req.params.machine;

        //console.log(transaction);
        transaction
          .save()
          .then((d) => {
            const pendingstatus = new Pendingstatus();
            pendingstatus.machine_id = req.params.machine;
            pendingstatus.transaction_id = d.id;
            pendingstatus.card_number = req.query.card;
            pendingstatus.email = edata.email;
            pendingstatus.employee_name = edata.employee_name;
            pendingstatus.install_location = mdata.install_location;
            pendingstatus.manager_email = edata.manager_email;
            pendingstatus.employee_id = edata.employee_id;
            pendingstatus.item_description = pdata.item_description;
            pendingstatus.tdate = current_date;
            pendingstatus.ttime = current_Time;
            pendingstatus.slote_number = slote;
            pendingstatus.item_price = pdata.item_price;
            pendingstatus.price = pdata.item_price;
            pendingstatus.credit_wallet = edata.id;
            pendingstatus.credit_balance =
              edata.credit_balance - pdata.item_price;
            pendingstatus
              .save()
              .then((p) => {
                // console.log(p);
                // console.log(d);
                //-------------- currently email notification only on for this machine -------------------//
                if(p.machine_id === "SVZBLR0012"){
                  email.add(edata, d, pdata, mdata);
                }
                // ---------------------------------------------------------------------------------------//
                edata.credit_balance = edata.credit_balance - pdata.item_price;
                edata.transaction_count += 1;
                console.log(edata);
                edata
                  .save()
                  .then((d) => {
                    res.status(200).send("success");
                  })
                  .catch((e) => {
                    res.status(200).send("fail");
                    console.log("Error in updating credit_balance");
                    console.log(e);
                  });
              })
              .catch((e) => {
                res.status(200).send("fail");
                console.log("Error in saving pendingstatus");
                console.log(e);
              });
          })
          .catch((e) => {
            res.status(200).send("fail");
            console.log("Error in saving Transaction");
            console.log(e);
          });
        ////////////////////transaction creation code end /////////////////////////
      } else {
        const rejectedcard = new Rejectedcard();
        rejectedcard.tdate = current_date;
        rejectedcard.ttime = current_Time;
        rejectedcard.card_no = req.query.card;
        rejectedcard.admin_id = mdata.admin_id;
        rejectedcard.super_admin = mdata.super_admin;
        rejectedcard.local_admin = mdata.local_admin;
        rejectedcard.machine_id = req.params.machine;
        rejectedcard.error = "Invalid Card";

        //console.log(transaction);
        rejectedcard.save().then((d) => {
          console.log(d);
          console.log("Invalid Card No.");
          res.status(200).send("fail");
        });
      }
    } catch (e) {
      const rejectedcard = new Rejectedcard();
      rejectedcard.tdate = current_date;
      rejectedcard.ttime = current_Time;
      rejectedcard.card_no = req.query.card;
      rejectedcard.admin_id = "N/A";
      rejectedcard.super_admin = "N/A";
      rejectedcard.local_admin = "N/A";
      rejectedcard.machine_id = req.params.machine;
      rejectedcard.error = e;
      //console.log(transaction);
      rejectedcard.save().then((d) => {
        console.log(d);
        console.log("Server Internal problem");
        console.log(e);
        res.status(200).send("fail");
      });
    }
  } else {
    console.log(
      "-------------------------------------ACK request----------------------------------"
    );
    console.log(`Request no.2 is ACK =${req.url}`);
    var strg = String(req.url);
    strg = strg.search("VEND,SUCCESS");
    if (!(strg == "-1")) {
      //console.log(true);
      //console.log(strg);

      try {
        const pending = await Pendingstatus.findOne({
          $and: [{ machine_id: req.params.machine }, { status: "InProcess" }],
        })
          .sort({ created_date: -1 })
          .limit(1);

        console.log("pending data fetched successfully");
        //console.log(pending);

        // if (pending.machine_id == "SVZBLR0001") {
        //   email.juniperEmail(pending);
        // } else {
          // email.pendingconfirm(pending);
        // }

        const transaction = await Transaction.findOneAndUpdate(
          { $and: [{ id: pending.transaction_id }, { status: "InProcess" }] },
          { $set: { status: "Completed" } }
        ).sort({ created_date: -1 });
        console.log("transaction modified data fetched successfully");
        //console.log(transaction);
        pending.status = "Completed";
        pending.error = req.url.slice(21);

        pending
          .save()
          .then((p) => {
            console.log("pending status modified data fetched successfully");
            //console.log(p);
            res.status(200).send("success");
          })
          .catch((e) => {
            res.status(200).send("success");
            console.log("Error in saving pendingstatus");
            console.log(e);
          });
        //const pending = await Pendingstatus.findOne({machine_id: req.params.machine});
      } catch (e) {
        console.log("error in find pending data :" + e);
      }
    } else {
      console.log(false);
      console.log(strg);
      try {
        const pending = await Pendingstatus.findOneAndUpdate(
          {
            $and: [{ machine_id: req.params.machine }, { status: "InProcess" }],
          },
          { $set: { status: "Failed", error: req.url.slice(21) } }
        ).sort({ created_date: -1 });
        res.status(200).send("success");
      } catch (e) {
        console.log(e);
        console.log(pending);
        res.status(200).send("success");
      }
    }
  }
});
app.get("/credit/h/snaxsmart/:machine", async (req, res) => {
  console.log(req.url);
  if (!(req.query.card == undefined)) {
    console.log(req.query.card);
    req.query.card = parseInt(req.query.card, 16);
    console.log(req.query.card);
    console.log(req.query);
    console.log(req.params);
    console.log(
      "------------------------------------------------valid request-----------------------------------------------"
    );
    try {
      const card = req.query.card;
      const slote = req.query.item;
      // const ma= req.params.machine;
      console.log(
        `Request No.1 comes for:~ machine=${req.params.machine} card=${req.query.card}| item=${req.query.item}| date=${req.query.date}| time= ${req.query.time}| serial=${req.query.serial}| status= ${req.query.status}| price=${req.query.price}| ~~~~~~~~~~~~`
      );
      /// query data /////
      // console.log(req.params.machine);
      // console.log(req.query);
      const mdata = await Machine.findOne(
        { machine_id: req.params.machine },
        { total_slots: 0, slots_name: 0, created_date: 0, __v: 0 }
      );
      const edata = await Employee.findOne(
        { $and: [{ card_number: card }, { company_id: mdata.company_id }] },
        { cost_center_owner_name: 0, machine_id: 0, __v: 0, created_date: 0 }
      );
      const pdata = await Product.findOne(
        {
          $and: [
            { slote_number: slote },
            { machine_id: req.params.machine },
            { company_id: mdata.company_id },
          ],
        },
        { quantity: 0, created_date: 0, __v: 0 }
      );
      //  console.log(mdata);
      //  console.log(edata);
      //  console.log(pdata);
      if (edata) {
        /////////////////////transaction creation code ///////////////////
        const transaction = new Transaction();
        transaction.teid = edata.id;
        transaction.titem = pdata.id;
        transaction.tdate = req.query.date;
        transaction.ttime = req.query.time;
        transaction.tstatus = req.query.status;
        transaction.tserial = req.query.serial;
        transaction.price = req.query.price;
        transaction.card_no = req.query.card;
        transaction.admin_id = edata.admin_id;
        transaction.super_admin = edata.super_admin;
        transaction.local_admin = edata.local_admin;
        transaction.machine_id = req.params.machine;
        //console.log(transaction);
        transaction
          .save()
          .then((d) => {
            // email.add(edata, d, pdata, mdata);
            res.setHeader("cache-control", "no-cache");
            res.setHeader("content-type", "text/html;charset=ISO-8859-1");
            res.status(200).send("success");
            console.log("Send response : success");
            //console.log(d);
          })
          .catch((e) => {
            res.setHeader("cache-control", "no-cache");
            res.setHeader("content-type", "text/html;charset=ISO-8859-1");
            res.status(200).send("invalid card");
            console.log("Error in saving Transaction");
            console.log(e);
          });
        ////////////////////transaction creation code end /////////////////////////
      } else {
        const rejectedcard = new Rejectedcard();
        rejectedcard.tdate = req.query.date;
        rejectedcard.ttime = req.query.time;
        rejectedcard.card_no = req.query.card;
        rejectedcard.admin_id = mdata.admin_id;
        rejectedcard.super_admin = mdata.super_admin;
        rejectedcard.local_admin = mdata.local_admin;
        rejectedcard.machine_id = req.params.machine;
        rejectedcard.error = "Invalid Card";
        //console.log(transaction);
        rejectedcard.save().then((d) => {
          res.setHeader("cache-control", "no-cache");
          res.setHeader("content-type", "text/html;charset=ISO-8859-1");
          console.log("Invalid Card No.");
          res.status(200).send("invalid card");
        });
      }
    } catch (e) {
      const rejectedcard = new Rejectedcard();
      rejectedcard.tdate = req.query.date;
      rejectedcard.ttime = req.query.time;
      rejectedcard.card_no = req.query.card;
      rejectedcard.admin_id = "N/A";
      rejectedcard.super_admin = "N/A";
      rejectedcard.local_admin = "N/A";
      rejectedcard.machine_id = req.params.machine;
      rejectedcard.error = e;
      //console.log(transaction);
      rejectedcard.save().then((d) => {
        console.log(d);
        console.log("Server Internal problem");
        console.log(e);
        res.setHeader("cache-control", "no-cache");
        res.setHeader("content-type", "text/html;charset=ISO-8859-1");
        res.status(200).send("invalid card");
      });
    }
  } else {
    console.log(
      "-------------------------------------ACK request----------------------------------"
    );
    console.log(`Request no.2 is ACK =`);
    console.log(req.query);
    res.status(200).send("success");
  }
});
//TODO: Credit Upload, Vend From Credit API And JSON AND Dowanload CSV Report code  ////////////////////////////////////////////////////////////////////
//TODO: Normal Vend API for GVC and Smartvendz Vend Controller code ////////////////////////////////////////////////////////////////////////////////////
app.get("/snaxsmart/:machine", async (req, res) => {
  if (!(req.query.card == undefined)) {
    // console.log(req.query);
    // console.log(req.params);
    console.log(
      "------------------------------------------------valid request-----------------------------------------------"
    );
    try {
      const card = req.query.card;
      const slote = req.query.item;
      // const ma= req.params.machine;
      console.log(
        `Request No.1 comes for:~ machine=${req.params.machine} card=${req.query.card}| item=${req.query.item}| date=${req.query.date}| time= ${req.query.time}| serial=${req.query.serial}| status= ${req.query.status}| price=${req.query.price}| ~~~~~~~~~~~~`
      );
      /// query data /////
      // console.log(req.params.machine);
      // console.log(req.query);
      const mdata = await Machine.findOne(
        { machine_id: req.params.machine },
        { total_slots: 0, slots_name: 0, created_date: 0, __v: 0 }
      );
      const edata = await Employee.findOne(
        { $and: [{ card_number: card }] },
        { cost_center_owner_name: 0, machine_id: 0, __v: 0, created_date: 0 }
      );
      const pdata = await Product.findOne(
        {
          $and: [
            { slote_number: slote },
            { machine_id: req.params.machine },
            { company_id: mdata.company_id },
          ],
        },
        { quantity: 0, created_date: 0, __v: 0 }
      );

      console.log(mdata);
      console.log("eee", edata);
      console.log(pdata);
      if (edata) {
        /////////////////////transaction creation code ///////////////////
        const transaction = new Transaction();
        transaction.teid = edata.id;
        transaction.titem = pdata.id;
        transaction.tdate = req.query.date;
        transaction.ttime = req.query.time;
        transaction.tstatus = req.query.status;
        transaction.tserial = req.query.serial;
        transaction.price = req.query.price;
        transaction.card_no = req.query.card;
        transaction.admin_id = edata.admin_id;
        transaction.super_admin = edata.super_admin;
        transaction.local_admin = edata.local_admin;
        transaction.machine_id = req.params.machine;

        //console.log(transaction);
        transaction
          .save()
          .then((d) => {
            const pendingstatus = new Pendingstatus();
            pendingstatus.machine_id = req.params.machine;
            pendingstatus.transaction_id = d.id;
            pendingstatus.card_number = req.query.card;
            pendingstatus.email = edata.email;
            pendingstatus.employee_name = edata.employee_name;
            pendingstatus.install_location = mdata.install_location;
            pendingstatus.manager_email = edata.manager_email;
            pendingstatus.employee_id = edata.employee_id;
            pendingstatus.item_description = pdata.item_description;
            pendingstatus.tdate = req.query.date;
            pendingstatus.ttime = req.query.time;
            pendingstatus.slote_number = slote;
            pendingstatus.item_price = pdata.item_price;
            pendingstatus
              .save()
              .then((p) => {
                // console.log(p);
                // console.log(d);
                // email.add(edata, d, pdata, mdata);
                res.status(200).send("success");
              })
              .catch((e) => {
                res.status(200).send("fail");
                console.log("Error in saving pendingstatus");
                console.log(e);
              });
          })
          .catch((e) => {
            res.status(200).send("fail");
            console.log("Error in saving Transaction");
            console.log(e);
          });
        ////////////////////transaction creation code end /////////////////////////
      } else {
        const rejectedcard = new Rejectedcard();
        rejectedcard.tdate = req.query.date;
        rejectedcard.ttime = req.query.time;
        rejectedcard.card_no = req.query.card;
        rejectedcard.admin_id = mdata.admin_id;
        rejectedcard.super_admin = mdata.super_admin;
        rejectedcard.local_admin = mdata.local_admin;
        rejectedcard.machine_id = req.params.machine;
        rejectedcard.error = "Invalid Card";

        //console.log(transaction);
        rejectedcard.save().then((d) => {
          console.log(d);
          console.log("Invalid Card No.");
          res.status(200).send("fail");
        });
      }
    } catch (e) {
      const rejectedcard = new Rejectedcard();
      rejectedcard.tdate = req.query.date;
      rejectedcard.ttime = req.query.time;
      rejectedcard.card_no = req.query.card;
      rejectedcard.admin_id = "N/A";
      rejectedcard.super_admin = "N/A";
      rejectedcard.local_admin = "N/A";
      rejectedcard.machine_id = req.params.machine;
      rejectedcard.error = e;
      //console.log(transaction);
      rejectedcard.save().then((d) => {
        console.log(d);
        console.log("Server Internal problem");
        console.log(e);
        res.status(200).send("fail");
      });
    }
  } else {
    console.log(
      "-------------------------------------ACK request----------------------------------"
    );
    console.log(`Request no.2 is ACK =${req.url}`);
    var strg = String(req.url);
    strg = strg.search("VEND,SUCCESS");
    if (!(strg == "-1")) {
      //console.log(true);
      //console.log(strg);

      try {
        const pending = await Pendingstatus.findOne({
          $and: [{ machine_id: req.params.machine }, { status: "InProcess" }],
        })
          .sort({ created_date: -1 })
          .limit(1);

        console.log("pending data fetched successfully");
        //console.log(pending);

        if (pending.machine_id == "SVZBLR0001") {
          email.juniperEmail(pending);
        } else {
          // email.pendingconfirm(pending);
        }

        const transaction = await Transaction.findOneAndUpdate(
          { $and: [{ id: pending.transaction_id }, { status: "InProcess" }] },
          { $set: { status: "Completed" } }
        ).sort({ created_date: -1 });
        console.log("transaction modified data fetched successfully");
        //console.log(transaction);
        pending.status = "Completed";
        pending.error = req.url.slice(21);

        pending
          .save()
          .then((p) => {
            console.log("pending status modified data fetched successfully");
            //console.log(p);
            res.status(200).send("success");
          })
          .catch((e) => {
            res.status(200).send("success");
            console.log("Error in saving pendingstatus");
            console.log(e);
          });
        //const pending = await Pendingstatus.findOne({machine_id: req.params.machine});
      } catch (e) {
        console.log("error in find pending data :" + e);
      }
    } else {
      console.log(false);
      console.log(strg);
      try {
        const pending = await Pendingstatus.findOneAndUpdate(
          {
            $and: [{ machine_id: req.params.machine }, { status: "InProcess" }],
          },
          { $set: { status: "Failed", error: req.url.slice(21) } }
        ).sort({ created_date: -1 });
        res.status(200).send("success");
      } catch (e) {
        console.log(e);
        console.log(pending);
        res.status(200).send("success");
      }
    }
  }
});
app.get("/h/snaxsmart/:machine", async (req, res) => {
  console.log(req.url);
  if (!(req.query.card == undefined)) {
    console.log(req.query.card);
    req.query.card = parseInt(req.query.card, 16);
    console.log(req.query.card);
    console.log(req.query);
    console.log(req.params);
    console.log(
      "------------------------------------------------valid request-----------------------------------------------"
    );
    try {
      const card = req.query.card;
      const slote = req.query.item;
      // const ma= req.params.machine;
      console.log(
        `Request No.1 comes for:~ machine=${req.params.machine} card=${req.query.card}| item=${req.query.item}| date=${req.query.date}| time= ${req.query.time}| serial=${req.query.serial}| status= ${req.query.status}| price=${req.query.price}| ~~~~~~~~~~~~`
      );
      /// query data /////
      // console.log(req.params.machine);
      // console.log(req.query);
      const mdata = await Machine.findOne(
        { machine_id: req.params.machine },
        { total_slots: 0, slots_name: 0, created_date: 0, __v: 0 }
      );
      const edata = await Employee.findOne(
        { $and: [{ card_number: card }, { company_id: mdata.company_id }] },
        { cost_center_owner_name: 0, machine_id: 0, __v: 0, created_date: 0 }
      );
      const pdata = await Product.findOne(
        {
          $and: [
            { slote_number: slote },
            { machine_id: req.params.machine },
            { company_id: mdata.company_id },
          ],
        },
        { quantity: 0, created_date: 0, __v: 0 }
      );

      //  console.log(mdata);
      //  console.log(edata);
      //  console.log(pdata);
      if (edata) {
        /////////////////////transaction creation code ///////////////////
        const transaction = new Transaction();
        transaction.teid = edata.id;
        transaction.titem = pdata.id;
        transaction.tdate = req.query.date;
        transaction.ttime = req.query.time;
        transaction.tstatus = req.query.status;
        transaction.tserial = req.query.serial;
        transaction.price = req.query.price;
        transaction.card_no = req.query.card;
        transaction.admin_id = edata.admin_id;
        transaction.super_admin = edata.super_admin;
        transaction.local_admin = edata.local_admin;
        transaction.machine_id = req.params.machine;
        //console.log(transaction);
        transaction
          .save()
          .then((d) => {
            // email.add(edata, d, pdata, mdata);
            res.setHeader("cache-control", "no-cache");
            res.setHeader("content-type", "text/html;charset=ISO-8859-1");
            res.status(200).send("success");
            console.log("Send response : success");

            //console.log(d);
          })
          .catch((e) => {
            res.setHeader("cache-control", "no-cache");
            res.setHeader("content-type", "text/html;charset=ISO-8859-1");
            res.status(200).send("invalid card");
            console.log("Error in saving Transaction");
            console.log(e);
          });
        ////////////////////transaction creation code end /////////////////////////
      } else {
        const rejectedcard = new Rejectedcard();
        rejectedcard.tdate = req.query.date;
        rejectedcard.ttime = req.query.time;
        rejectedcard.card_no = req.query.card;
        rejectedcard.admin_id = mdata.admin_id;
        rejectedcard.super_admin = mdata.super_admin;
        rejectedcard.local_admin = mdata.local_admin;
        rejectedcard.machine_id = req.params.machine;
        rejectedcard.error = "Invalid Card";
        //console.log(transaction);
        rejectedcard.save().then((d) => {
          // console.log(d);
          res.setHeader("cache-control", "no-cache");
          res.setHeader("content-type", "text/html;charset=ISO-8859-1");
          console.log("Invalid Card No.");
          res.status(200).send("invalid card");
        });
      }
    } catch (e) {
      const rejectedcard = new Rejectedcard();
      rejectedcard.tdate = req.query.date;
      rejectedcard.ttime = req.query.time;
      rejectedcard.card_no = req.query.card;
      rejectedcard.admin_id = "N/A";
      rejectedcard.super_admin = "N/A";
      rejectedcard.local_admin = "N/A";
      rejectedcard.machine_id = req.params.machine;
      rejectedcard.error = e;
      //console.log(transaction);
      rejectedcard.save().then((d) => {
        console.log(d);
        console.log("Server Internal problem");
        console.log(e);
        res.status(200).send("fail");
      });
    }
  } else {
    console.log(
      "-------------------------------------ACK request----------------------------------"
    );
    console.log(`Request no.2 is ACK =`);
    console.log(req.query);
    res.status(200).send("success");
  }
});
//TODO: Normal Vend API for GVC and Smartvendz Vend Controller code ////////////////////////////////////////////////////////////////////////////////////
//TODO: Napkin Vending Machine QR Code for vending API Code/////////////////////////////////////////////////////////////////////////////////////////////
app.post("/napkinvendmachine/response/phonepe", async (req, res) => {
  async function callBackDataStoreDB(storeddata, np, rf, vs) {
    const callbackdata = new Callbacktransaction();
    (callbackdata.success = storeddata.success),
      (callbackdata.code = storeddata.code),
      (callbackdata.message = storeddata.message),
      (callbackdata.merchantId = storeddata.data.merchantId),
      (callbackdata.transactionId = storeddata.data.transactionId),
      (callbackdata.providerReferenceId = storeddata.data.providerReferenceId),
      (callbackdata.amount = storeddata.data.amount),
      (callbackdata.paymentState = storeddata.data.paymentState),
      (callbackdata.payResponseCode = storeddata.data.payResponseCode),
      (callbackdata.storeId = storeddata.data.storeId),
      (callbackdata.terminalId = storeddata.data.terminalId),
      (callbackdata.napkinjob = np);
    callbackdata.refundstatus = rf;
    callbackdata.vendstatus = vs;
    let savetransaction = await callbackdata.save();
    return savetransaction;
  }
  async function createRefund(tid) {
    const refund = new Refund();
    refund.mtransactionId = tid;
    const refundSave = await refund.save();
    rid = refundSave.id;
    return rid;
  }
  async function storeRefund(data, rid) {
    findrefund = await Refund.findOne({ _id: rid });
    (findrefund.rsuccess = data.success),
      (findrefund.rcode = data.code),
      (findrefund.rmessage = data.message),
      (findrefund.rmerchantId = data.data.merchantId),
      (findrefund.rtransactionId = tid),
      (findrefund.rproviderReferenceId = data.data.providerReferenceId),
      (findrefund.ramount = data.data.amount),
      (findrefund.rpayResponseCode = data.data.payResponseCode),
      (findrefund.rstatus = data.data.status);
    d = await findrefund.save();
    //console.log("Refund Data.....");
    // console.log(d);
    return d;
  }
  //console.log(req.params);
  //console.log(req.headers);
  const delayTime = 10000;
  console.log(req.body);
  console.log("********************************************************");
  const a = 500; //change p13
  var np;
  var rf = "";
  var vs = "";
  var tid;
  saltKey = "0afb5aa4-2206-4ea0-b081-fb94270b8c96";
  saltIndex = 1;
  transactionId = req.body.data.transactionId;
  merchantId = req.body.data.merchantId;
  amount = req.body.data.amount;
  console.log(transactionId + " " + merchantId + " " + amount);
  const checksum = cjs
    .SHA256(merchantId + transactionId + amount + saltKey)
    .toString(cjs.enc.Hex);
  //console.log("Api checksum: ", checksum);
  xVerify = checksum + "###" + saltIndex;
  console.log(xVerify);
  if (xVerify == req.headers["x-verify"]) {
    console.log("X-Verify is correct.....");
    if (amount == a) {
      console.log("amount==a");
      console.log("Transaction with Correct Amount Found....");
      np = false;
      rf = "NONE";
      vs = "VendPending";
      const svtr = await callBackDataStoreDB(req.body, np, rf, vs);
      console.log("********************************************************");
      console.log(svtr.id);
      console.log("Flow end with ADD JOB SUCCESSFULLY");
    } else if (amount > a) {
      const rfAmount = amount - a;
      console.log("amount>a");
      np = false;
      rf = "Refundable Amount is " + rfAmount;
      vs = "VendPending";
      const svtr = await callBackDataStoreDB(req.body, np, rf, vs);
      console.log("********************************************************");
      // console.log(svtr);
      /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:REFUND 1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
      console.log("BLOCK:REFUND 1");
      const rid = await createRefund(svtr.id);
      console.log(rid);

      console.log("Calling Refund API");
      const url = "mercury-uat.phonepe.com";
      const path = "/v3/credit/backToSource";
      saltKey = "0afb5aa4-2206-4ea0-b081-fb94270b8c96";
      saltIndex = 1;
      const decodedRequest = {
        merchantId: merchantId,
        transactionId: rid,
        providerReferenceId: svtr.providerReferenceId,
        amount: rfAmount,
        message: "Incorrect Amount",
      };
      // console.log(decodedRequest);
      let encodedRequest =
        decodedRequest === ""
          ? ""
          : Buffer.from(JSON.stringify(decodedRequest)).toString("base64");
      generateChecksum(encodedRequest, path, saltKey, saltIndex);
      function generateChecksum(encodedRequest, path, saltKey, keyIndex) {
        const checksum = cjs
          .SHA256(encodedRequest + path + saltKey)
          .toString(cjs.enc.Hex);
        // console.log("base64 request:", encodedRequest, "Api checksum: ", checksum);
        xVerify = checksum + "###" + keyIndex;
      }
      if (encodedRequest === "") body1 = "";
      else body1 = JSON.stringify({ request: encodedRequest });
      options = {
        method: "POST",
        url: "https://mercury-uat.phonepe.com/v3/credit/backToSource",
        headers: {
          "Content-Type": "application/json",
          "X-VERIFY": xVerify,
        },
        body: body1,
      };
      console.log("Request data:"); //comment
      console.log(options); //comment

      request(options, async function (error, response, body) {
        if (error) {
          /////////need to handle here if error comes///////
          console.log(error);
        } else {
          var data = JSON.parse(body);
          console.log("Level 1 :Response Body:"); //comment
          //console.log(data);
          console.log("Level 1 :REFUND API RESPONSE: " + data.success);
          console.log(data.code);
          switch (data.code) {
            case "PAYMENT_SUCCESS":
              console.log("Level 1 :Refund Process Completed...");
              console.log(rid);
              const srfd = await storeRefund(data, rid);
              console.log(
                "Flow end with REFUND SUCCESSFULLY PAYMENT_SUCCESS : 1 "
              );
              break;

            case "PAYMENT_ERROR":
              console.log(rid);
              frfd = await storeRefund(data, rid);
              //console.log(svtr);
              /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:REFUND 2     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
              console.log("BLOCK:REFUND 2");
              const rid2 = await createRefund(svtr.id);
              console.log("Level 1: NEW REFUND ID GENERATED.."); /////////////////////////////////////
              console.log(rid2);
              //when request complete then add here code for call refund api again and handle errors and pending process
              console.log("Level 2: Calling Refund API");
              const url = "mercury-uat.phonepe.com";
              const path = "/v3/credit/backToSource";
              saltKey = "0afb5aa4-2206-4ea0-b081-fb94270b8c96";
              saltIndex = 1;
              const decodedRequest = {
                merchantId: merchantId,
                transactionId: rid2,
                providerReferenceId: svtr.providerReferenceId,
                amount: rfAmount,
                message: "Incorrect Amount",
              };
              // console.log(decodedRequest);
              let encodedRequest =
                decodedRequest === ""
                  ? ""
                  : Buffer.from(JSON.stringify(decodedRequest)).toString(
                      "base64"
                    );
              generateChecksum(encodedRequest, path, saltKey, saltIndex);
              function generateChecksum(
                encodedRequest,
                path,
                saltKey,
                keyIndex
              ) {
                const checksum = cjs
                  .SHA256(encodedRequest + path + saltKey)
                  .toString(cjs.enc.Hex);
                // console.log("base64 request:", encodedRequest, "Api checksum: ", checksum);
                xVerify = checksum + "###" + keyIndex;
              }
              if (encodedRequest === "") body1 = "";
              else body1 = JSON.stringify({ request: encodedRequest });
              options2 = {
                method: "POST",
                url: "https://mercury-uat.phonepe.com/v3/credit/backToSource",
                headers: {
                  "Content-Type": "application/json",
                  "X-VERIFY": xVerify,
                },
                body: body1,
              };
              console.log(" Level 2: Request data:"); //comment
              console.log(options2); //comment
              ////////////////////////////////////////////////////////////////////////////////////////////////time out//////////////////////////////////////////////////////////////////////////////////////////////////
              setTimeout(function () {
                request(options2, async function (error, response, body) {
                  if (error) {
                    /////////need to handle here if error comes///////
                    console.log(error);
                  } else {
                    var data = JSON.parse(body);
                    console.log("Level 2A :Response Body:"); //comment
                    //console.log(data);
                    console.log(
                      "Level 2A :REFUND API RESPONSE: " + data.success
                    );
                    console.log(data.code);
                    switch (data.code) {
                      case "PAYMENT_SUCCESS":
                        console.log("Level 2A :Refund Process Completed...");
                        console.log(rid2);
                        const srfd = await storeRefund(data, rid2);
                        console.log(
                          "Flow end with REFUND SUCCESSFULLY PAYMENT_SUCCESS : 2 "
                        );
                        break;

                      case "PAYMENT_ERROR":
                        console.log(rid2);
                        frfd = await storeRefund(data, rid2);
                        console.log(
                          "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                        );

                        //console.log(svtr);
                        /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:REFUND 3      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                        console.log("BLOCK:REFUND 3");
                        const rid3 = await createRefund(svtr.id);
                        console.log("Level 2A: NEW REFUND ID GENERATED.."); /////////////////////////////////////
                        console.log(rid3);
                        //when request complete then add here code for call refund api again and handle errors and pending process
                        //when request complete then add here code for call refund api again and handle errors and pending process
                        console.log("Level 2: Calling Refund API");
                        const url = "mercury-uat.phonepe.com";
                        const path = "/v3/credit/backToSource";
                        saltKey = "0afb5aa4-2206-4ea0-b081-fb94270b8c96";
                        saltIndex = 1;
                        const decodedRequest = {
                          merchantId: merchantId,
                          transactionId: rid3,
                          providerReferenceId: svtr.providerReferenceId,
                          amount: rfAmount,
                          message: "Incorrect Amount",
                        };
                        // console.log(decodedRequest);
                        let encodedRequest =
                          decodedRequest === ""
                            ? ""
                            : Buffer.from(
                                JSON.stringify(decodedRequest)
                              ).toString("base64");
                        generateChecksum(
                          encodedRequest,
                          path,
                          saltKey,
                          saltIndex
                        );
                        function generateChecksum(
                          encodedRequest,
                          path,
                          saltKey,
                          keyIndex
                        ) {
                          const checksum = cjs
                            .SHA256(encodedRequest + path + saltKey)
                            .toString(cjs.enc.Hex);
                          // console.log("base64 request:", encodedRequest, "Api checksum: ", checksum);
                          xVerify = checksum + "###" + keyIndex;
                        }
                        if (encodedRequest === "") body1 = "";
                        else
                          body1 = JSON.stringify({ request: encodedRequest });
                        options2 = {
                          method: "POST",
                          url: "https://mercury-uat.phonepe.com/v3/credit/backToSource",
                          headers: {
                            "Content-Type": "application/json",
                            "X-VERIFY": xVerify,
                          },
                          body: body1,
                        };
                        console.log(" Level 2: Request data:"); //comment
                        console.log(options2); //comment
                        ////////////////////////////////////////////////////////////////////////////////////////////////time out//////////////////////////////////////////////////////////////////////////////////////////////////
                        setTimeout(function () {
                          request(
                            options2,
                            async function (error, response, body) {
                              if (error) {
                                /////////need to handle here if error comes///////
                                console.log(error);
                              } else {
                                var data = JSON.parse(body);
                                console.log("Level 2A :Response Body:"); //comment
                                //console.log(data);
                                console.log(
                                  "Level 2A :REFUND API RESPONSE: " +
                                    data.success
                                );
                                console.log(data.code);
                                switch (data.code) {
                                  case "PAYMENT_SUCCESS":
                                    console.log(
                                      "Level 2A :Refund Process Completed..."
                                    );
                                    console.log(rid3);
                                    const srfd = await storeRefund(data, rid3);
                                    console.log(
                                      "Flow end with REFUND SUCCESSFULLY PAYMENT_SUCCESS : 2 "
                                    );
                                    break;

                                  case "PAYMENT_ERROR":
                                    console.log(rid3);
                                    frfd = await storeRefund(data, rid3);
                                    console.log(
                                      "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                    );
                                    /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                    console.log("BLOCK:PAYMENT_ERROR :END  1 ");
                                    //    //console.log(svtr);
                                    //    const rid3 = await createRefund(svtr.id);
                                    //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                    //    console.log(rid3);
                                    //when request complete then add here code for call refund api again and handle errors and pending process
                                    break;
                                  case "INTERNAL_SERVER_ERROR":
                                  case "TIMED_OUT":
                                  case "PAYMENT_PENDING":
                                    // case 'PAYMENT_ERROR'://need to remove
                                    console.log("Check Status API calling....");
                                    console.log(
                                      "Level 2A : Refund Process status : " +
                                        data.code
                                    );
                                    const prfd = await storeRefund(data, rid3);
                                    /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:Check_Status 3A      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                    console.log("BLOCK:Check_Status 3A");
                                    //console.log(prfd);
                                    //console.log(svtr.id);
                                    const checksum = cjs
                                      .SHA256(
                                        "/v3/transaction/" +
                                          merchantId +
                                          "/" +
                                          rid3 +
                                          "/status" +
                                          saltKey
                                      )
                                      .toString(cjs.enc.Hex);
                                    //console.log("Api checksum: ", checksum);
                                    xVerify = checksum + "###" + saltIndex;
                                    //console.log(xVerify);
                                    options = {
                                      method: "GET",
                                      url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                      headers: {
                                        "Content-Type": "application/json",
                                        "X-VERIFY": xVerify,
                                      },
                                    };
                                    console.log("Level 2A : Request data:"); //comment
                                    console.log(options); //comment
                                    ///////////////////////////////////////////////////////////////time out/////////////////////////////////////////////////////
                                    setTimeout(function () {
                                      request(
                                        options,
                                        async function (error, response, body) {
                                          if (error) {
                                            /////////need to handle here if error comes///////
                                            console.log(error);
                                          } else {
                                            var data = JSON.parse(body);
                                            console.log(
                                              " Level 2B :Check Status Response Body:"
                                            ); //comment
                                            //console.log(data);
                                            console.log(
                                              "Level 2B : Check Status API RESPONSE: " +
                                                data.success
                                            );
                                            console.log(data.code);
                                            switch (data.code) {
                                              case "PAYMENT_SUCCESS":
                                                console.log(
                                                  "Level 2B : Check Status Process Completed..."
                                                );
                                                console.log(rid3);
                                                const srfd = await storeRefund(
                                                  data,
                                                  rid3
                                                );
                                                console.log(
                                                  "Flow end with CHECK STATUS PAYMENT_SUCCESS : 3 "
                                                );
                                                break;

                                              case "PAYMENT_ERROR":
                                                console.log(rid3);
                                                frfd = await storeRefund(
                                                  data,
                                                  rid3
                                                );
                                                console.log(
                                                  "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                );
                                                /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3A:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                console.log(
                                                  "BLOCK:PAYMENT_ERROR :END  3A:1 "
                                                );
                                                //    //console.log(svtr);
                                                //    const rid4 = await createRefund(svtr.id);
                                                //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                //    console.log(rid4);
                                                //when request complete then add here code for call refund api again and handle errors and pending process
                                                break;

                                              case "INTERNAL_SERVER_ERROR":
                                              case "TIMED_OUT":
                                              case "PAYMENT_PENDING":
                                                /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@        BLOCK:Check_Status 3B     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                console.log(
                                                  "BLOCK:Check_Status 3B "
                                                );
                                                console.log(
                                                  "Level 2B : Refund Process status : " +
                                                    data.code
                                                );
                                                // console.log(data.data.transactionId);
                                                // console.log(data.data.providerReferenceId);
                                                const prfd = await storeRefund(
                                                  data,
                                                  rid3
                                                );
                                                //console.log(prfd);
                                                // console.log(svtr.id);
                                                const checksum = cjs
                                                  .SHA256(
                                                    "/v3/transaction/" +
                                                      merchantId +
                                                      "/" +
                                                      rid3 +
                                                      "/status" +
                                                      saltKey
                                                  )
                                                  .toString(cjs.enc.Hex);
                                                //console.log("Api checksum: ", checksum);
                                                xVerify =
                                                  checksum + "###" + saltIndex;
                                                //console.log(xVerify);
                                                const options = {
                                                  method: "GET",
                                                  url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                                  headers: {
                                                    "Content-Type":
                                                      "application/json",
                                                    "X-VERIFY": xVerify,
                                                  },
                                                };
                                                console.log(
                                                  " Level 2C :Request data:"
                                                ); //comment
                                                console.log(options); //comment
                                                /////////////////////////////////////////////time out///////////////////////////////////////////////////////////////////
                                                setTimeout(function () {
                                                  request(
                                                    options,
                                                    async function (
                                                      error,
                                                      response,
                                                      body
                                                    ) {
                                                      if (error) {
                                                        /////////need to handle here if error comes///////
                                                        console.log(error);
                                                      } else {
                                                        var data =
                                                          JSON.parse(body);
                                                        console.log(
                                                          " Level 2C :Check Status Response Body:"
                                                        ); //comment
                                                        // console.log(data.data.transactionId);
                                                        // console.log(data.data.providerReferenceId);
                                                        console.log(
                                                          "Level 2C :Check Status  API RESPONSE: " +
                                                            data.success
                                                        );
                                                        console.log(data.code);
                                                        switch (data.code) {
                                                          case "PAYMENT_SUCCESS":
                                                            console.log(
                                                              "Level 2C : Refund Process Completed..."
                                                            );
                                                            console.log(rid2);
                                                            const srfd =
                                                              await storeRefund(
                                                                data,
                                                                rid3
                                                              );
                                                            console.log(
                                                              "Flow end with CHECK_STATUS SUCCESSFULLY PAYMENT_SUCCESS : 4 "
                                                            );
                                                            break;
                                                          case "PAYMENT_ERROR":
                                                            console.log(rid3);
                                                            frfd =
                                                              await storeRefund(
                                                                data,
                                                                rid3
                                                              );
                                                            console.log(
                                                              "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                            );
                                                            /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3B:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                            console.log(
                                                              "BLOCK:PAYMENT_ERROR :END  3c:1 "
                                                            );
                                                            //    //console.log(svtr);
                                                            //    const rid3 = await createRefund(svtr.id);
                                                            //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                            //    console.log(rid3);
                                                            //when request complete then add here code for call refund api again and handle errors and pending process
                                                            break;

                                                          case "INTERNAL_SERVER_ERROR":
                                                          case "TIMED_OUT":
                                                          case "PAYMENT_PENDING":
                                                            /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@        BLOCK:Check_Status 3C     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                            console.log(
                                                              "BLOCK:Check_Status 3C "
                                                            );
                                                            console.log(
                                                              "Level 2B : Refund Process status : " +
                                                                data.code
                                                            );
                                                            // console.log(data.data.transactionId);
                                                            // console.log(data.data.providerReferenceId);
                                                            const prfd =
                                                              await storeRefund(
                                                                data,
                                                                rid3
                                                              );
                                                            //console.log(prfd);
                                                            // console.log(svtr.id);
                                                            const checksum = cjs
                                                              .SHA256(
                                                                "/v3/transaction/" +
                                                                  merchantId +
                                                                  "/" +
                                                                  rid3 +
                                                                  "/status" +
                                                                  saltKey
                                                              )
                                                              .toString(
                                                                cjs.enc.Hex
                                                              );
                                                            //console.log("Api checksum: ", checksum);
                                                            xVerify =
                                                              checksum +
                                                              "###" +
                                                              saltIndex;
                                                            //console.log(xVerify);
                                                            const options = {
                                                              method: "GET",
                                                              url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                                              headers: {
                                                                "Content-Type":
                                                                  "application/json",
                                                                "X-VERIFY":
                                                                  xVerify,
                                                              },
                                                            };
                                                            console.log(
                                                              " Level 2C :Request data:"
                                                            ); //comment
                                                            console.log(
                                                              options
                                                            ); //comment
                                                            /////////////////////////////////////////////time out///////////////////////////////////////////////////////////////////
                                                            setTimeout(
                                                              function () {
                                                                request(
                                                                  options,
                                                                  async function (
                                                                    error,
                                                                    response,
                                                                    body
                                                                  ) {
                                                                    if (error) {
                                                                      /////////need to handle here if error comes///////
                                                                      console.log(
                                                                        error
                                                                      );
                                                                    } else {
                                                                      var data =
                                                                        JSON.parse(
                                                                          body
                                                                        );
                                                                      console.log(
                                                                        " Level 2C :Check Status Response Body:"
                                                                      ); //comment
                                                                      // console.log(data.data.transactionId);
                                                                      // console.log(data.data.providerReferenceId);
                                                                      console.log(
                                                                        "Level 2C :Check Status  API RESPONSE: " +
                                                                          data.success
                                                                      );
                                                                      console.log(
                                                                        data.code
                                                                      );
                                                                      switch (
                                                                        data.code
                                                                      ) {
                                                                        case "PAYMENT_SUCCESS":
                                                                          console.log(
                                                                            "Level 2C : Refund Process Completed..."
                                                                          );
                                                                          console.log(
                                                                            rid2
                                                                          );
                                                                          const srfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          console.log(
                                                                            "Flow end with CHECK_STATUS SUCCESSFULLY PAYMENT_SUCCESS : 4 "
                                                                          );
                                                                          break;
                                                                        case "PAYMENT_ERROR":
                                                                          console.log(
                                                                            rid3
                                                                          );
                                                                          frfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          console.log(
                                                                            "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                          );
                                                                          /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3C:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                          console.log(
                                                                            "BLOCK:PAYMENT_ERROR :END  3c:1 "
                                                                          );
                                                                          //    //console.log(svtr);
                                                                          //    const rid3 = await createRefund(svtr.id);
                                                                          //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                                          //    console.log(rid3);
                                                                          //when request complete then add here code for call refund api again and handle errors and pending process
                                                                          break;

                                                                        case "INTERNAL_SERVER_ERROR":
                                                                        case "TIMED_OUT":
                                                                        case "PAYMENT_PENDING":
                                                                          /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:INTERNAL_SERVER_ERROR :END  3C:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                          console.log(
                                                                            rid2
                                                                          );
                                                                          frfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          console.log(
                                                                            frfd
                                                                          );
                                                                          console.log(
                                                                            "FINAL Flow end with CHECK_STATUS FAILED PAYMENT_ERROR,INTERNAL_SERVER_ERROR,TIMED_OUT,PAYMENT_PENDING : 3 "
                                                                          );
                                                                          //when request complete then add here code for call refund api again and handle errors and pending process
                                                                          break;
                                                                        default:
                                                                          console.log(
                                                                            rid3
                                                                          );
                                                                          frfd3 =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          console.log(
                                                                            frfd3
                                                                          );
                                                                          console.log(
                                                                            "Flow end with DEFAULT SWITCH CASE : 1 "
                                                                          );
                                                                      }
                                                                    }
                                                                  }
                                                                );
                                                              },
                                                              delayTime
                                                            );
                                                            break;
                                                          default:
                                                            console.log(rid3);
                                                            frfd3 =
                                                              await storeRefund(
                                                                data,
                                                                rid3
                                                              );
                                                            console.log(frfd3);
                                                            console.log(
                                                              "Flow end with DEFAULT SWITCH CASE : 1 "
                                                            );
                                                        }
                                                      }
                                                    }
                                                  );
                                                }, delayTime);
                                                break;
                                              default:
                                                console.log(rid3);
                                                frfd3 = await storeRefund(
                                                  data,
                                                  rid3
                                                );
                                                console.log(frfd3);
                                                console.log(
                                                  "Flow end with DEFAULT SWITCH CASE : 2 "
                                                );
                                            }
                                          }
                                        }
                                      );
                                    }, delayTime);
                                    break;
                                  default:
                                    console.log(rid3);
                                    frfd3 = await storeRefund(data, rid3);
                                    console.log(frfd3);
                                    console.log(
                                      "Flow end with DEFAULT SWITCH CASE : 3 "
                                    );
                                }
                              }
                            }
                          );
                        }, delayTime);
                        break;

                      case "INTERNAL_SERVER_ERROR":
                      case "TIMED_OUT":
                      case "PAYMENT_PENDING":
                        // case 'PAYMENT_ERROR'://need to remove
                        console.log("Check Status API calling....");
                        console.log(
                          "Level 2A : Refund Process status : " + data.code
                        );
                        const prfd = await storeRefund(data, rid2);
                        //console.log(prfd);
                        //console.log(svtr.id);
                        const checksum = cjs
                          .SHA256(
                            "/v3/transaction/" +
                              merchantId +
                              "/" +
                              rid2 +
                              "/status" +
                              saltKey
                          )
                          .toString(cjs.enc.Hex);
                        //console.log("Api checksum: ", checksum);
                        xVerify = checksum + "###" + saltIndex;
                        //console.log(xVerify);
                        options = {
                          method: "GET",
                          url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid2}/status`,
                          headers: {
                            "Content-Type": "application/json",
                            "X-VERIFY": xVerify,
                          },
                        };
                        console.log("Level 2A : Request data:"); //comment
                        console.log(options); //comment
                        ///////////////////////////////////////////////////////////////time out/////////////////////////////////////////////////////
                        setTimeout(function () {
                          request(
                            options,
                            async function (error, response, body) {
                              if (error) {
                                /////////need to handle here if error comes///////
                                console.log(error);
                              } else {
                                var data = JSON.parse(body);
                                console.log(
                                  " Level 2B :Check Status Response Body:"
                                ); //comment
                                //console.log(data);
                                console.log(
                                  "Level 2B : Check Status API RESPONSE: " +
                                    data.success
                                );
                                console.log(data.code);
                                switch (data.code) {
                                  case "PAYMENT_SUCCESS":
                                    console.log(
                                      "Level 2B : Check Status Process Completed..."
                                    );
                                    console.log(rid2);
                                    const srfd = await storeRefund(data, rid2);
                                    console.log(
                                      "Flow end with CHECK STATUS PAYMENT_SUCCESS : 3 "
                                    );
                                    break;

                                  case "PAYMENT_ERROR":
                                    console.log(rid2);
                                    frfd = await storeRefund(data, rid2);
                                    console.log(
                                      "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                    );

                                    //console.log(svtr);
                                    /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:REFUND 3      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                    console.log("BLOCK:REFUND 3");
                                    const rid3 = await createRefund(svtr.id);
                                    console.log(
                                      "Level 2A: NEW REFUND ID GENERATED.."
                                    ); /////////////////////////////////////
                                    console.log(rid3);
                                    //when request complete then add here code for call refund api again and handle errors and pending process
                                    //when request complete then add here code for call refund api again and handle errors and pending process
                                    console.log("Level 2: Calling Refund API");
                                    const url = "mercury-uat.phonepe.com";
                                    const path = "/v3/credit/backToSource";
                                    saltKey =
                                      "0afb5aa4-2206-4ea0-b081-fb94270b8c96";
                                    saltIndex = 1;
                                    const decodedRequest = {
                                      merchantId: merchantId,
                                      transactionId: rid3,
                                      providerReferenceId:
                                        svtr.providerReferenceId,
                                      amount: rfAmount,
                                      message: "Incorrect Amount",
                                    };
                                    // console.log(decodedRequest);
                                    let encodedRequest =
                                      decodedRequest === ""
                                        ? ""
                                        : Buffer.from(
                                            JSON.stringify(decodedRequest)
                                          ).toString("base64");
                                    generateChecksum(
                                      encodedRequest,
                                      path,
                                      saltKey,
                                      saltIndex
                                    );
                                    function generateChecksum(
                                      encodedRequest,
                                      path,
                                      saltKey,
                                      keyIndex
                                    ) {
                                      const checksum = cjs
                                        .SHA256(encodedRequest + path + saltKey)
                                        .toString(cjs.enc.Hex);
                                      // console.log("base64 request:", encodedRequest, "Api checksum: ", checksum);
                                      xVerify = checksum + "###" + keyIndex;
                                    }
                                    if (encodedRequest === "") body1 = "";
                                    else
                                      body1 = JSON.stringify({
                                        request: encodedRequest,
                                      });
                                    options2 = {
                                      method: "POST",
                                      url: "https://mercury-uat.phonepe.com/v3/credit/backToSource",
                                      headers: {
                                        "Content-Type": "application/json",
                                        "X-VERIFY": xVerify,
                                      },
                                      body: body1,
                                    };
                                    console.log(" Level 2: Request data:"); //comment
                                    console.log(options2); //comment
                                    ////////////////////////////////////////////////////////////////////////////////////////////////time out//////////////////////////////////////////////////////////////////////////////////////////////////
                                    setTimeout(function () {
                                      request(
                                        options2,
                                        async function (error, response, body) {
                                          if (error) {
                                            /////////need to handle here if error comes///////
                                            console.log(error);
                                          } else {
                                            var data = JSON.parse(body);
                                            console.log(
                                              "Level 2A :Response Body:"
                                            ); //comment
                                            //console.log(data);
                                            console.log(
                                              "Level 2A :REFUND API RESPONSE: " +
                                                data.success
                                            );
                                            console.log(data.code);
                                            switch (data.code) {
                                              case "PAYMENT_SUCCESS":
                                                console.log(
                                                  "Level 2A :Refund Process Completed..."
                                                );
                                                console.log(rid3);
                                                const srfd = await storeRefund(
                                                  data,
                                                  rid3
                                                );
                                                console.log(
                                                  "Flow end with REFUND SUCCESSFULLY PAYMENT_SUCCESS : 2 "
                                                );
                                                break;

                                              case "PAYMENT_ERROR":
                                                console.log(rid3);
                                                frfd = await storeRefund(
                                                  data,
                                                  rid3
                                                );
                                                console.log(
                                                  "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                );
                                                /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                console.log(
                                                  "BLOCK:PAYMENT_ERROR :END  1 "
                                                );
                                                //    //console.log(svtr);
                                                //    const rid3 = await createRefund(svtr.id);
                                                //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                //    console.log(rid3);
                                                //when request complete then add here code for call refund api again and handle errors and pending process
                                                break;
                                              case "INTERNAL_SERVER_ERROR":
                                              case "TIMED_OUT":
                                              case "PAYMENT_PENDING":
                                                // case 'PAYMENT_ERROR'://need to remove
                                                console.log(
                                                  "Check Status API calling...."
                                                );
                                                console.log(
                                                  "Level 2A : Refund Process status : " +
                                                    data.code
                                                );
                                                const prfd = await storeRefund(
                                                  data,
                                                  rid3
                                                );
                                                /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:Check_Status 3A      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                console.log(
                                                  "BLOCK:Check_Status 3A"
                                                );
                                                //console.log(prfd);
                                                //console.log(svtr.id);
                                                const checksum = cjs
                                                  .SHA256(
                                                    "/v3/transaction/" +
                                                      merchantId +
                                                      "/" +
                                                      rid3 +
                                                      "/status" +
                                                      saltKey
                                                  )
                                                  .toString(cjs.enc.Hex);
                                                //console.log("Api checksum: ", checksum);
                                                xVerify =
                                                  checksum + "###" + saltIndex;
                                                //console.log(xVerify);
                                                options = {
                                                  method: "GET",
                                                  url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                                  headers: {
                                                    "Content-Type":
                                                      "application/json",
                                                    "X-VERIFY": xVerify,
                                                  },
                                                };
                                                console.log(
                                                  "Level 2A : Request data:"
                                                ); //comment
                                                console.log(options); //comment
                                                ///////////////////////////////////////////////////////////////time out/////////////////////////////////////////////////////
                                                setTimeout(function () {
                                                  request(
                                                    options,
                                                    async function (
                                                      error,
                                                      response,
                                                      body
                                                    ) {
                                                      if (error) {
                                                        /////////need to handle here if error comes///////
                                                        console.log(error);
                                                      } else {
                                                        var data =
                                                          JSON.parse(body);
                                                        console.log(
                                                          " Level 2B :Check Status Response Body:"
                                                        ); //comment
                                                        //console.log(data);
                                                        console.log(
                                                          "Level 2B : Check Status API RESPONSE: " +
                                                            data.success
                                                        );
                                                        console.log(data.code);
                                                        switch (data.code) {
                                                          case "PAYMENT_SUCCESS":
                                                            console.log(
                                                              "Level 2B : Check Status Process Completed..."
                                                            );
                                                            console.log(rid3);
                                                            const srfd =
                                                              await storeRefund(
                                                                data,
                                                                rid3
                                                              );
                                                            console.log(
                                                              "Flow end with CHECK STATUS PAYMENT_SUCCESS : 3 "
                                                            );
                                                            break;

                                                          case "PAYMENT_ERROR":
                                                            console.log(rid3);
                                                            frfd =
                                                              await storeRefund(
                                                                data,
                                                                rid3
                                                              );
                                                            console.log(
                                                              "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                            );
                                                            /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3A:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                            console.log(
                                                              "BLOCK:PAYMENT_ERROR :END  3A:1 "
                                                            );
                                                            //    //console.log(svtr);
                                                            //    const rid4 = await createRefund(svtr.id);
                                                            //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                            //    console.log(rid4);
                                                            //when request complete then add here code for call refund api again and handle errors and pending process
                                                            break;

                                                          case "INTERNAL_SERVER_ERROR":
                                                          case "TIMED_OUT":
                                                          case "PAYMENT_PENDING":
                                                            /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@        BLOCK:Check_Status 3B     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                            console.log(
                                                              "BLOCK:Check_Status 3B "
                                                            );
                                                            console.log(
                                                              "Level 2B : Refund Process status : " +
                                                                data.code
                                                            );
                                                            // console.log(data.data.transactionId);
                                                            // console.log(data.data.providerReferenceId);
                                                            const prfd =
                                                              await storeRefund(
                                                                data,
                                                                rid3
                                                              );
                                                            //console.log(prfd);
                                                            // console.log(svtr.id);
                                                            const checksum = cjs
                                                              .SHA256(
                                                                "/v3/transaction/" +
                                                                  merchantId +
                                                                  "/" +
                                                                  rid3 +
                                                                  "/status" +
                                                                  saltKey
                                                              )
                                                              .toString(
                                                                cjs.enc.Hex
                                                              );
                                                            //console.log("Api checksum: ", checksum);
                                                            xVerify =
                                                              checksum +
                                                              "###" +
                                                              saltIndex;
                                                            //console.log(xVerify);
                                                            const options = {
                                                              method: "GET",
                                                              url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                                              headers: {
                                                                "Content-Type":
                                                                  "application/json",
                                                                "X-VERIFY":
                                                                  xVerify,
                                                              },
                                                            };
                                                            console.log(
                                                              " Level 2C :Request data:"
                                                            ); //comment
                                                            console.log(
                                                              options
                                                            ); //comment
                                                            /////////////////////////////////////////////time out///////////////////////////////////////////////////////////////////
                                                            setTimeout(
                                                              function () {
                                                                request(
                                                                  options,
                                                                  async function (
                                                                    error,
                                                                    response,
                                                                    body
                                                                  ) {
                                                                    if (error) {
                                                                      /////////need to handle here if error comes///////
                                                                      console.log(
                                                                        error
                                                                      );
                                                                    } else {
                                                                      var data =
                                                                        JSON.parse(
                                                                          body
                                                                        );
                                                                      console.log(
                                                                        " Level 2C :Check Status Response Body:"
                                                                      ); //comment
                                                                      // console.log(data.data.transactionId);
                                                                      // console.log(data.data.providerReferenceId);
                                                                      console.log(
                                                                        "Level 2C :Check Status  API RESPONSE: " +
                                                                          data.success
                                                                      );
                                                                      console.log(
                                                                        data.code
                                                                      );
                                                                      switch (
                                                                        data.code
                                                                      ) {
                                                                        case "PAYMENT_SUCCESS":
                                                                          console.log(
                                                                            "Level 2C : Refund Process Completed..."
                                                                          );
                                                                          console.log(
                                                                            rid2
                                                                          );
                                                                          const srfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          console.log(
                                                                            "Flow end with CHECK_STATUS SUCCESSFULLY PAYMENT_SUCCESS : 4 "
                                                                          );
                                                                          break;
                                                                        case "PAYMENT_ERROR":
                                                                          console.log(
                                                                            rid3
                                                                          );
                                                                          frfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          console.log(
                                                                            "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                          );
                                                                          /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3B:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                          console.log(
                                                                            "BLOCK:PAYMENT_ERROR :END  3c:1 "
                                                                          );
                                                                          //    //console.log(svtr);
                                                                          //    const rid3 = await createRefund(svtr.id);
                                                                          //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                                          //    console.log(rid3);
                                                                          //when request complete then add here code for call refund api again and handle errors and pending process
                                                                          break;

                                                                        case "INTERNAL_SERVER_ERROR":
                                                                        case "TIMED_OUT":
                                                                        case "PAYMENT_PENDING":
                                                                          /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@        BLOCK:Check_Status 3C     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                          console.log(
                                                                            "BLOCK:Check_Status 3C "
                                                                          );
                                                                          console.log(
                                                                            "Level 2B : Refund Process status : " +
                                                                              data.code
                                                                          );
                                                                          // console.log(data.data.transactionId);
                                                                          // console.log(data.data.providerReferenceId);
                                                                          const prfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          //console.log(prfd);
                                                                          // console.log(svtr.id);
                                                                          const checksum =
                                                                            cjs
                                                                              .SHA256(
                                                                                "/v3/transaction/" +
                                                                                  merchantId +
                                                                                  "/" +
                                                                                  rid3 +
                                                                                  "/status" +
                                                                                  saltKey
                                                                              )
                                                                              .toString(
                                                                                cjs
                                                                                  .enc
                                                                                  .Hex
                                                                              );
                                                                          //console.log("Api checksum: ", checksum);
                                                                          xVerify =
                                                                            checksum +
                                                                            "###" +
                                                                            saltIndex;
                                                                          //console.log(xVerify);
                                                                          const options =
                                                                            {
                                                                              method:
                                                                                "GET",
                                                                              url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                                                              headers:
                                                                                {
                                                                                  "Content-Type":
                                                                                    "application/json",
                                                                                  "X-VERIFY":
                                                                                    xVerify,
                                                                                },
                                                                            };
                                                                          console.log(
                                                                            " Level 2C :Request data:"
                                                                          ); //comment
                                                                          console.log(
                                                                            options
                                                                          ); //comment
                                                                          /////////////////////////////////////////////time out///////////////////////////////////////////////////////////////////
                                                                          setTimeout(
                                                                            function () {
                                                                              request(
                                                                                options,
                                                                                async function (
                                                                                  error,
                                                                                  response,
                                                                                  body
                                                                                ) {
                                                                                  if (
                                                                                    error
                                                                                  ) {
                                                                                    /////////need to handle here if error comes///////
                                                                                    console.log(
                                                                                      error
                                                                                    );
                                                                                  } else {
                                                                                    var data =
                                                                                      JSON.parse(
                                                                                        body
                                                                                      );
                                                                                    console.log(
                                                                                      " Level 2C :Check Status Response Body:"
                                                                                    ); //comment
                                                                                    // console.log(data.data.transactionId);
                                                                                    // console.log(data.data.providerReferenceId);
                                                                                    console.log(
                                                                                      "Level 2C :Check Status  API RESPONSE: " +
                                                                                        data.success
                                                                                    );
                                                                                    console.log(
                                                                                      data.code
                                                                                    );
                                                                                    switch (
                                                                                      data.code
                                                                                    ) {
                                                                                      case "PAYMENT_SUCCESS":
                                                                                        console.log(
                                                                                          "Level 2C : Refund Process Completed..."
                                                                                        );
                                                                                        console.log(
                                                                                          rid2
                                                                                        );
                                                                                        const srfd =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        console.log(
                                                                                          "Flow end with CHECK_STATUS SUCCESSFULLY PAYMENT_SUCCESS : 4 "
                                                                                        );
                                                                                        break;
                                                                                      case "PAYMENT_ERROR":
                                                                                        console.log(
                                                                                          rid3
                                                                                        );
                                                                                        frfd =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        console.log(
                                                                                          "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                                        );
                                                                                        /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3C:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                        console.log(
                                                                                          "BLOCK:PAYMENT_ERROR :END  3c:1 "
                                                                                        );
                                                                                        //    //console.log(svtr);
                                                                                        //    const rid3 = await createRefund(svtr.id);
                                                                                        //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                                                        //    console.log(rid3);
                                                                                        //when request complete then add here code for call refund api again and handle errors and pending process
                                                                                        break;

                                                                                      case "INTERNAL_SERVER_ERROR":
                                                                                      case "TIMED_OUT":
                                                                                      case "PAYMENT_PENDING":
                                                                                        /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:INTERNAL_SERVER_ERROR :END  3C:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                        console.log(
                                                                                          rid2
                                                                                        );
                                                                                        frfd =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        console.log(
                                                                                          frfd
                                                                                        );
                                                                                        console.log(
                                                                                          "FINAL Flow end with CHECK_STATUS FAILED PAYMENT_ERROR,INTERNAL_SERVER_ERROR,TIMED_OUT,PAYMENT_PENDING : 3 "
                                                                                        );
                                                                                        //when request complete then add here code for call refund api again and handle errors and pending process
                                                                                        break;
                                                                                      default:
                                                                                        console.log(
                                                                                          rid3
                                                                                        );
                                                                                        frfd3 =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        console.log(
                                                                                          frfd3
                                                                                        );
                                                                                        console.log(
                                                                                          "Flow end with DEFAULT SWITCH CASE : 1 "
                                                                                        );
                                                                                    }
                                                                                  }
                                                                                }
                                                                              );
                                                                            },
                                                                            delayTime
                                                                          );
                                                                          break;
                                                                        default:
                                                                          console.log(
                                                                            rid3
                                                                          );
                                                                          frfd3 =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          console.log(
                                                                            frfd3
                                                                          );
                                                                          console.log(
                                                                            "Flow end with DEFAULT SWITCH CASE : 1 "
                                                                          );
                                                                      }
                                                                    }
                                                                  }
                                                                );
                                                              },
                                                              delayTime
                                                            );
                                                            break;
                                                          default:
                                                            console.log(rid3);
                                                            frfd3 =
                                                              await storeRefund(
                                                                data,
                                                                rid3
                                                              );
                                                            console.log(frfd3);
                                                            console.log(
                                                              "Flow end with DEFAULT SWITCH CASE : 2 "
                                                            );
                                                        }
                                                      }
                                                    }
                                                  );
                                                }, delayTime);
                                                break;
                                              default:
                                                console.log(rid3);
                                                frfd3 = await storeRefund(
                                                  data,
                                                  rid3
                                                );
                                                console.log(frfd3);
                                                console.log(
                                                  "Flow end with DEFAULT SWITCH CASE : 3 "
                                                );
                                            }
                                          }
                                        }
                                      );
                                    }, delayTime);
                                    break;

                                  case "INTERNAL_SERVER_ERROR":
                                  case "TIMED_OUT":
                                  case "PAYMENT_PENDING":
                                    console.log(
                                      "Level 2B : Refund Process status : " +
                                        data.code
                                    );
                                    // console.log(data.data.transactionId);
                                    // console.log(data.data.providerReferenceId);
                                    const prfd = await storeRefund(data, rid2);
                                    //console.log(prfd);
                                    // console.log(svtr.id);
                                    const checksum = cjs
                                      .SHA256(
                                        "/v3/transaction/" +
                                          merchantId +
                                          "/" +
                                          rid2 +
                                          "/status" +
                                          saltKey
                                      )
                                      .toString(cjs.enc.Hex);
                                    //console.log("Api checksum: ", checksum);
                                    xVerify = checksum + "###" + saltIndex;
                                    //console.log(xVerify);
                                    const options = {
                                      method: "GET",
                                      url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid2}/status`,
                                      headers: {
                                        "Content-Type": "application/json",
                                        "X-VERIFY": xVerify,
                                      },
                                    };
                                    console.log(" Level 2C :Request data:"); //comment
                                    console.log(options); //comment
                                    /////////////////////////////////////////////time out///////////////////////////////////////////////////////////////////
                                    setTimeout(function () {
                                      request(
                                        options,
                                        async function (error, response, body) {
                                          if (error) {
                                            /////////need to handle here if error comes///////
                                            console.log(error);
                                          } else {
                                            var data = JSON.parse(body);
                                            console.log(
                                              " Level 2C :Check Status Response Body:"
                                            ); //comment
                                            // console.log(data.data.transactionId);
                                            // console.log(data.data.providerReferenceId);
                                            console.log(
                                              "Level 2C :Check Status  API RESPONSE: " +
                                                data.success
                                            );
                                            console.log(data.code);
                                            switch (data.code) {
                                              case "PAYMENT_SUCCESS":
                                                console.log(
                                                  "Level 2C : Refund Process Completed..."
                                                );
                                                console.log(rid2);
                                                const srfd = await storeRefund(
                                                  data,
                                                  rid2
                                                );
                                                console.log(
                                                  "Flow end with CHECK_STATUS SUCCESSFULLY PAYMENT_SUCCESS : 4 "
                                                );
                                                break;
                                              case "PAYMENT_ERROR":
                                                console.log(rid2);
                                                frfd = await storeRefund(
                                                  data,
                                                  rid2
                                                );
                                                console.log(
                                                  "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                );

                                                //console.log(svtr);
                                                /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:REFUND 3      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                console.log("BLOCK:REFUND 3");
                                                const rid3 = await createRefund(
                                                  svtr.id
                                                );
                                                console.log(
                                                  "Level 2A: NEW REFUND ID GENERATED.."
                                                ); /////////////////////////////////////
                                                console.log(rid3);
                                                //when request complete then add here code for call refund api again and handle errors and pending process
                                                //when request complete then add here code for call refund api again and handle errors and pending process
                                                console.log(
                                                  "Level 2: Calling Refund API"
                                                );
                                                const url =
                                                  "mercury-uat.phonepe.com";
                                                const path =
                                                  "/v3/credit/backToSource";
                                                saltKey =
                                                  "0afb5aa4-2206-4ea0-b081-fb94270b8c96";
                                                saltIndex = 1;
                                                const decodedRequest = {
                                                  merchantId: merchantId,
                                                  transactionId: rid3,
                                                  providerReferenceId:
                                                    svtr.providerReferenceId,
                                                  amount: rfAmount,
                                                  message: "Incorrect Amount",
                                                };
                                                // console.log(decodedRequest);
                                                let encodedRequest =
                                                  decodedRequest === ""
                                                    ? ""
                                                    : Buffer.from(
                                                        JSON.stringify(
                                                          decodedRequest
                                                        )
                                                      ).toString("base64");
                                                generateChecksum(
                                                  encodedRequest,
                                                  path,
                                                  saltKey,
                                                  saltIndex
                                                );
                                                function generateChecksum(
                                                  encodedRequest,
                                                  path,
                                                  saltKey,
                                                  keyIndex
                                                ) {
                                                  const checksum = cjs
                                                    .SHA256(
                                                      encodedRequest +
                                                        path +
                                                        saltKey
                                                    )
                                                    .toString(cjs.enc.Hex);
                                                  // console.log("base64 request:", encodedRequest, "Api checksum: ", checksum);
                                                  xVerify =
                                                    checksum + "###" + keyIndex;
                                                }
                                                if (encodedRequest === "")
                                                  body1 = "";
                                                else
                                                  body1 = JSON.stringify({
                                                    request: encodedRequest,
                                                  });
                                                options2 = {
                                                  method: "POST",
                                                  url: "https://mercury-uat.phonepe.com/v3/credit/backToSource",
                                                  headers: {
                                                    "Content-Type":
                                                      "application/json",
                                                    "X-VERIFY": xVerify,
                                                  },
                                                  body: body1,
                                                };
                                                console.log(
                                                  " Level 2: Request data:"
                                                ); //comment
                                                console.log(options2); //comment
                                                ////////////////////////////////////////////////////////////////////////////////////////////////time out//////////////////////////////////////////////////////////////////////////////////////////////////
                                                setTimeout(function () {
                                                  request(
                                                    options2,
                                                    async function (
                                                      error,
                                                      response,
                                                      body
                                                    ) {
                                                      if (error) {
                                                        /////////need to handle here if error comes///////
                                                        console.log(error);
                                                      } else {
                                                        var data =
                                                          JSON.parse(body);
                                                        console.log(
                                                          "Level 2A :Response Body:"
                                                        ); //comment
                                                        //console.log(data);
                                                        console.log(
                                                          "Level 2A :REFUND API RESPONSE: " +
                                                            data.success
                                                        );
                                                        console.log(data.code);
                                                        switch (data.code) {
                                                          case "PAYMENT_SUCCESS":
                                                            console.log(
                                                              "Level 2A :Refund Process Completed..."
                                                            );
                                                            console.log(rid3);
                                                            const srfd =
                                                              await storeRefund(
                                                                data,
                                                                rid3
                                                              );
                                                            console.log(
                                                              "Flow end with REFUND SUCCESSFULLY PAYMENT_SUCCESS : 2 "
                                                            );
                                                            break;

                                                          case "PAYMENT_ERROR":
                                                            console.log(rid3);
                                                            frfd =
                                                              await storeRefund(
                                                                data,
                                                                rid3
                                                              );
                                                            console.log(
                                                              "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                            );
                                                            /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                            console.log(
                                                              "BLOCK:PAYMENT_ERROR :END  1 "
                                                            );
                                                            //    //console.log(svtr);
                                                            //    const rid3 = await createRefund(svtr.id);
                                                            //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                            //    console.log(rid3);
                                                            //when request complete then add here code for call refund api again and handle errors and pending process
                                                            break;
                                                          case "INTERNAL_SERVER_ERROR":
                                                          case "TIMED_OUT":
                                                          case "PAYMENT_PENDING":
                                                            // case 'PAYMENT_ERROR'://need to remove
                                                            console.log(
                                                              "Check Status API calling...."
                                                            );
                                                            console.log(
                                                              "Level 2A : Refund Process status : " +
                                                                data.code
                                                            );
                                                            const prfd =
                                                              await storeRefund(
                                                                data,
                                                                rid3
                                                              );
                                                            /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:Check_Status 3A      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                            console.log(
                                                              "BLOCK:Check_Status 3A"
                                                            );
                                                            //console.log(prfd);
                                                            //console.log(svtr.id);
                                                            const checksum = cjs
                                                              .SHA256(
                                                                "/v3/transaction/" +
                                                                  merchantId +
                                                                  "/" +
                                                                  rid3 +
                                                                  "/status" +
                                                                  saltKey
                                                              )
                                                              .toString(
                                                                cjs.enc.Hex
                                                              );
                                                            //console.log("Api checksum: ", checksum);
                                                            xVerify =
                                                              checksum +
                                                              "###" +
                                                              saltIndex;
                                                            //console.log(xVerify);
                                                            options = {
                                                              method: "GET",
                                                              url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                                              headers: {
                                                                "Content-Type":
                                                                  "application/json",
                                                                "X-VERIFY":
                                                                  xVerify,
                                                              },
                                                            };
                                                            console.log(
                                                              "Level 2A : Request data:"
                                                            ); //comment
                                                            console.log(
                                                              options
                                                            ); //comment
                                                            ///////////////////////////////////////////////////////////////time out/////////////////////////////////////////////////////
                                                            setTimeout(
                                                              function () {
                                                                request(
                                                                  options,
                                                                  async function (
                                                                    error,
                                                                    response,
                                                                    body
                                                                  ) {
                                                                    if (error) {
                                                                      /////////need to handle here if error comes///////
                                                                      console.log(
                                                                        error
                                                                      );
                                                                    } else {
                                                                      var data =
                                                                        JSON.parse(
                                                                          body
                                                                        );
                                                                      console.log(
                                                                        " Level 2B :Check Status Response Body:"
                                                                      ); //comment
                                                                      //console.log(data);
                                                                      console.log(
                                                                        "Level 2B : Check Status API RESPONSE: " +
                                                                          data.success
                                                                      );
                                                                      console.log(
                                                                        data.code
                                                                      );
                                                                      switch (
                                                                        data.code
                                                                      ) {
                                                                        case "PAYMENT_SUCCESS":
                                                                          console.log(
                                                                            "Level 2B : Check Status Process Completed..."
                                                                          );
                                                                          console.log(
                                                                            rid3
                                                                          );
                                                                          const srfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          console.log(
                                                                            "Flow end with CHECK STATUS PAYMENT_SUCCESS : 3 "
                                                                          );
                                                                          break;

                                                                        case "PAYMENT_ERROR":
                                                                          console.log(
                                                                            rid3
                                                                          );
                                                                          frfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          console.log(
                                                                            "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                          );
                                                                          /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3A:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                          console.log(
                                                                            "BLOCK:PAYMENT_ERROR :END  3A:1 "
                                                                          );
                                                                          //    //console.log(svtr);
                                                                          //    const rid4 = await createRefund(svtr.id);
                                                                          //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                                          //    console.log(rid4);
                                                                          //when request complete then add here code for call refund api again and handle errors and pending process
                                                                          break;

                                                                        case "INTERNAL_SERVER_ERROR":
                                                                        case "TIMED_OUT":
                                                                        case "PAYMENT_PENDING":
                                                                          /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@        BLOCK:Check_Status 3B     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                          console.log(
                                                                            "BLOCK:Check_Status 3B "
                                                                          );
                                                                          console.log(
                                                                            "Level 2B : Refund Process status : " +
                                                                              data.code
                                                                          );
                                                                          // console.log(data.data.transactionId);
                                                                          // console.log(data.data.providerReferenceId);
                                                                          const prfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          //console.log(prfd);
                                                                          // console.log(svtr.id);
                                                                          const checksum =
                                                                            cjs
                                                                              .SHA256(
                                                                                "/v3/transaction/" +
                                                                                  merchantId +
                                                                                  "/" +
                                                                                  rid3 +
                                                                                  "/status" +
                                                                                  saltKey
                                                                              )
                                                                              .toString(
                                                                                cjs
                                                                                  .enc
                                                                                  .Hex
                                                                              );
                                                                          //console.log("Api checksum: ", checksum);
                                                                          xVerify =
                                                                            checksum +
                                                                            "###" +
                                                                            saltIndex;
                                                                          //console.log(xVerify);
                                                                          const options =
                                                                            {
                                                                              method:
                                                                                "GET",
                                                                              url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                                                              headers:
                                                                                {
                                                                                  "Content-Type":
                                                                                    "application/json",
                                                                                  "X-VERIFY":
                                                                                    xVerify,
                                                                                },
                                                                            };
                                                                          console.log(
                                                                            " Level 2C :Request data:"
                                                                          ); //comment
                                                                          console.log(
                                                                            options
                                                                          ); //comment
                                                                          /////////////////////////////////////////////time out///////////////////////////////////////////////////////////////////
                                                                          setTimeout(
                                                                            function () {
                                                                              request(
                                                                                options,
                                                                                async function (
                                                                                  error,
                                                                                  response,
                                                                                  body
                                                                                ) {
                                                                                  if (
                                                                                    error
                                                                                  ) {
                                                                                    /////////need to handle here if error comes///////
                                                                                    console.log(
                                                                                      error
                                                                                    );
                                                                                  } else {
                                                                                    var data =
                                                                                      JSON.parse(
                                                                                        body
                                                                                      );
                                                                                    console.log(
                                                                                      " Level 2C :Check Status Response Body:"
                                                                                    ); //comment
                                                                                    // console.log(data.data.transactionId);
                                                                                    // console.log(data.data.providerReferenceId);
                                                                                    console.log(
                                                                                      "Level 2C :Check Status  API RESPONSE: " +
                                                                                        data.success
                                                                                    );
                                                                                    console.log(
                                                                                      data.code
                                                                                    );
                                                                                    switch (
                                                                                      data.code
                                                                                    ) {
                                                                                      case "PAYMENT_SUCCESS":
                                                                                        console.log(
                                                                                          "Level 2C : Refund Process Completed..."
                                                                                        );
                                                                                        console.log(
                                                                                          rid2
                                                                                        );
                                                                                        const srfd =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        console.log(
                                                                                          "Flow end with CHECK_STATUS SUCCESSFULLY PAYMENT_SUCCESS : 4 "
                                                                                        );
                                                                                        break;
                                                                                      case "PAYMENT_ERROR":
                                                                                        console.log(
                                                                                          rid3
                                                                                        );
                                                                                        frfd =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        console.log(
                                                                                          "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                                        );
                                                                                        /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3B:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                        console.log(
                                                                                          "BLOCK:PAYMENT_ERROR :END  3c:1 "
                                                                                        );
                                                                                        //    //console.log(svtr);
                                                                                        //    const rid3 = await createRefund(svtr.id);
                                                                                        //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                                                        //    console.log(rid3);
                                                                                        //when request complete then add here code for call refund api again and handle errors and pending process
                                                                                        break;

                                                                                      case "INTERNAL_SERVER_ERROR":
                                                                                      case "TIMED_OUT":
                                                                                      case "PAYMENT_PENDING":
                                                                                        /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@        BLOCK:Check_Status 3C     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                        console.log(
                                                                                          "BLOCK:Check_Status 3C "
                                                                                        );
                                                                                        console.log(
                                                                                          "Level 2B : Refund Process status : " +
                                                                                            data.code
                                                                                        );
                                                                                        // console.log(data.data.transactionId);
                                                                                        // console.log(data.data.providerReferenceId);
                                                                                        const prfd =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        //console.log(prfd);
                                                                                        // console.log(svtr.id);
                                                                                        const checksum =
                                                                                          cjs
                                                                                            .SHA256(
                                                                                              "/v3/transaction/" +
                                                                                                merchantId +
                                                                                                "/" +
                                                                                                rid3 +
                                                                                                "/status" +
                                                                                                saltKey
                                                                                            )
                                                                                            .toString(
                                                                                              cjs
                                                                                                .enc
                                                                                                .Hex
                                                                                            );
                                                                                        //console.log("Api checksum: ", checksum);
                                                                                        xVerify =
                                                                                          checksum +
                                                                                          "###" +
                                                                                          saltIndex;
                                                                                        //console.log(xVerify);
                                                                                        const options =
                                                                                          {
                                                                                            method:
                                                                                              "GET",
                                                                                            url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                                                                            headers:
                                                                                              {
                                                                                                "Content-Type":
                                                                                                  "application/json",
                                                                                                "X-VERIFY":
                                                                                                  xVerify,
                                                                                              },
                                                                                          };
                                                                                        console.log(
                                                                                          " Level 2C :Request data:"
                                                                                        ); //comment
                                                                                        console.log(
                                                                                          options
                                                                                        ); //comment
                                                                                        /////////////////////////////////////////////time out///////////////////////////////////////////////////////////////////
                                                                                        setTimeout(
                                                                                          function () {
                                                                                            request(
                                                                                              options,
                                                                                              async function (
                                                                                                error,
                                                                                                response,
                                                                                                body
                                                                                              ) {
                                                                                                if (
                                                                                                  error
                                                                                                ) {
                                                                                                  /////////need to handle here if error comes///////
                                                                                                  console.log(
                                                                                                    error
                                                                                                  );
                                                                                                } else {
                                                                                                  var data =
                                                                                                    JSON.parse(
                                                                                                      body
                                                                                                    );
                                                                                                  console.log(
                                                                                                    " Level 2C :Check Status Response Body:"
                                                                                                  ); //comment
                                                                                                  // console.log(data.data.transactionId);
                                                                                                  // console.log(data.data.providerReferenceId);
                                                                                                  console.log(
                                                                                                    "Level 2C :Check Status  API RESPONSE: " +
                                                                                                      data.success
                                                                                                  );
                                                                                                  console.log(
                                                                                                    data.code
                                                                                                  );
                                                                                                  switch (
                                                                                                    data.code
                                                                                                  ) {
                                                                                                    case "PAYMENT_SUCCESS":
                                                                                                      console.log(
                                                                                                        "Level 2C : Refund Process Completed..."
                                                                                                      );
                                                                                                      console.log(
                                                                                                        rid2
                                                                                                      );
                                                                                                      const srfd =
                                                                                                        await storeRefund(
                                                                                                          data,
                                                                                                          rid3
                                                                                                        );
                                                                                                      console.log(
                                                                                                        "Flow end with CHECK_STATUS SUCCESSFULLY PAYMENT_SUCCESS : 4 "
                                                                                                      );
                                                                                                      break;
                                                                                                    case "PAYMENT_ERROR":
                                                                                                      console.log(
                                                                                                        rid3
                                                                                                      );
                                                                                                      frfd =
                                                                                                        await storeRefund(
                                                                                                          data,
                                                                                                          rid3
                                                                                                        );
                                                                                                      console.log(
                                                                                                        "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                                                      );
                                                                                                      /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3C:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                                      console.log(
                                                                                                        "BLOCK:PAYMENT_ERROR :END  3c:1 "
                                                                                                      );
                                                                                                      //    //console.log(svtr);
                                                                                                      //    const rid3 = await createRefund(svtr.id);
                                                                                                      //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                                                                      //    console.log(rid3);
                                                                                                      //when request complete then add here code for call refund api again and handle errors and pending process
                                                                                                      break;

                                                                                                    case "INTERNAL_SERVER_ERROR":
                                                                                                    case "TIMED_OUT":
                                                                                                    case "PAYMENT_PENDING":
                                                                                                      /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:INTERNAL_SERVER_ERROR :END  3C:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                                      console.log(
                                                                                                        rid2
                                                                                                      );
                                                                                                      frfd =
                                                                                                        await storeRefund(
                                                                                                          data,
                                                                                                          rid3
                                                                                                        );
                                                                                                      console.log(
                                                                                                        frfd
                                                                                                      );
                                                                                                      console.log(
                                                                                                        "FINAL Flow end with CHECK_STATUS FAILED PAYMENT_ERROR,INTERNAL_SERVER_ERROR,TIMED_OUT,PAYMENT_PENDING : 3 "
                                                                                                      );
                                                                                                      //when request complete then add here code for call refund api again and handle errors and pending process
                                                                                                      break;
                                                                                                    default:
                                                                                                      console.log(
                                                                                                        rid3
                                                                                                      );
                                                                                                      frfd3 =
                                                                                                        await storeRefund(
                                                                                                          data,
                                                                                                          rid3
                                                                                                        );
                                                                                                      console.log(
                                                                                                        frfd3
                                                                                                      );
                                                                                                      console.log(
                                                                                                        "Flow end with DEFAULT SWITCH CASE : 1 "
                                                                                                      );
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            );
                                                                                          },
                                                                                          delayTime
                                                                                        );
                                                                                        break;
                                                                                      default:
                                                                                        console.log(
                                                                                          rid3
                                                                                        );
                                                                                        frfd3 =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        console.log(
                                                                                          frfd3
                                                                                        );
                                                                                        console.log(
                                                                                          "Flow end with DEFAULT SWITCH CASE : 1 "
                                                                                        );
                                                                                    }
                                                                                  }
                                                                                }
                                                                              );
                                                                            },
                                                                            delayTime
                                                                          );
                                                                          break;
                                                                        default:
                                                                          console.log(
                                                                            rid3
                                                                          );
                                                                          frfd3 =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          console.log(
                                                                            frfd3
                                                                          );
                                                                          console.log(
                                                                            "Flow end with DEFAULT SWITCH CASE : 2 "
                                                                          );
                                                                      }
                                                                    }
                                                                  }
                                                                );
                                                              },
                                                              delayTime
                                                            );
                                                            break;
                                                          default:
                                                            console.log(rid3);
                                                            frfd3 =
                                                              await storeRefund(
                                                                data,
                                                                rid3
                                                              );
                                                            console.log(frfd3);
                                                            console.log(
                                                              "Flow end with DEFAULT SWITCH CASE : 3 "
                                                            );
                                                        }
                                                      }
                                                    }
                                                  );
                                                }, delayTime);
                                                break;

                                              case "INTERNAL_SERVER_ERROR":
                                              case "TIMED_OUT":
                                              case "PAYMENT_PENDING":
                                                console.log(rid2);
                                                frfd = await storeRefund(
                                                  data,
                                                  rid2
                                                );
                                                console.log(frfd);
                                                console.log(
                                                  "FINAL Flow end with CHECK_STATUS FAILED PAYMENT_ERROR,INTERNAL_SERVER_ERROR,TIMED_OUT,PAYMENT_PENDING : 3 "
                                                );
                                                //when request complete then add here code for call refund api again and handle errors and pending process
                                                break;
                                              default:
                                                console.log(rid2);
                                                frfd2 = await storeRefund(
                                                  data,
                                                  rid2
                                                );
                                                console.log(frfd2);
                                                console.log(
                                                  "Flow end with DEFAULT SWITCH CASE : 1 "
                                                );
                                            }
                                          }
                                        }
                                      );
                                    }, delayTime);
                                    break;
                                  default:
                                    console.log(rid2);
                                    frfd2 = await storeRefund(data, rid2);
                                    console.log(frfd2);
                                    console.log(
                                      "Flow end with DEFAULT SWITCH CASE : 2 "
                                    );
                                }
                              }
                            }
                          );
                        }, delayTime);
                        break;
                      default:
                        console.log(rid2);
                        frfd2 = await storeRefund(data, rid2);
                        console.log(frfd2);
                        console.log("Flow end with DEFAULT SWITCH CASE : 3 ");
                    }
                  }
                });
              }, delayTime);
              break;
            case "INTERNAL_SERVER_ERROR":
            case "TIMED_OUT":
            case "PAYMENT_PENDING":
              console.log("Level 1 : Refund Process status : " + data.code);
              const prfd = await storeRefund(data, rid);
              // console.log(prfd);
              // console.log(svtr.id);
              // console.log("^^^^^^^^^^^^^^^^^^^");
              // console.log(merchantId);
              // console.log(rid);
              //console.log(saltKey);

              const checksum = cjs
                .SHA256(
                  "/v3/transaction/" +
                    merchantId +
                    "/" +
                    rid +
                    "/status" +
                    saltKey
                )
                .toString(cjs.enc.Hex);
              //console.log("%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%");
              xVerify = checksum + "###" + saltIndex;
              //console.log(xVerify);
              options = {
                method: "GET",
                url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid}/status`,
                headers: {
                  "Content-Type": "application/json",
                  "X-VERIFY": xVerify,
                },
              };
              console.log("Level 1 : Request data:"); //comment
              console.log(options); //comment
              //////////////////////////////////////////////////////////////////////////////////////////timeout ///////////////////////////////
              setTimeout(function () {
                request(options, async function (error, response, body) {
                  if (error) {
                    /////////need to handle here if error comes///////
                    console.log(error);
                  } else {
                    var data = JSON.parse(body);
                    console.log(" Level 2 :Check Status Response Body:"); //comment
                    //console.log(data);
                    console.log(
                      "Level 2 : Check Status API RESPONSE: " + data.success
                    );
                    console.log(data.code);
                    switch (data.code) {
                      case "PAYMENT_SUCCESS":
                        console.log(
                          "Level 2 : Check Status Process Completed..."
                        );
                        console.log(rid);
                        const srfd = await storeRefund(data, rid);
                        console.log(
                          "Flow end with CHECK_STATUS SUCCESSFULLY PAYMENT_SUCCESS : 5 "
                        );
                        break;

                      case "PAYMENT_ERROR":
                        console.log(rid);
                        frfd = await storeRefund(data, rid);
                        //console.log(svtr);
                        /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:REFUND 2     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                        console.log("BLOCK:REFUND 2");
                        const rid2 = await createRefund(svtr.id);
                        console.log("Level 1: NEW REFUND ID GENERATED.."); /////////////////////////////////////
                        console.log(rid2);
                        //when request complete then add here code for call refund api again and handle errors and pending process
                        console.log("Level 2: Calling Refund API");
                        const url = "mercury-uat.phonepe.com";
                        const path = "/v3/credit/backToSource";
                        saltKey = "0afb5aa4-2206-4ea0-b081-fb94270b8c96";
                        saltIndex = 1;
                        const decodedRequest = {
                          merchantId: merchantId,
                          transactionId: rid2,
                          providerReferenceId: svtr.providerReferenceId,
                          amount: rfAmount,
                          message: "Incorrect Amount",
                        };
                        // console.log(decodedRequest);
                        let encodedRequest =
                          decodedRequest === ""
                            ? ""
                            : Buffer.from(
                                JSON.stringify(decodedRequest)
                              ).toString("base64");
                        generateChecksum(
                          encodedRequest,
                          path,
                          saltKey,
                          saltIndex
                        );
                        function generateChecksum(
                          encodedRequest,
                          path,
                          saltKey,
                          keyIndex
                        ) {
                          const checksum = cjs
                            .SHA256(encodedRequest + path + saltKey)
                            .toString(cjs.enc.Hex);
                          // console.log("base64 request:", encodedRequest, "Api checksum: ", checksum);
                          xVerify = checksum + "###" + keyIndex;
                        }
                        if (encodedRequest === "") body1 = "";
                        else
                          body1 = JSON.stringify({ request: encodedRequest });
                        options2 = {
                          method: "POST",
                          url: "https://mercury-uat.phonepe.com/v3/credit/backToSource",
                          headers: {
                            "Content-Type": "application/json",
                            "X-VERIFY": xVerify,
                          },
                          body: body1,
                        };
                        console.log(" Level 2: Request data:"); //comment
                        console.log(options2); //comment
                        ////////////////////////////////////////////////////////////////////////////////////////////////time out//////////////////////////////////////////////////////////////////////////////////////////////////
                        setTimeout(function () {
                          request(
                            options2,
                            async function (error, response, body) {
                              if (error) {
                                /////////need to handle here if error comes///////
                                console.log(error);
                              } else {
                                var data = JSON.parse(body);
                                console.log("Level 2A :Response Body:"); //comment
                                //console.log(data);
                                console.log(
                                  "Level 2A :REFUND API RESPONSE: " +
                                    data.success
                                );
                                console.log(data.code);
                                switch (data.code) {
                                  case "PAYMENT_SUCCESS":
                                    console.log(
                                      "Level 2A :Refund Process Completed..."
                                    );
                                    console.log(rid2);
                                    const srfd = await storeRefund(data, rid2);
                                    console.log(
                                      "Flow end with REFUND SUCCESSFULLY PAYMENT_SUCCESS : 2 "
                                    );
                                    break;

                                  case "PAYMENT_ERROR":
                                    console.log(rid2);
                                    frfd = await storeRefund(data, rid2);
                                    console.log(
                                      "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                    );

                                    //console.log(svtr);
                                    /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:REFUND 3      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                    console.log("BLOCK:REFUND 3");
                                    const rid3 = await createRefund(svtr.id);
                                    console.log(
                                      "Level 2A: NEW REFUND ID GENERATED.."
                                    ); /////////////////////////////////////
                                    console.log(rid3);
                                    //when request complete then add here code for call refund api again and handle errors and pending process
                                    //when request complete then add here code for call refund api again and handle errors and pending process
                                    console.log("Level 2: Calling Refund API");
                                    const url = "mercury-uat.phonepe.com";
                                    const path = "/v3/credit/backToSource";
                                    saltKey =
                                      "0afb5aa4-2206-4ea0-b081-fb94270b8c96";
                                    saltIndex = 1;
                                    const decodedRequest = {
                                      merchantId: merchantId,
                                      transactionId: rid3,
                                      providerReferenceId:
                                        svtr.providerReferenceId,
                                      amount: rfAmount,
                                      message: "Incorrect Amount",
                                    };
                                    // console.log(decodedRequest);
                                    let encodedRequest =
                                      decodedRequest === ""
                                        ? ""
                                        : Buffer.from(
                                            JSON.stringify(decodedRequest)
                                          ).toString("base64");
                                    generateChecksum(
                                      encodedRequest,
                                      path,
                                      saltKey,
                                      saltIndex
                                    );
                                    function generateChecksum(
                                      encodedRequest,
                                      path,
                                      saltKey,
                                      keyIndex
                                    ) {
                                      const checksum = cjs
                                        .SHA256(encodedRequest + path + saltKey)
                                        .toString(cjs.enc.Hex);
                                      // console.log("base64 request:", encodedRequest, "Api checksum: ", checksum);
                                      xVerify = checksum + "###" + keyIndex;
                                    }
                                    if (encodedRequest === "") body1 = "";
                                    else
                                      body1 = JSON.stringify({
                                        request: encodedRequest,
                                      });
                                    options2 = {
                                      method: "POST",
                                      url: "https://mercury-uat.phonepe.com/v3/credit/backToSource",
                                      headers: {
                                        "Content-Type": "application/json",
                                        "X-VERIFY": xVerify,
                                      },
                                      body: body1,
                                    };
                                    console.log(" Level 2: Request data:"); //comment
                                    console.log(options2); //comment
                                    ////////////////////////////////////////////////////////////////////////////////////////////////time out//////////////////////////////////////////////////////////////////////////////////////////////////
                                    setTimeout(function () {
                                      request(
                                        options2,
                                        async function (error, response, body) {
                                          if (error) {
                                            /////////need to handle here if error comes///////
                                            console.log(error);
                                          } else {
                                            var data = JSON.parse(body);
                                            console.log(
                                              "Level 2A :Response Body:"
                                            ); //comment
                                            //console.log(data);
                                            console.log(
                                              "Level 2A :REFUND API RESPONSE: " +
                                                data.success
                                            );
                                            console.log(data.code);
                                            switch (data.code) {
                                              case "PAYMENT_SUCCESS":
                                                console.log(
                                                  "Level 2A :Refund Process Completed..."
                                                );
                                                console.log(rid3);
                                                const srfd = await storeRefund(
                                                  data,
                                                  rid3
                                                );
                                                console.log(
                                                  "Flow end with REFUND SUCCESSFULLY PAYMENT_SUCCESS : 2 "
                                                );
                                                break;

                                              case "PAYMENT_ERROR":
                                                console.log(rid3);
                                                frfd = await storeRefund(
                                                  data,
                                                  rid3
                                                );
                                                console.log(
                                                  "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                );
                                                /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                console.log(
                                                  "BLOCK:PAYMENT_ERROR :END  1 "
                                                );
                                                //    //console.log(svtr);
                                                //    const rid3 = await createRefund(svtr.id);
                                                //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                //    console.log(rid3);
                                                //when request complete then add here code for call refund api again and handle errors and pending process
                                                break;
                                              case "INTERNAL_SERVER_ERROR":
                                              case "TIMED_OUT":
                                              case "PAYMENT_PENDING":
                                                // case 'PAYMENT_ERROR'://need to remove
                                                console.log(
                                                  "Check Status API calling...."
                                                );
                                                console.log(
                                                  "Level 2A : Refund Process status : " +
                                                    data.code
                                                );
                                                const prfd = await storeRefund(
                                                  data,
                                                  rid3
                                                );
                                                /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:Check_Status 3A      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                console.log(
                                                  "BLOCK:Check_Status 3A"
                                                );
                                                //console.log(prfd);
                                                //console.log(svtr.id);
                                                const checksum = cjs
                                                  .SHA256(
                                                    "/v3/transaction/" +
                                                      merchantId +
                                                      "/" +
                                                      rid3 +
                                                      "/status" +
                                                      saltKey
                                                  )
                                                  .toString(cjs.enc.Hex);
                                                //console.log("Api checksum: ", checksum);
                                                xVerify =
                                                  checksum + "###" + saltIndex;
                                                //console.log(xVerify);
                                                options = {
                                                  method: "GET",
                                                  url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                                  headers: {
                                                    "Content-Type":
                                                      "application/json",
                                                    "X-VERIFY": xVerify,
                                                  },
                                                };
                                                console.log(
                                                  "Level 2A : Request data:"
                                                ); //comment
                                                console.log(options); //comment
                                                ///////////////////////////////////////////////////////////////time out/////////////////////////////////////////////////////
                                                setTimeout(function () {
                                                  request(
                                                    options,
                                                    async function (
                                                      error,
                                                      response,
                                                      body
                                                    ) {
                                                      if (error) {
                                                        /////////need to handle here if error comes///////
                                                        console.log(error);
                                                      } else {
                                                        var data =
                                                          JSON.parse(body);
                                                        console.log(
                                                          " Level 2B :Check Status Response Body:"
                                                        ); //comment
                                                        //console.log(data);
                                                        console.log(
                                                          "Level 2B : Check Status API RESPONSE: " +
                                                            data.success
                                                        );
                                                        console.log(data.code);
                                                        switch (data.code) {
                                                          case "PAYMENT_SUCCESS":
                                                            console.log(
                                                              "Level 2B : Check Status Process Completed..."
                                                            );
                                                            console.log(rid3);
                                                            const srfd =
                                                              await storeRefund(
                                                                data,
                                                                rid3
                                                              );
                                                            console.log(
                                                              "Flow end with CHECK STATUS PAYMENT_SUCCESS : 3 "
                                                            );
                                                            break;

                                                          case "PAYMENT_ERROR":
                                                            console.log(rid3);
                                                            frfd =
                                                              await storeRefund(
                                                                data,
                                                                rid3
                                                              );
                                                            console.log(
                                                              "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                            );
                                                            /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3A:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                            console.log(
                                                              "BLOCK:PAYMENT_ERROR :END  3A:1 "
                                                            );
                                                            //    //console.log(svtr);
                                                            //    const rid4 = await createRefund(svtr.id);
                                                            //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                            //    console.log(rid4);
                                                            //when request complete then add here code for call refund api again and handle errors and pending process
                                                            break;

                                                          case "INTERNAL_SERVER_ERROR":
                                                          case "TIMED_OUT":
                                                          case "PAYMENT_PENDING":
                                                            /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@        BLOCK:Check_Status 3B     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                            console.log(
                                                              "BLOCK:Check_Status 3B "
                                                            );
                                                            console.log(
                                                              "Level 2B : Refund Process status : " +
                                                                data.code
                                                            );
                                                            // console.log(data.data.transactionId);
                                                            // console.log(data.data.providerReferenceId);
                                                            const prfd =
                                                              await storeRefund(
                                                                data,
                                                                rid3
                                                              );
                                                            //console.log(prfd);
                                                            // console.log(svtr.id);
                                                            const checksum = cjs
                                                              .SHA256(
                                                                "/v3/transaction/" +
                                                                  merchantId +
                                                                  "/" +
                                                                  rid3 +
                                                                  "/status" +
                                                                  saltKey
                                                              )
                                                              .toString(
                                                                cjs.enc.Hex
                                                              );
                                                            //console.log("Api checksum: ", checksum);
                                                            xVerify =
                                                              checksum +
                                                              "###" +
                                                              saltIndex;
                                                            //console.log(xVerify);
                                                            const options = {
                                                              method: "GET",
                                                              url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                                              headers: {
                                                                "Content-Type":
                                                                  "application/json",
                                                                "X-VERIFY":
                                                                  xVerify,
                                                              },
                                                            };
                                                            console.log(
                                                              " Level 2C :Request data:"
                                                            ); //comment
                                                            console.log(
                                                              options
                                                            ); //comment
                                                            /////////////////////////////////////////////time out///////////////////////////////////////////////////////////////////
                                                            setTimeout(
                                                              function () {
                                                                request(
                                                                  options,
                                                                  async function (
                                                                    error,
                                                                    response,
                                                                    body
                                                                  ) {
                                                                    if (error) {
                                                                      /////////need to handle here if error comes///////
                                                                      console.log(
                                                                        error
                                                                      );
                                                                    } else {
                                                                      var data =
                                                                        JSON.parse(
                                                                          body
                                                                        );
                                                                      console.log(
                                                                        " Level 2C :Check Status Response Body:"
                                                                      ); //comment
                                                                      // console.log(data.data.transactionId);
                                                                      // console.log(data.data.providerReferenceId);
                                                                      console.log(
                                                                        "Level 2C :Check Status  API RESPONSE: " +
                                                                          data.success
                                                                      );
                                                                      console.log(
                                                                        data.code
                                                                      );
                                                                      switch (
                                                                        data.code
                                                                      ) {
                                                                        case "PAYMENT_SUCCESS":
                                                                          console.log(
                                                                            "Level 2C : Refund Process Completed..."
                                                                          );
                                                                          console.log(
                                                                            rid2
                                                                          );
                                                                          const srfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          console.log(
                                                                            "Flow end with CHECK_STATUS SUCCESSFULLY PAYMENT_SUCCESS : 4 "
                                                                          );
                                                                          break;
                                                                        case "PAYMENT_ERROR":
                                                                          console.log(
                                                                            rid3
                                                                          );
                                                                          frfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          console.log(
                                                                            "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                          );
                                                                          /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3B:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                          console.log(
                                                                            "BLOCK:PAYMENT_ERROR :END  3c:1 "
                                                                          );
                                                                          //    //console.log(svtr);
                                                                          //    const rid3 = await createRefund(svtr.id);
                                                                          //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                                          //    console.log(rid3);
                                                                          //when request complete then add here code for call refund api again and handle errors and pending process
                                                                          break;

                                                                        case "INTERNAL_SERVER_ERROR":
                                                                        case "TIMED_OUT":
                                                                        case "PAYMENT_PENDING":
                                                                          /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@        BLOCK:Check_Status 3C     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                          console.log(
                                                                            "BLOCK:Check_Status 3C "
                                                                          );
                                                                          console.log(
                                                                            "Level 2B : Refund Process status : " +
                                                                              data.code
                                                                          );
                                                                          // console.log(data.data.transactionId);
                                                                          // console.log(data.data.providerReferenceId);
                                                                          const prfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          //console.log(prfd);
                                                                          // console.log(svtr.id);
                                                                          const checksum =
                                                                            cjs
                                                                              .SHA256(
                                                                                "/v3/transaction/" +
                                                                                  merchantId +
                                                                                  "/" +
                                                                                  rid3 +
                                                                                  "/status" +
                                                                                  saltKey
                                                                              )
                                                                              .toString(
                                                                                cjs
                                                                                  .enc
                                                                                  .Hex
                                                                              );
                                                                          //console.log("Api checksum: ", checksum);
                                                                          xVerify =
                                                                            checksum +
                                                                            "###" +
                                                                            saltIndex;
                                                                          //console.log(xVerify);
                                                                          const options =
                                                                            {
                                                                              method:
                                                                                "GET",
                                                                              url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                                                              headers:
                                                                                {
                                                                                  "Content-Type":
                                                                                    "application/json",
                                                                                  "X-VERIFY":
                                                                                    xVerify,
                                                                                },
                                                                            };
                                                                          console.log(
                                                                            " Level 2C :Request data:"
                                                                          ); //comment
                                                                          console.log(
                                                                            options
                                                                          ); //comment
                                                                          /////////////////////////////////////////////time out///////////////////////////////////////////////////////////////////
                                                                          setTimeout(
                                                                            function () {
                                                                              request(
                                                                                options,
                                                                                async function (
                                                                                  error,
                                                                                  response,
                                                                                  body
                                                                                ) {
                                                                                  if (
                                                                                    error
                                                                                  ) {
                                                                                    /////////need to handle here if error comes///////
                                                                                    console.log(
                                                                                      error
                                                                                    );
                                                                                  } else {
                                                                                    var data =
                                                                                      JSON.parse(
                                                                                        body
                                                                                      );
                                                                                    console.log(
                                                                                      " Level 2C :Check Status Response Body:"
                                                                                    ); //comment
                                                                                    // console.log(data.data.transactionId);
                                                                                    // console.log(data.data.providerReferenceId);
                                                                                    console.log(
                                                                                      "Level 2C :Check Status  API RESPONSE: " +
                                                                                        data.success
                                                                                    );
                                                                                    console.log(
                                                                                      data.code
                                                                                    );
                                                                                    switch (
                                                                                      data.code
                                                                                    ) {
                                                                                      case "PAYMENT_SUCCESS":
                                                                                        console.log(
                                                                                          "Level 2C : Refund Process Completed..."
                                                                                        );
                                                                                        console.log(
                                                                                          rid2
                                                                                        );
                                                                                        const srfd =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        console.log(
                                                                                          "Flow end with CHECK_STATUS SUCCESSFULLY PAYMENT_SUCCESS : 4 "
                                                                                        );
                                                                                        break;
                                                                                      case "PAYMENT_ERROR":
                                                                                        console.log(
                                                                                          rid3
                                                                                        );
                                                                                        frfd =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        console.log(
                                                                                          "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                                        );
                                                                                        /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3C:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                        console.log(
                                                                                          "BLOCK:PAYMENT_ERROR :END  3c:1 "
                                                                                        );
                                                                                        //    //console.log(svtr);
                                                                                        //    const rid3 = await createRefund(svtr.id);
                                                                                        //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                                                        //    console.log(rid3);
                                                                                        //when request complete then add here code for call refund api again and handle errors and pending process
                                                                                        break;

                                                                                      case "INTERNAL_SERVER_ERROR":
                                                                                      case "TIMED_OUT":
                                                                                      case "PAYMENT_PENDING":
                                                                                        /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:INTERNAL_SERVER_ERROR :END  3C:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                        console.log(
                                                                                          rid2
                                                                                        );
                                                                                        frfd =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        console.log(
                                                                                          frfd
                                                                                        );
                                                                                        console.log(
                                                                                          "FINAL Flow end with CHECK_STATUS FAILED PAYMENT_ERROR,INTERNAL_SERVER_ERROR,TIMED_OUT,PAYMENT_PENDING : 3 "
                                                                                        );
                                                                                        //when request complete then add here code for call refund api again and handle errors and pending process
                                                                                        break;
                                                                                      default:
                                                                                        console.log(
                                                                                          rid3
                                                                                        );
                                                                                        frfd3 =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        console.log(
                                                                                          frfd3
                                                                                        );
                                                                                        console.log(
                                                                                          "Flow end with DEFAULT SWITCH CASE : 1 "
                                                                                        );
                                                                                    }
                                                                                  }
                                                                                }
                                                                              );
                                                                            },
                                                                            delayTime
                                                                          );
                                                                          break;
                                                                        default:
                                                                          console.log(
                                                                            rid3
                                                                          );
                                                                          frfd3 =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          console.log(
                                                                            frfd3
                                                                          );
                                                                          console.log(
                                                                            "Flow end with DEFAULT SWITCH CASE : 1 "
                                                                          );
                                                                      }
                                                                    }
                                                                  }
                                                                );
                                                              },
                                                              delayTime
                                                            );
                                                            break;
                                                          default:
                                                            console.log(rid3);
                                                            frfd3 =
                                                              await storeRefund(
                                                                data,
                                                                rid3
                                                              );
                                                            console.log(frfd3);
                                                            console.log(
                                                              "Flow end with DEFAULT SWITCH CASE : 2 "
                                                            );
                                                        }
                                                      }
                                                    }
                                                  );
                                                }, delayTime);
                                                break;
                                              default:
                                                console.log(rid3);
                                                frfd3 = await storeRefund(
                                                  data,
                                                  rid3
                                                );
                                                console.log(frfd3);
                                                console.log(
                                                  "Flow end with DEFAULT SWITCH CASE : 3 "
                                                );
                                            }
                                          }
                                        }
                                      );
                                    }, delayTime);
                                    break;

                                  case "INTERNAL_SERVER_ERROR":
                                  case "TIMED_OUT":
                                  case "PAYMENT_PENDING":
                                    // case 'PAYMENT_ERROR'://need to remove
                                    console.log("Check Status API calling....");
                                    console.log(
                                      "Level 2A : Refund Process status : " +
                                        data.code
                                    );
                                    const prfd = await storeRefund(data, rid2);
                                    //console.log(prfd);
                                    //console.log(svtr.id);
                                    const checksum = cjs
                                      .SHA256(
                                        "/v3/transaction/" +
                                          merchantId +
                                          "/" +
                                          rid2 +
                                          "/status" +
                                          saltKey
                                      )
                                      .toString(cjs.enc.Hex);
                                    //console.log("Api checksum: ", checksum);
                                    xVerify = checksum + "###" + saltIndex;
                                    //console.log(xVerify);
                                    options = {
                                      method: "GET",
                                      url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid2}/status`,
                                      headers: {
                                        "Content-Type": "application/json",
                                        "X-VERIFY": xVerify,
                                      },
                                    };
                                    console.log("Level 2A : Request data:"); //comment
                                    console.log(options); //comment
                                    ///////////////////////////////////////////////////////////////time out/////////////////////////////////////////////////////
                                    setTimeout(function () {
                                      request(
                                        options,
                                        async function (error, response, body) {
                                          if (error) {
                                            /////////need to handle here if error comes///////
                                            console.log(error);
                                          } else {
                                            var data = JSON.parse(body);
                                            console.log(
                                              " Level 2B :Check Status Response Body:"
                                            ); //comment
                                            //console.log(data);
                                            console.log(
                                              "Level 2B : Check Status API RESPONSE: " +
                                                data.success
                                            );
                                            console.log(data.code);
                                            switch (data.code) {
                                              case "PAYMENT_SUCCESS":
                                                console.log(
                                                  "Level 2B : Check Status Process Completed..."
                                                );
                                                console.log(rid2);
                                                const srfd = await storeRefund(
                                                  data,
                                                  rid2
                                                );
                                                console.log(
                                                  "Flow end with CHECK STATUS PAYMENT_SUCCESS : 3 "
                                                );
                                                break;

                                              case "PAYMENT_ERROR":
                                                console.log(rid2);
                                                frfd = await storeRefund(
                                                  data,
                                                  rid2
                                                );
                                                console.log(
                                                  "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                );

                                                //console.log(svtr);
                                                /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:REFUND 3      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                console.log("BLOCK:REFUND 3");
                                                const rid3 = await createRefund(
                                                  svtr.id
                                                );
                                                console.log(
                                                  "Level 2A: NEW REFUND ID GENERATED.."
                                                ); /////////////////////////////////////
                                                console.log(rid3);
                                                //when request complete then add here code for call refund api again and handle errors and pending process
                                                //when request complete then add here code for call refund api again and handle errors and pending process
                                                console.log(
                                                  "Level 2: Calling Refund API"
                                                );
                                                const url =
                                                  "mercury-uat.phonepe.com";
                                                const path =
                                                  "/v3/credit/backToSource";
                                                saltKey =
                                                  "0afb5aa4-2206-4ea0-b081-fb94270b8c96";
                                                saltIndex = 1;
                                                const decodedRequest = {
                                                  merchantId: merchantId,
                                                  transactionId: rid3,
                                                  providerReferenceId:
                                                    svtr.providerReferenceId,
                                                  amount: rfAmount,
                                                  message: "Incorrect Amount",
                                                };
                                                // console.log(decodedRequest);
                                                let encodedRequest =
                                                  decodedRequest === ""
                                                    ? ""
                                                    : Buffer.from(
                                                        JSON.stringify(
                                                          decodedRequest
                                                        )
                                                      ).toString("base64");
                                                generateChecksum(
                                                  encodedRequest,
                                                  path,
                                                  saltKey,
                                                  saltIndex
                                                );
                                                function generateChecksum(
                                                  encodedRequest,
                                                  path,
                                                  saltKey,
                                                  keyIndex
                                                ) {
                                                  const checksum = cjs
                                                    .SHA256(
                                                      encodedRequest +
                                                        path +
                                                        saltKey
                                                    )
                                                    .toString(cjs.enc.Hex);
                                                  // console.log("base64 request:", encodedRequest, "Api checksum: ", checksum);
                                                  xVerify =
                                                    checksum + "###" + keyIndex;
                                                }
                                                if (encodedRequest === "")
                                                  body1 = "";
                                                else
                                                  body1 = JSON.stringify({
                                                    request: encodedRequest,
                                                  });
                                                options2 = {
                                                  method: "POST",
                                                  url: "https://mercury-uat.phonepe.com/v3/credit/backToSource",
                                                  headers: {
                                                    "Content-Type":
                                                      "application/json",
                                                    "X-VERIFY": xVerify,
                                                  },
                                                  body: body1,
                                                };
                                                console.log(
                                                  " Level 2: Request data:"
                                                ); //comment
                                                console.log(options2); //comment
                                                ////////////////////////////////////////////////////////////////////////////////////////////////time out//////////////////////////////////////////////////////////////////////////////////////////////////
                                                setTimeout(function () {
                                                  request(
                                                    options2,
                                                    async function (
                                                      error,
                                                      response,
                                                      body
                                                    ) {
                                                      if (error) {
                                                        /////////need to handle here if error comes///////
                                                        console.log(error);
                                                      } else {
                                                        var data =
                                                          JSON.parse(body);
                                                        console.log(
                                                          "Level 2A :Response Body:"
                                                        ); //comment
                                                        //console.log(data);
                                                        console.log(
                                                          "Level 2A :REFUND API RESPONSE: " +
                                                            data.success
                                                        );
                                                        console.log(data.code);
                                                        switch (data.code) {
                                                          case "PAYMENT_SUCCESS":
                                                            console.log(
                                                              "Level 2A :Refund Process Completed..."
                                                            );
                                                            console.log(rid3);
                                                            const srfd =
                                                              await storeRefund(
                                                                data,
                                                                rid3
                                                              );
                                                            console.log(
                                                              "Flow end with REFUND SUCCESSFULLY PAYMENT_SUCCESS : 2 "
                                                            );
                                                            break;

                                                          case "PAYMENT_ERROR":
                                                            console.log(rid3);
                                                            frfd =
                                                              await storeRefund(
                                                                data,
                                                                rid3
                                                              );
                                                            console.log(
                                                              "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                            );
                                                            /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                            console.log(
                                                              "BLOCK:PAYMENT_ERROR :END  1 "
                                                            );
                                                            //    //console.log(svtr);
                                                            //    const rid3 = await createRefund(svtr.id);
                                                            //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                            //    console.log(rid3);
                                                            //when request complete then add here code for call refund api again and handle errors and pending process
                                                            break;
                                                          case "INTERNAL_SERVER_ERROR":
                                                          case "TIMED_OUT":
                                                          case "PAYMENT_PENDING":
                                                            // case 'PAYMENT_ERROR'://need to remove
                                                            console.log(
                                                              "Check Status API calling...."
                                                            );
                                                            console.log(
                                                              "Level 2A : Refund Process status : " +
                                                                data.code
                                                            );
                                                            const prfd =
                                                              await storeRefund(
                                                                data,
                                                                rid3
                                                              );
                                                            /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:Check_Status 3A      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                            console.log(
                                                              "BLOCK:Check_Status 3A"
                                                            );
                                                            //console.log(prfd);
                                                            //console.log(svtr.id);
                                                            const checksum = cjs
                                                              .SHA256(
                                                                "/v3/transaction/" +
                                                                  merchantId +
                                                                  "/" +
                                                                  rid3 +
                                                                  "/status" +
                                                                  saltKey
                                                              )
                                                              .toString(
                                                                cjs.enc.Hex
                                                              );
                                                            //console.log("Api checksum: ", checksum);
                                                            xVerify =
                                                              checksum +
                                                              "###" +
                                                              saltIndex;
                                                            //console.log(xVerify);
                                                            options = {
                                                              method: "GET",
                                                              url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                                              headers: {
                                                                "Content-Type":
                                                                  "application/json",
                                                                "X-VERIFY":
                                                                  xVerify,
                                                              },
                                                            };
                                                            console.log(
                                                              "Level 2A : Request data:"
                                                            ); //comment
                                                            console.log(
                                                              options
                                                            ); //comment
                                                            ///////////////////////////////////////////////////////////////time out/////////////////////////////////////////////////////
                                                            setTimeout(
                                                              function () {
                                                                request(
                                                                  options,
                                                                  async function (
                                                                    error,
                                                                    response,
                                                                    body
                                                                  ) {
                                                                    if (error) {
                                                                      /////////need to handle here if error comes///////
                                                                      console.log(
                                                                        error
                                                                      );
                                                                    } else {
                                                                      var data =
                                                                        JSON.parse(
                                                                          body
                                                                        );
                                                                      console.log(
                                                                        " Level 2B :Check Status Response Body:"
                                                                      ); //comment
                                                                      //console.log(data);
                                                                      console.log(
                                                                        "Level 2B : Check Status API RESPONSE: " +
                                                                          data.success
                                                                      );
                                                                      console.log(
                                                                        data.code
                                                                      );
                                                                      switch (
                                                                        data.code
                                                                      ) {
                                                                        case "PAYMENT_SUCCESS":
                                                                          console.log(
                                                                            "Level 2B : Check Status Process Completed..."
                                                                          );
                                                                          console.log(
                                                                            rid3
                                                                          );
                                                                          const srfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          console.log(
                                                                            "Flow end with CHECK STATUS PAYMENT_SUCCESS : 3 "
                                                                          );
                                                                          break;

                                                                        case "PAYMENT_ERROR":
                                                                          console.log(
                                                                            rid3
                                                                          );
                                                                          frfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          console.log(
                                                                            "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                          );
                                                                          /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3A:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                          console.log(
                                                                            "BLOCK:PAYMENT_ERROR :END  3A:1 "
                                                                          );
                                                                          //    //console.log(svtr);
                                                                          //    const rid4 = await createRefund(svtr.id);
                                                                          //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                                          //    console.log(rid4);
                                                                          //when request complete then add here code for call refund api again and handle errors and pending process
                                                                          break;

                                                                        case "INTERNAL_SERVER_ERROR":
                                                                        case "TIMED_OUT":
                                                                        case "PAYMENT_PENDING":
                                                                          /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@        BLOCK:Check_Status 3B     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                          console.log(
                                                                            "BLOCK:Check_Status 3B "
                                                                          );
                                                                          console.log(
                                                                            "Level 2B : Refund Process status : " +
                                                                              data.code
                                                                          );
                                                                          // console.log(data.data.transactionId);
                                                                          // console.log(data.data.providerReferenceId);
                                                                          const prfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          //console.log(prfd);
                                                                          // console.log(svtr.id);
                                                                          const checksum =
                                                                            cjs
                                                                              .SHA256(
                                                                                "/v3/transaction/" +
                                                                                  merchantId +
                                                                                  "/" +
                                                                                  rid3 +
                                                                                  "/status" +
                                                                                  saltKey
                                                                              )
                                                                              .toString(
                                                                                cjs
                                                                                  .enc
                                                                                  .Hex
                                                                              );
                                                                          //console.log("Api checksum: ", checksum);
                                                                          xVerify =
                                                                            checksum +
                                                                            "###" +
                                                                            saltIndex;
                                                                          //console.log(xVerify);
                                                                          const options =
                                                                            {
                                                                              method:
                                                                                "GET",
                                                                              url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                                                              headers:
                                                                                {
                                                                                  "Content-Type":
                                                                                    "application/json",
                                                                                  "X-VERIFY":
                                                                                    xVerify,
                                                                                },
                                                                            };
                                                                          console.log(
                                                                            " Level 2C :Request data:"
                                                                          ); //comment
                                                                          console.log(
                                                                            options
                                                                          ); //comment
                                                                          /////////////////////////////////////////////time out///////////////////////////////////////////////////////////////////
                                                                          setTimeout(
                                                                            function () {
                                                                              request(
                                                                                options,
                                                                                async function (
                                                                                  error,
                                                                                  response,
                                                                                  body
                                                                                ) {
                                                                                  if (
                                                                                    error
                                                                                  ) {
                                                                                    /////////need to handle here if error comes///////
                                                                                    console.log(
                                                                                      error
                                                                                    );
                                                                                  } else {
                                                                                    var data =
                                                                                      JSON.parse(
                                                                                        body
                                                                                      );
                                                                                    console.log(
                                                                                      " Level 2C :Check Status Response Body:"
                                                                                    ); //comment
                                                                                    // console.log(data.data.transactionId);
                                                                                    // console.log(data.data.providerReferenceId);
                                                                                    console.log(
                                                                                      "Level 2C :Check Status  API RESPONSE: " +
                                                                                        data.success
                                                                                    );
                                                                                    console.log(
                                                                                      data.code
                                                                                    );
                                                                                    switch (
                                                                                      data.code
                                                                                    ) {
                                                                                      case "PAYMENT_SUCCESS":
                                                                                        console.log(
                                                                                          "Level 2C : Refund Process Completed..."
                                                                                        );
                                                                                        console.log(
                                                                                          rid2
                                                                                        );
                                                                                        const srfd =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        console.log(
                                                                                          "Flow end with CHECK_STATUS SUCCESSFULLY PAYMENT_SUCCESS : 4 "
                                                                                        );
                                                                                        break;
                                                                                      case "PAYMENT_ERROR":
                                                                                        console.log(
                                                                                          rid3
                                                                                        );
                                                                                        frfd =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        console.log(
                                                                                          "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                                        );
                                                                                        /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3B:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                        console.log(
                                                                                          "BLOCK:PAYMENT_ERROR :END  3c:1 "
                                                                                        );
                                                                                        //    //console.log(svtr);
                                                                                        //    const rid3 = await createRefund(svtr.id);
                                                                                        //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                                                        //    console.log(rid3);
                                                                                        //when request complete then add here code for call refund api again and handle errors and pending process
                                                                                        break;

                                                                                      case "INTERNAL_SERVER_ERROR":
                                                                                      case "TIMED_OUT":
                                                                                      case "PAYMENT_PENDING":
                                                                                        /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@        BLOCK:Check_Status 3C     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                        console.log(
                                                                                          "BLOCK:Check_Status 3C "
                                                                                        );
                                                                                        console.log(
                                                                                          "Level 2B : Refund Process status : " +
                                                                                            data.code
                                                                                        );
                                                                                        // console.log(data.data.transactionId);
                                                                                        // console.log(data.data.providerReferenceId);
                                                                                        const prfd =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        //console.log(prfd);
                                                                                        // console.log(svtr.id);
                                                                                        const checksum =
                                                                                          cjs
                                                                                            .SHA256(
                                                                                              "/v3/transaction/" +
                                                                                                merchantId +
                                                                                                "/" +
                                                                                                rid3 +
                                                                                                "/status" +
                                                                                                saltKey
                                                                                            )
                                                                                            .toString(
                                                                                              cjs
                                                                                                .enc
                                                                                                .Hex
                                                                                            );
                                                                                        //console.log("Api checksum: ", checksum);
                                                                                        xVerify =
                                                                                          checksum +
                                                                                          "###" +
                                                                                          saltIndex;
                                                                                        //console.log(xVerify);
                                                                                        const options =
                                                                                          {
                                                                                            method:
                                                                                              "GET",
                                                                                            url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                                                                            headers:
                                                                                              {
                                                                                                "Content-Type":
                                                                                                  "application/json",
                                                                                                "X-VERIFY":
                                                                                                  xVerify,
                                                                                              },
                                                                                          };
                                                                                        console.log(
                                                                                          " Level 2C :Request data:"
                                                                                        ); //comment
                                                                                        console.log(
                                                                                          options
                                                                                        ); //comment
                                                                                        /////////////////////////////////////////////time out///////////////////////////////////////////////////////////////////
                                                                                        setTimeout(
                                                                                          function () {
                                                                                            request(
                                                                                              options,
                                                                                              async function (
                                                                                                error,
                                                                                                response,
                                                                                                body
                                                                                              ) {
                                                                                                if (
                                                                                                  error
                                                                                                ) {
                                                                                                  /////////need to handle here if error comes///////
                                                                                                  console.log(
                                                                                                    error
                                                                                                  );
                                                                                                } else {
                                                                                                  var data =
                                                                                                    JSON.parse(
                                                                                                      body
                                                                                                    );
                                                                                                  console.log(
                                                                                                    " Level 2C :Check Status Response Body:"
                                                                                                  ); //comment
                                                                                                  // console.log(data.data.transactionId);
                                                                                                  // console.log(data.data.providerReferenceId);
                                                                                                  console.log(
                                                                                                    "Level 2C :Check Status  API RESPONSE: " +
                                                                                                      data.success
                                                                                                  );
                                                                                                  console.log(
                                                                                                    data.code
                                                                                                  );
                                                                                                  switch (
                                                                                                    data.code
                                                                                                  ) {
                                                                                                    case "PAYMENT_SUCCESS":
                                                                                                      console.log(
                                                                                                        "Level 2C : Refund Process Completed..."
                                                                                                      );
                                                                                                      console.log(
                                                                                                        rid2
                                                                                                      );
                                                                                                      const srfd =
                                                                                                        await storeRefund(
                                                                                                          data,
                                                                                                          rid3
                                                                                                        );
                                                                                                      console.log(
                                                                                                        "Flow end with CHECK_STATUS SUCCESSFULLY PAYMENT_SUCCESS : 4 "
                                                                                                      );
                                                                                                      break;
                                                                                                    case "PAYMENT_ERROR":
                                                                                                      console.log(
                                                                                                        rid3
                                                                                                      );
                                                                                                      frfd =
                                                                                                        await storeRefund(
                                                                                                          data,
                                                                                                          rid3
                                                                                                        );
                                                                                                      console.log(
                                                                                                        "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                                                      );
                                                                                                      /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3C:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                                      console.log(
                                                                                                        "BLOCK:PAYMENT_ERROR :END  3c:1 "
                                                                                                      );
                                                                                                      //    //console.log(svtr);
                                                                                                      //    const rid3 = await createRefund(svtr.id);
                                                                                                      //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                                                                      //    console.log(rid3);
                                                                                                      //when request complete then add here code for call refund api again and handle errors and pending process
                                                                                                      break;

                                                                                                    case "INTERNAL_SERVER_ERROR":
                                                                                                    case "TIMED_OUT":
                                                                                                    case "PAYMENT_PENDING":
                                                                                                      /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:INTERNAL_SERVER_ERROR :END  3C:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                                      console.log(
                                                                                                        rid2
                                                                                                      );
                                                                                                      frfd =
                                                                                                        await storeRefund(
                                                                                                          data,
                                                                                                          rid3
                                                                                                        );
                                                                                                      console.log(
                                                                                                        frfd
                                                                                                      );
                                                                                                      console.log(
                                                                                                        "FINAL Flow end with CHECK_STATUS FAILED PAYMENT_ERROR,INTERNAL_SERVER_ERROR,TIMED_OUT,PAYMENT_PENDING : 3 "
                                                                                                      );
                                                                                                      //when request complete then add here code for call refund api again and handle errors and pending process
                                                                                                      break;
                                                                                                    default:
                                                                                                      console.log(
                                                                                                        rid3
                                                                                                      );
                                                                                                      frfd3 =
                                                                                                        await storeRefund(
                                                                                                          data,
                                                                                                          rid3
                                                                                                        );
                                                                                                      console.log(
                                                                                                        frfd3
                                                                                                      );
                                                                                                      console.log(
                                                                                                        "Flow end with DEFAULT SWITCH CASE : 1 "
                                                                                                      );
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            );
                                                                                          },
                                                                                          delayTime
                                                                                        );
                                                                                        break;
                                                                                      default:
                                                                                        console.log(
                                                                                          rid3
                                                                                        );
                                                                                        frfd3 =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        console.log(
                                                                                          frfd3
                                                                                        );
                                                                                        console.log(
                                                                                          "Flow end with DEFAULT SWITCH CASE : 1 "
                                                                                        );
                                                                                    }
                                                                                  }
                                                                                }
                                                                              );
                                                                            },
                                                                            delayTime
                                                                          );
                                                                          break;
                                                                        default:
                                                                          console.log(
                                                                            rid3
                                                                          );
                                                                          frfd3 =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          console.log(
                                                                            frfd3
                                                                          );
                                                                          console.log(
                                                                            "Flow end with DEFAULT SWITCH CASE : 2 "
                                                                          );
                                                                      }
                                                                    }
                                                                  }
                                                                );
                                                              },
                                                              delayTime
                                                            );
                                                            break;
                                                          default:
                                                            console.log(rid3);
                                                            frfd3 =
                                                              await storeRefund(
                                                                data,
                                                                rid3
                                                              );
                                                            console.log(frfd3);
                                                            console.log(
                                                              "Flow end with DEFAULT SWITCH CASE : 3 "
                                                            );
                                                        }
                                                      }
                                                    }
                                                  );
                                                }, delayTime);
                                                break;

                                              case "INTERNAL_SERVER_ERROR":
                                              case "TIMED_OUT":
                                              case "PAYMENT_PENDING":
                                                console.log(
                                                  "Level 2B : Refund Process status : " +
                                                    data.code
                                                );
                                                // console.log(data.data.transactionId);
                                                // console.log(data.data.providerReferenceId);
                                                const prfd = await storeRefund(
                                                  data,
                                                  rid2
                                                );
                                                //console.log(prfd);
                                                // console.log(svtr.id);
                                                const checksum = cjs
                                                  .SHA256(
                                                    "/v3/transaction/" +
                                                      merchantId +
                                                      "/" +
                                                      rid2 +
                                                      "/status" +
                                                      saltKey
                                                  )
                                                  .toString(cjs.enc.Hex);
                                                //console.log("Api checksum: ", checksum);
                                                xVerify =
                                                  checksum + "###" + saltIndex;
                                                //console.log(xVerify);
                                                const options = {
                                                  method: "GET",
                                                  url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid2}/status`,
                                                  headers: {
                                                    "Content-Type":
                                                      "application/json",
                                                    "X-VERIFY": xVerify,
                                                  },
                                                };
                                                console.log(
                                                  " Level 2C :Request data:"
                                                ); //comment
                                                console.log(options); //comment
                                                /////////////////////////////////////////////time out///////////////////////////////////////////////////////////////////
                                                setTimeout(function () {
                                                  request(
                                                    options,
                                                    async function (
                                                      error,
                                                      response,
                                                      body
                                                    ) {
                                                      if (error) {
                                                        /////////need to handle here if error comes///////
                                                        console.log(error);
                                                      } else {
                                                        var data =
                                                          JSON.parse(body);
                                                        console.log(
                                                          " Level 2C :Check Status Response Body:"
                                                        ); //comment
                                                        // console.log(data.data.transactionId);
                                                        // console.log(data.data.providerReferenceId);
                                                        console.log(
                                                          "Level 2C :Check Status  API RESPONSE: " +
                                                            data.success
                                                        );
                                                        console.log(data.code);
                                                        switch (data.code) {
                                                          case "PAYMENT_SUCCESS":
                                                            console.log(
                                                              "Level 2C : Refund Process Completed..."
                                                            );
                                                            console.log(rid2);
                                                            const srfd =
                                                              await storeRefund(
                                                                data,
                                                                rid2
                                                              );
                                                            console.log(
                                                              "Flow end with CHECK_STATUS SUCCESSFULLY PAYMENT_SUCCESS : 4 "
                                                            );
                                                            break;
                                                          case "PAYMENT_ERROR":
                                                            console.log(rid2);
                                                            frfd =
                                                              await storeRefund(
                                                                data,
                                                                rid2
                                                              );
                                                            console.log(
                                                              "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                            );

                                                            //console.log(svtr);
                                                            /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:REFUND 3      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                            console.log(
                                                              "BLOCK:REFUND 3"
                                                            );
                                                            const rid3 =
                                                              await createRefund(
                                                                svtr.id
                                                              );
                                                            console.log(
                                                              "Level 2A: NEW REFUND ID GENERATED.."
                                                            ); /////////////////////////////////////
                                                            console.log(rid3);
                                                            //when request complete then add here code for call refund api again and handle errors and pending process
                                                            //when request complete then add here code for call refund api again and handle errors and pending process
                                                            console.log(
                                                              "Level 2: Calling Refund API"
                                                            );
                                                            const url =
                                                              "mercury-uat.phonepe.com";
                                                            const path =
                                                              "/v3/credit/backToSource";
                                                            saltKey =
                                                              "0afb5aa4-2206-4ea0-b081-fb94270b8c96";
                                                            saltIndex = 1;
                                                            const decodedRequest =
                                                              {
                                                                merchantId:
                                                                  merchantId,
                                                                transactionId:
                                                                  rid3,
                                                                providerReferenceId:
                                                                  svtr.providerReferenceId,
                                                                amount:
                                                                  rfAmount,
                                                                message:
                                                                  "Incorrect Amount",
                                                              };
                                                            // console.log(decodedRequest);
                                                            let encodedRequest =
                                                              decodedRequest ===
                                                              ""
                                                                ? ""
                                                                : Buffer.from(
                                                                    JSON.stringify(
                                                                      decodedRequest
                                                                    )
                                                                  ).toString(
                                                                    "base64"
                                                                  );
                                                            generateChecksum(
                                                              encodedRequest,
                                                              path,
                                                              saltKey,
                                                              saltIndex
                                                            );
                                                            function generateChecksum(
                                                              encodedRequest,
                                                              path,
                                                              saltKey,
                                                              keyIndex
                                                            ) {
                                                              const checksum =
                                                                cjs
                                                                  .SHA256(
                                                                    encodedRequest +
                                                                      path +
                                                                      saltKey
                                                                  )
                                                                  .toString(
                                                                    cjs.enc.Hex
                                                                  );
                                                              // console.log("base64 request:", encodedRequest, "Api checksum: ", checksum);
                                                              xVerify =
                                                                checksum +
                                                                "###" +
                                                                keyIndex;
                                                            }
                                                            if (
                                                              encodedRequest ===
                                                              ""
                                                            )
                                                              body1 = "";
                                                            else
                                                              body1 =
                                                                JSON.stringify({
                                                                  request:
                                                                    encodedRequest,
                                                                });
                                                            options2 = {
                                                              method: "POST",
                                                              url: "https://mercury-uat.phonepe.com/v3/credit/backToSource",
                                                              headers: {
                                                                "Content-Type":
                                                                  "application/json",
                                                                "X-VERIFY":
                                                                  xVerify,
                                                              },
                                                              body: body1,
                                                            };
                                                            console.log(
                                                              " Level 2: Request data:"
                                                            ); //comment
                                                            console.log(
                                                              options2
                                                            ); //comment
                                                            ////////////////////////////////////////////////////////////////////////////////////////////////time out//////////////////////////////////////////////////////////////////////////////////////////////////
                                                            setTimeout(
                                                              function () {
                                                                request(
                                                                  options2,
                                                                  async function (
                                                                    error,
                                                                    response,
                                                                    body
                                                                  ) {
                                                                    if (error) {
                                                                      /////////need to handle here if error comes///////
                                                                      console.log(
                                                                        error
                                                                      );
                                                                    } else {
                                                                      var data =
                                                                        JSON.parse(
                                                                          body
                                                                        );
                                                                      console.log(
                                                                        "Level 2A :Response Body:"
                                                                      ); //comment
                                                                      //console.log(data);
                                                                      console.log(
                                                                        "Level 2A :REFUND API RESPONSE: " +
                                                                          data.success
                                                                      );
                                                                      console.log(
                                                                        data.code
                                                                      );
                                                                      switch (
                                                                        data.code
                                                                      ) {
                                                                        case "PAYMENT_SUCCESS":
                                                                          console.log(
                                                                            "Level 2A :Refund Process Completed..."
                                                                          );
                                                                          console.log(
                                                                            rid3
                                                                          );
                                                                          const srfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          console.log(
                                                                            "Flow end with REFUND SUCCESSFULLY PAYMENT_SUCCESS : 2 "
                                                                          );
                                                                          break;

                                                                        case "PAYMENT_ERROR":
                                                                          console.log(
                                                                            rid3
                                                                          );
                                                                          frfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          console.log(
                                                                            "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                          );
                                                                          /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                          console.log(
                                                                            "BLOCK:PAYMENT_ERROR :END  1 "
                                                                          );
                                                                          //    //console.log(svtr);
                                                                          //    const rid3 = await createRefund(svtr.id);
                                                                          //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                                          //    console.log(rid3);
                                                                          //when request complete then add here code for call refund api again and handle errors and pending process
                                                                          break;
                                                                        case "INTERNAL_SERVER_ERROR":
                                                                        case "TIMED_OUT":
                                                                        case "PAYMENT_PENDING":
                                                                          // case 'PAYMENT_ERROR'://need to remove
                                                                          console.log(
                                                                            "Check Status API calling...."
                                                                          );
                                                                          console.log(
                                                                            "Level 2A : Refund Process status : " +
                                                                              data.code
                                                                          );
                                                                          const prfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:Check_Status 3A      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                          console.log(
                                                                            "BLOCK:Check_Status 3A"
                                                                          );
                                                                          //console.log(prfd);
                                                                          //console.log(svtr.id);
                                                                          const checksum =
                                                                            cjs
                                                                              .SHA256(
                                                                                "/v3/transaction/" +
                                                                                  merchantId +
                                                                                  "/" +
                                                                                  rid3 +
                                                                                  "/status" +
                                                                                  saltKey
                                                                              )
                                                                              .toString(
                                                                                cjs
                                                                                  .enc
                                                                                  .Hex
                                                                              );
                                                                          //console.log("Api checksum: ", checksum);
                                                                          xVerify =
                                                                            checksum +
                                                                            "###" +
                                                                            saltIndex;
                                                                          //console.log(xVerify);
                                                                          options =
                                                                            {
                                                                              method:
                                                                                "GET",
                                                                              url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                                                              headers:
                                                                                {
                                                                                  "Content-Type":
                                                                                    "application/json",
                                                                                  "X-VERIFY":
                                                                                    xVerify,
                                                                                },
                                                                            };
                                                                          console.log(
                                                                            "Level 2A : Request data:"
                                                                          ); //comment
                                                                          console.log(
                                                                            options
                                                                          ); //comment
                                                                          ///////////////////////////////////////////////////////////////time out/////////////////////////////////////////////////////
                                                                          setTimeout(
                                                                            function () {
                                                                              request(
                                                                                options,
                                                                                async function (
                                                                                  error,
                                                                                  response,
                                                                                  body
                                                                                ) {
                                                                                  if (
                                                                                    error
                                                                                  ) {
                                                                                    /////////need to handle here if error comes///////
                                                                                    console.log(
                                                                                      error
                                                                                    );
                                                                                  } else {
                                                                                    var data =
                                                                                      JSON.parse(
                                                                                        body
                                                                                      );
                                                                                    console.log(
                                                                                      " Level 2B :Check Status Response Body:"
                                                                                    ); //comment
                                                                                    //console.log(data);
                                                                                    console.log(
                                                                                      "Level 2B : Check Status API RESPONSE: " +
                                                                                        data.success
                                                                                    );
                                                                                    console.log(
                                                                                      data.code
                                                                                    );
                                                                                    switch (
                                                                                      data.code
                                                                                    ) {
                                                                                      case "PAYMENT_SUCCESS":
                                                                                        console.log(
                                                                                          "Level 2B : Check Status Process Completed..."
                                                                                        );
                                                                                        console.log(
                                                                                          rid3
                                                                                        );
                                                                                        const srfd =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        console.log(
                                                                                          "Flow end with CHECK STATUS PAYMENT_SUCCESS : 3 "
                                                                                        );
                                                                                        break;

                                                                                      case "PAYMENT_ERROR":
                                                                                        console.log(
                                                                                          rid3
                                                                                        );
                                                                                        frfd =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        console.log(
                                                                                          "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                                        );
                                                                                        /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3A:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                        console.log(
                                                                                          "BLOCK:PAYMENT_ERROR :END  3A:1 "
                                                                                        );
                                                                                        //    //console.log(svtr);
                                                                                        //    const rid4 = await createRefund(svtr.id);
                                                                                        //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                                                        //    console.log(rid4);
                                                                                        //when request complete then add here code for call refund api again and handle errors and pending process
                                                                                        break;

                                                                                      case "INTERNAL_SERVER_ERROR":
                                                                                      case "TIMED_OUT":
                                                                                      case "PAYMENT_PENDING":
                                                                                        /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@        BLOCK:Check_Status 3B     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                        console.log(
                                                                                          "BLOCK:Check_Status 3B "
                                                                                        );
                                                                                        console.log(
                                                                                          "Level 2B : Refund Process status : " +
                                                                                            data.code
                                                                                        );
                                                                                        // console.log(data.data.transactionId);
                                                                                        // console.log(data.data.providerReferenceId);
                                                                                        const prfd =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        //console.log(prfd);
                                                                                        // console.log(svtr.id);
                                                                                        const checksum =
                                                                                          cjs
                                                                                            .SHA256(
                                                                                              "/v3/transaction/" +
                                                                                                merchantId +
                                                                                                "/" +
                                                                                                rid3 +
                                                                                                "/status" +
                                                                                                saltKey
                                                                                            )
                                                                                            .toString(
                                                                                              cjs
                                                                                                .enc
                                                                                                .Hex
                                                                                            );
                                                                                        //console.log("Api checksum: ", checksum);
                                                                                        xVerify =
                                                                                          checksum +
                                                                                          "###" +
                                                                                          saltIndex;
                                                                                        //console.log(xVerify);
                                                                                        const options =
                                                                                          {
                                                                                            method:
                                                                                              "GET",
                                                                                            url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                                                                            headers:
                                                                                              {
                                                                                                "Content-Type":
                                                                                                  "application/json",
                                                                                                "X-VERIFY":
                                                                                                  xVerify,
                                                                                              },
                                                                                          };
                                                                                        console.log(
                                                                                          " Level 2C :Request data:"
                                                                                        ); //comment
                                                                                        console.log(
                                                                                          options
                                                                                        ); //comment
                                                                                        /////////////////////////////////////////////time out///////////////////////////////////////////////////////////////////
                                                                                        setTimeout(
                                                                                          function () {
                                                                                            request(
                                                                                              options,
                                                                                              async function (
                                                                                                error,
                                                                                                response,
                                                                                                body
                                                                                              ) {
                                                                                                if (
                                                                                                  error
                                                                                                ) {
                                                                                                  /////////need to handle here if error comes///////
                                                                                                  console.log(
                                                                                                    error
                                                                                                  );
                                                                                                } else {
                                                                                                  var data =
                                                                                                    JSON.parse(
                                                                                                      body
                                                                                                    );
                                                                                                  console.log(
                                                                                                    " Level 2C :Check Status Response Body:"
                                                                                                  ); //comment
                                                                                                  // console.log(data.data.transactionId);
                                                                                                  // console.log(data.data.providerReferenceId);
                                                                                                  console.log(
                                                                                                    "Level 2C :Check Status  API RESPONSE: " +
                                                                                                      data.success
                                                                                                  );
                                                                                                  console.log(
                                                                                                    data.code
                                                                                                  );
                                                                                                  switch (
                                                                                                    data.code
                                                                                                  ) {
                                                                                                    case "PAYMENT_SUCCESS":
                                                                                                      console.log(
                                                                                                        "Level 2C : Refund Process Completed..."
                                                                                                      );
                                                                                                      console.log(
                                                                                                        rid2
                                                                                                      );
                                                                                                      const srfd =
                                                                                                        await storeRefund(
                                                                                                          data,
                                                                                                          rid3
                                                                                                        );
                                                                                                      console.log(
                                                                                                        "Flow end with CHECK_STATUS SUCCESSFULLY PAYMENT_SUCCESS : 4 "
                                                                                                      );
                                                                                                      break;
                                                                                                    case "PAYMENT_ERROR":
                                                                                                      console.log(
                                                                                                        rid3
                                                                                                      );
                                                                                                      frfd =
                                                                                                        await storeRefund(
                                                                                                          data,
                                                                                                          rid3
                                                                                                        );
                                                                                                      console.log(
                                                                                                        "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                                                      );
                                                                                                      /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3B:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                                      console.log(
                                                                                                        "BLOCK:PAYMENT_ERROR :END  3c:1 "
                                                                                                      );
                                                                                                      //    //console.log(svtr);
                                                                                                      //    const rid3 = await createRefund(svtr.id);
                                                                                                      //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                                                                      //    console.log(rid3);
                                                                                                      //when request complete then add here code for call refund api again and handle errors and pending process
                                                                                                      break;

                                                                                                    case "INTERNAL_SERVER_ERROR":
                                                                                                    case "TIMED_OUT":
                                                                                                    case "PAYMENT_PENDING":
                                                                                                      /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@        BLOCK:Check_Status 3C     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                                      console.log(
                                                                                                        "BLOCK:Check_Status 3C "
                                                                                                      );
                                                                                                      console.log(
                                                                                                        "Level 2B : Refund Process status : " +
                                                                                                          data.code
                                                                                                      );
                                                                                                      // console.log(data.data.transactionId);
                                                                                                      // console.log(data.data.providerReferenceId);
                                                                                                      const prfd =
                                                                                                        await storeRefund(
                                                                                                          data,
                                                                                                          rid3
                                                                                                        );
                                                                                                      //console.log(prfd);
                                                                                                      // console.log(svtr.id);
                                                                                                      const checksum =
                                                                                                        cjs
                                                                                                          .SHA256(
                                                                                                            "/v3/transaction/" +
                                                                                                              merchantId +
                                                                                                              "/" +
                                                                                                              rid3 +
                                                                                                              "/status" +
                                                                                                              saltKey
                                                                                                          )
                                                                                                          .toString(
                                                                                                            cjs
                                                                                                              .enc
                                                                                                              .Hex
                                                                                                          );
                                                                                                      //console.log("Api checksum: ", checksum);
                                                                                                      xVerify =
                                                                                                        checksum +
                                                                                                        "###" +
                                                                                                        saltIndex;
                                                                                                      //console.log(xVerify);
                                                                                                      const options =
                                                                                                        {
                                                                                                          method:
                                                                                                            "GET",
                                                                                                          url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                                                                                          headers:
                                                                                                            {
                                                                                                              "Content-Type":
                                                                                                                "application/json",
                                                                                                              "X-VERIFY":
                                                                                                                xVerify,
                                                                                                            },
                                                                                                        };
                                                                                                      console.log(
                                                                                                        " Level 2C :Request data:"
                                                                                                      ); //comment
                                                                                                      console.log(
                                                                                                        options
                                                                                                      ); //comment
                                                                                                      /////////////////////////////////////////////time out///////////////////////////////////////////////////////////////////
                                                                                                      setTimeout(
                                                                                                        function () {
                                                                                                          request(
                                                                                                            options,
                                                                                                            async function (
                                                                                                              error,
                                                                                                              response,
                                                                                                              body
                                                                                                            ) {
                                                                                                              if (
                                                                                                                error
                                                                                                              ) {
                                                                                                                /////////need to handle here if error comes///////
                                                                                                                console.log(
                                                                                                                  error
                                                                                                                );
                                                                                                              } else {
                                                                                                                var data =
                                                                                                                  JSON.parse(
                                                                                                                    body
                                                                                                                  );
                                                                                                                console.log(
                                                                                                                  " Level 2C :Check Status Response Body:"
                                                                                                                ); //comment
                                                                                                                // console.log(data.data.transactionId);
                                                                                                                // console.log(data.data.providerReferenceId);
                                                                                                                console.log(
                                                                                                                  "Level 2C :Check Status  API RESPONSE: " +
                                                                                                                    data.success
                                                                                                                );
                                                                                                                console.log(
                                                                                                                  data.code
                                                                                                                );
                                                                                                                switch (
                                                                                                                  data.code
                                                                                                                ) {
                                                                                                                  case "PAYMENT_SUCCESS":
                                                                                                                    console.log(
                                                                                                                      "Level 2C : Refund Process Completed..."
                                                                                                                    );
                                                                                                                    console.log(
                                                                                                                      rid2
                                                                                                                    );
                                                                                                                    const srfd =
                                                                                                                      await storeRefund(
                                                                                                                        data,
                                                                                                                        rid3
                                                                                                                      );
                                                                                                                    console.log(
                                                                                                                      "Flow end with CHECK_STATUS SUCCESSFULLY PAYMENT_SUCCESS : 4 "
                                                                                                                    );
                                                                                                                    break;
                                                                                                                  case "PAYMENT_ERROR":
                                                                                                                    console.log(
                                                                                                                      rid3
                                                                                                                    );
                                                                                                                    frfd =
                                                                                                                      await storeRefund(
                                                                                                                        data,
                                                                                                                        rid3
                                                                                                                      );
                                                                                                                    console.log(
                                                                                                                      "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                                                                    );
                                                                                                                    /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3C:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                                                    console.log(
                                                                                                                      "BLOCK:PAYMENT_ERROR :END  3c:1 "
                                                                                                                    );
                                                                                                                    //    //console.log(svtr);
                                                                                                                    //    const rid3 = await createRefund(svtr.id);
                                                                                                                    //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                                                                                    //    console.log(rid3);
                                                                                                                    //when request complete then add here code for call refund api again and handle errors and pending process
                                                                                                                    break;

                                                                                                                  case "INTERNAL_SERVER_ERROR":
                                                                                                                  case "TIMED_OUT":
                                                                                                                  case "PAYMENT_PENDING":
                                                                                                                    /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:INTERNAL_SERVER_ERROR :END  3C:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                                                    console.log(
                                                                                                                      rid2
                                                                                                                    );
                                                                                                                    frfd =
                                                                                                                      await storeRefund(
                                                                                                                        data,
                                                                                                                        rid3
                                                                                                                      );
                                                                                                                    console.log(
                                                                                                                      frfd
                                                                                                                    );
                                                                                                                    console.log(
                                                                                                                      "FINAL Flow end with CHECK_STATUS FAILED PAYMENT_ERROR,INTERNAL_SERVER_ERROR,TIMED_OUT,PAYMENT_PENDING : 3 "
                                                                                                                    );
                                                                                                                    //when request complete then add here code for call refund api again and handle errors and pending process
                                                                                                                    break;
                                                                                                                  default:
                                                                                                                    console.log(
                                                                                                                      rid3
                                                                                                                    );
                                                                                                                    frfd3 =
                                                                                                                      await storeRefund(
                                                                                                                        data,
                                                                                                                        rid3
                                                                                                                      );
                                                                                                                    console.log(
                                                                                                                      frfd3
                                                                                                                    );
                                                                                                                    console.log(
                                                                                                                      "Flow end with DEFAULT SWITCH CASE : 1 "
                                                                                                                    );
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          );
                                                                                                        },
                                                                                                        delayTime
                                                                                                      );
                                                                                                      break;
                                                                                                    default:
                                                                                                      console.log(
                                                                                                        rid3
                                                                                                      );
                                                                                                      frfd3 =
                                                                                                        await storeRefund(
                                                                                                          data,
                                                                                                          rid3
                                                                                                        );
                                                                                                      console.log(
                                                                                                        frfd3
                                                                                                      );
                                                                                                      console.log(
                                                                                                        "Flow end with DEFAULT SWITCH CASE : 1 "
                                                                                                      );
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            );
                                                                                          },
                                                                                          delayTime
                                                                                        );
                                                                                        break;
                                                                                      default:
                                                                                        console.log(
                                                                                          rid3
                                                                                        );
                                                                                        frfd3 =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        console.log(
                                                                                          frfd3
                                                                                        );
                                                                                        console.log(
                                                                                          "Flow end with DEFAULT SWITCH CASE : 2 "
                                                                                        );
                                                                                    }
                                                                                  }
                                                                                }
                                                                              );
                                                                            },
                                                                            delayTime
                                                                          );
                                                                          break;
                                                                        default:
                                                                          console.log(
                                                                            rid3
                                                                          );
                                                                          frfd3 =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          console.log(
                                                                            frfd3
                                                                          );
                                                                          console.log(
                                                                            "Flow end with DEFAULT SWITCH CASE : 3 "
                                                                          );
                                                                      }
                                                                    }
                                                                  }
                                                                );
                                                              },
                                                              delayTime
                                                            );
                                                            break;

                                                          case "INTERNAL_SERVER_ERROR":
                                                          case "TIMED_OUT":
                                                          case "PAYMENT_PENDING":
                                                            console.log(rid2);
                                                            frfd =
                                                              await storeRefund(
                                                                data,
                                                                rid2
                                                              );
                                                            console.log(frfd);
                                                            console.log(
                                                              "FINAL Flow end with CHECK_STATUS FAILED PAYMENT_ERROR,INTERNAL_SERVER_ERROR,TIMED_OUT,PAYMENT_PENDING : 3 "
                                                            );
                                                            //when request complete then add here code for call refund api again and handle errors and pending process
                                                            break;
                                                          default:
                                                            console.log(rid2);
                                                            frfd2 =
                                                              await storeRefund(
                                                                data,
                                                                rid2
                                                              );
                                                            console.log(frfd2);
                                                            console.log(
                                                              "Flow end with DEFAULT SWITCH CASE : 1 "
                                                            );
                                                        }
                                                      }
                                                    }
                                                  );
                                                }, delayTime);
                                                break;
                                              default:
                                                console.log(rid2);
                                                frfd2 = await storeRefund(
                                                  data,
                                                  rid2
                                                );
                                                console.log(frfd2);
                                                console.log(
                                                  "Flow end with DEFAULT SWITCH CASE : 2 "
                                                );
                                            }
                                          }
                                        }
                                      );
                                    }, delayTime);
                                    break;
                                  default:
                                    console.log(rid2);
                                    frfd2 = await storeRefund(data, rid2);
                                    console.log(frfd2);
                                    console.log(
                                      "Flow end with DEFAULT SWITCH CASE : 3 "
                                    );
                                }
                              }
                            }
                          );
                        }, delayTime);
                        break;
                      case "INTERNAL_SERVER_ERROR":
                      case "TIMED_OUT":
                      case "PAYMENT_PENDING":
                        console.log(
                          "Level 2 : Refund Process status : " + data.code
                        );
                        // console.log(data.data.transactionId);
                        // console.log(data.data.providerReferenceId);
                        const prfd = await storeRefund(data, rid);
                        //console.log(prfd);
                        // console.log(svtr.id);
                        const checksum = cjs
                          .SHA256(
                            "/v3/transaction/" +
                              merchantId +
                              "/" +
                              rid +
                              "/status" +
                              saltKey
                          )
                          .toString(cjs.enc.Hex);
                        //console.log("Api checksum: ", checksum);
                        xVerify = checksum + "###" + saltIndex;
                        //console.log(xVerify);
                        options = {
                          method: "GET",
                          url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid}/status`,
                          headers: {
                            "Content-Type": "application/json",
                            "X-VERIFY": xVerify,
                          },
                        };
                        console.log(" Level 3 :Request data:"); //comment
                        console.log(options); //comment
                        ////////////////////////time out ////////////////////////////////////
                        setTimeout(function () {
                          request(
                            options,
                            async function (error, response, body) {
                              if (error) {
                                /////////need to handle here if error comes///////
                                console.log(error);
                              } else {
                                var data = JSON.parse(body);
                                console.log(
                                  " Level 3 :Check Status Response Body:"
                                ); //comment
                                // console.log(data.data.transactionId);
                                // console.log(data.data.providerReferenceId);
                                console.log(
                                  "Level 3 :Check Status  API RESPONSE: " +
                                    data.success
                                );
                                console.log(data.code);
                                switch (data.code) {
                                  case "PAYMENT_SUCCESS":
                                    console.log(
                                      "Level 3 : Refund Process Completed..."
                                    );
                                    console.log(rid);
                                    const srfd = await storeRefund(data, rid);
                                    console.log(
                                      "Flow end with CHECK STATUS SUCCESSFULLY PAYMENT_SUCCESS : 9"
                                    );
                                    break;
                                  case "PAYMENT_ERROR":
                                    console.log(rid);
                                    frfd = await storeRefund(data, rid);
                                    //console.log(svtr);
                                    /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:REFUND 2     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                    console.log("BLOCK:REFUND 2");
                                    const rid2 = await createRefund(svtr.id);
                                    console.log(
                                      "Level 1: NEW REFUND ID GENERATED.."
                                    ); /////////////////////////////////////
                                    console.log(rid2);
                                    //when request complete then add here code for call refund api again and handle errors and pending process
                                    console.log("Level 2: Calling Refund API");
                                    const url = "mercury-uat.phonepe.com";
                                    const path = "/v3/credit/backToSource";
                                    saltKey =
                                      "0afb5aa4-2206-4ea0-b081-fb94270b8c96";
                                    saltIndex = 1;
                                    const decodedRequest = {
                                      merchantId: merchantId,
                                      transactionId: rid2,
                                      providerReferenceId:
                                        svtr.providerReferenceId,
                                      amount: rfAmount,
                                      message: "Incorrect Amount",
                                    };
                                    // console.log(decodedRequest);
                                    let encodedRequest =
                                      decodedRequest === ""
                                        ? ""
                                        : Buffer.from(
                                            JSON.stringify(decodedRequest)
                                          ).toString("base64");
                                    generateChecksum(
                                      encodedRequest,
                                      path,
                                      saltKey,
                                      saltIndex
                                    );
                                    function generateChecksum(
                                      encodedRequest,
                                      path,
                                      saltKey,
                                      keyIndex
                                    ) {
                                      const checksum = cjs
                                        .SHA256(encodedRequest + path + saltKey)
                                        .toString(cjs.enc.Hex);
                                      // console.log("base64 request:", encodedRequest, "Api checksum: ", checksum);
                                      xVerify = checksum + "###" + keyIndex;
                                    }
                                    if (encodedRequest === "") body1 = "";
                                    else
                                      body1 = JSON.stringify({
                                        request: encodedRequest,
                                      });
                                    options2 = {
                                      method: "POST",
                                      url: "https://mercury-uat.phonepe.com/v3/credit/backToSource",
                                      headers: {
                                        "Content-Type": "application/json",
                                        "X-VERIFY": xVerify,
                                      },
                                      body: body1,
                                    };
                                    console.log(" Level 2: Request data:"); //comment
                                    console.log(options2); //comment
                                    ////////////////////////////////////////////////////////////////////////////////////////////////time out//////////////////////////////////////////////////////////////////////////////////////////////////
                                    setTimeout(function () {
                                      request(
                                        options2,
                                        async function (error, response, body) {
                                          if (error) {
                                            /////////need to handle here if error comes///////
                                            console.log(error);
                                          } else {
                                            var data = JSON.parse(body);
                                            console.log(
                                              "Level 2A :Response Body:"
                                            ); //comment
                                            //console.log(data);
                                            console.log(
                                              "Level 2A :REFUND API RESPONSE: " +
                                                data.success
                                            );
                                            console.log(data.code);
                                            switch (data.code) {
                                              case "PAYMENT_SUCCESS":
                                                console.log(
                                                  "Level 2A :Refund Process Completed..."
                                                );
                                                console.log(rid2);
                                                const srfd = await storeRefund(
                                                  data,
                                                  rid2
                                                );
                                                console.log(
                                                  "Flow end with REFUND SUCCESSFULLY PAYMENT_SUCCESS : 2 "
                                                );
                                                break;

                                              case "PAYMENT_ERROR":
                                                console.log(rid2);
                                                frfd = await storeRefund(
                                                  data,
                                                  rid2
                                                );
                                                console.log(
                                                  "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                );

                                                //console.log(svtr);
                                                /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:REFUND 3      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                console.log("BLOCK:REFUND 3");
                                                const rid3 = await createRefund(
                                                  svtr.id
                                                );
                                                console.log(
                                                  "Level 2A: NEW REFUND ID GENERATED.."
                                                ); /////////////////////////////////////
                                                console.log(rid3);
                                                //when request complete then add here code for call refund api again and handle errors and pending process
                                                //when request complete then add here code for call refund api again and handle errors and pending process
                                                console.log(
                                                  "Level 2: Calling Refund API"
                                                );
                                                const url =
                                                  "mercury-uat.phonepe.com";
                                                const path =
                                                  "/v3/credit/backToSource";
                                                saltKey =
                                                  "e99f19db-e0c5-429e-aacd-50babb81a1bb";
                                                saltIndex = 1;
                                                const decodedRequest = {
                                                  merchantId: merchantId,
                                                  transactionId: rid3,
                                                  providerReferenceId:
                                                    svtr.providerReferenceId,
                                                  amount: rfAmount,
                                                  message: "Incorrect Amount",
                                                };
                                                // console.log(decodedRequest);
                                                let encodedRequest =
                                                  decodedRequest === ""
                                                    ? ""
                                                    : Buffer.from(
                                                        JSON.stringify(
                                                          decodedRequest
                                                        )
                                                      ).toString("base64");
                                                generateChecksum(
                                                  encodedRequest,
                                                  path,
                                                  saltKey,
                                                  saltIndex
                                                );
                                                function generateChecksum(
                                                  encodedRequest,
                                                  path,
                                                  saltKey,
                                                  keyIndex
                                                ) {
                                                  const checksum = cjs
                                                    .SHA256(
                                                      encodedRequest +
                                                        path +
                                                        saltKey
                                                    )
                                                    .toString(cjs.enc.Hex);
                                                  // console.log("base64 request:", encodedRequest, "Api checksum: ", checksum);
                                                  xVerify =
                                                    checksum + "###" + keyIndex;
                                                }
                                                if (encodedRequest === "")
                                                  body1 = "";
                                                else
                                                  body1 = JSON.stringify({
                                                    request: encodedRequest,
                                                  });
                                                options2 = {
                                                  method: "POST",
                                                  url: "https://mercury-uat.phonepe.com/v3/credit/backToSource",
                                                  headers: {
                                                    "Content-Type":
                                                      "application/json",
                                                    "X-VERIFY": xVerify,
                                                  },
                                                  body: body1,
                                                };
                                                console.log(
                                                  " Level 2: Request data:"
                                                ); //comment
                                                console.log(options2); //comment
                                                ////////////////////////////////////////////////////////////////////////////////////////////////time out//////////////////////////////////////////////////////////////////////////////////////////////////
                                                setTimeout(function () {
                                                  request(
                                                    options2,
                                                    async function (
                                                      error,
                                                      response,
                                                      body
                                                    ) {
                                                      if (error) {
                                                        /////////need to handle here if error comes///////
                                                        console.log(error);
                                                      } else {
                                                        var data =
                                                          JSON.parse(body);
                                                        console.log(
                                                          "Level 2A :Response Body:"
                                                        ); //comment
                                                        //console.log(data);
                                                        console.log(
                                                          "Level 2A :REFUND API RESPONSE: " +
                                                            data.success
                                                        );
                                                        console.log(data.code);
                                                        switch (data.code) {
                                                          case "PAYMENT_SUCCESS":
                                                            console.log(
                                                              "Level 2A :Refund Process Completed..."
                                                            );
                                                            console.log(rid3);
                                                            const srfd =
                                                              await storeRefund(
                                                                data,
                                                                rid3
                                                              );
                                                            console.log(
                                                              "Flow end with REFUND SUCCESSFULLY PAYMENT_SUCCESS : 2 "
                                                            );
                                                            break;

                                                          case "PAYMENT_ERROR":
                                                            console.log(rid3);
                                                            frfd =
                                                              await storeRefund(
                                                                data,
                                                                rid3
                                                              );
                                                            console.log(
                                                              "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                            );
                                                            /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                            console.log(
                                                              "BLOCK:PAYMENT_ERROR :END  1 "
                                                            );
                                                            //    //console.log(svtr);
                                                            //    const rid3 = await createRefund(svtr.id);
                                                            //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                            //    console.log(rid3);
                                                            //when request complete then add here code for call refund api again and handle errors and pending process
                                                            break;
                                                          case "INTERNAL_SERVER_ERROR":
                                                          case "TIMED_OUT":
                                                          case "PAYMENT_PENDING":
                                                            // case 'PAYMENT_ERROR'://need to remove
                                                            console.log(
                                                              "Check Status API calling...."
                                                            );
                                                            console.log(
                                                              "Level 2A : Refund Process status : " +
                                                                data.code
                                                            );
                                                            const prfd =
                                                              await storeRefund(
                                                                data,
                                                                rid3
                                                              );
                                                            /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:Check_Status 3A      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                            console.log(
                                                              "BLOCK:Check_Status 3A"
                                                            );
                                                            //console.log(prfd);
                                                            //console.log(svtr.id);
                                                            const checksum = cjs
                                                              .SHA256(
                                                                "/v3/transaction/" +
                                                                  merchantId +
                                                                  "/" +
                                                                  rid3 +
                                                                  "/status" +
                                                                  saltKey
                                                              )
                                                              .toString(
                                                                cjs.enc.Hex
                                                              );
                                                            //console.log("Api checksum: ", checksum);
                                                            xVerify =
                                                              checksum +
                                                              "###" +
                                                              saltIndex;
                                                            //console.log(xVerify);
                                                            options = {
                                                              method: "GET",
                                                              url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                                              headers: {
                                                                "Content-Type":
                                                                  "application/json",
                                                                "X-VERIFY":
                                                                  xVerify,
                                                              },
                                                            };
                                                            console.log(
                                                              "Level 2A : Request data:"
                                                            ); //comment
                                                            console.log(
                                                              options
                                                            ); //comment
                                                            ///////////////////////////////////////////////////////////////time out/////////////////////////////////////////////////////
                                                            setTimeout(
                                                              function () {
                                                                request(
                                                                  options,
                                                                  async function (
                                                                    error,
                                                                    response,
                                                                    body
                                                                  ) {
                                                                    if (error) {
                                                                      /////////need to handle here if error comes///////
                                                                      console.log(
                                                                        error
                                                                      );
                                                                    } else {
                                                                      var data =
                                                                        JSON.parse(
                                                                          body
                                                                        );
                                                                      console.log(
                                                                        " Level 2B :Check Status Response Body:"
                                                                      ); //comment
                                                                      //console.log(data);
                                                                      console.log(
                                                                        "Level 2B : Check Status API RESPONSE: " +
                                                                          data.success
                                                                      );
                                                                      console.log(
                                                                        data.code
                                                                      );
                                                                      switch (
                                                                        data.code
                                                                      ) {
                                                                        case "PAYMENT_SUCCESS":
                                                                          console.log(
                                                                            "Level 2B : Check Status Process Completed..."
                                                                          );
                                                                          console.log(
                                                                            rid3
                                                                          );
                                                                          const srfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          console.log(
                                                                            "Flow end with CHECK STATUS PAYMENT_SUCCESS : 3 "
                                                                          );
                                                                          break;

                                                                        case "PAYMENT_ERROR":
                                                                          console.log(
                                                                            rid3
                                                                          );
                                                                          frfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          console.log(
                                                                            "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                          );
                                                                          /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3A:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                          console.log(
                                                                            "BLOCK:PAYMENT_ERROR :END  3A:1 "
                                                                          );
                                                                          //    //console.log(svtr);
                                                                          //    const rid4 = await createRefund(svtr.id);
                                                                          //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                                          //    console.log(rid4);
                                                                          //when request complete then add here code for call refund api again and handle errors and pending process
                                                                          break;

                                                                        case "INTERNAL_SERVER_ERROR":
                                                                        case "TIMED_OUT":
                                                                        case "PAYMENT_PENDING":
                                                                          /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@        BLOCK:Check_Status 3B     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                          console.log(
                                                                            "BLOCK:Check_Status 3B "
                                                                          );
                                                                          console.log(
                                                                            "Level 2B : Refund Process status : " +
                                                                              data.code
                                                                          );
                                                                          // console.log(data.data.transactionId);
                                                                          // console.log(data.data.providerReferenceId);
                                                                          const prfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          //console.log(prfd);
                                                                          // console.log(svtr.id);
                                                                          const checksum =
                                                                            cjs
                                                                              .SHA256(
                                                                                "/v3/transaction/" +
                                                                                  merchantId +
                                                                                  "/" +
                                                                                  rid3 +
                                                                                  "/status" +
                                                                                  saltKey
                                                                              )
                                                                              .toString(
                                                                                cjs
                                                                                  .enc
                                                                                  .Hex
                                                                              );
                                                                          //console.log("Api checksum: ", checksum);
                                                                          xVerify =
                                                                            checksum +
                                                                            "###" +
                                                                            saltIndex;
                                                                          //console.log(xVerify);
                                                                          const options =
                                                                            {
                                                                              method:
                                                                                "GET",
                                                                              url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                                                              headers:
                                                                                {
                                                                                  "Content-Type":
                                                                                    "application/json",
                                                                                  "X-VERIFY":
                                                                                    xVerify,
                                                                                },
                                                                            };
                                                                          console.log(
                                                                            " Level 2C :Request data:"
                                                                          ); //comment
                                                                          console.log(
                                                                            options
                                                                          ); //comment
                                                                          /////////////////////////////////////////////time out///////////////////////////////////////////////////////////////////
                                                                          setTimeout(
                                                                            function () {
                                                                              request(
                                                                                options,
                                                                                async function (
                                                                                  error,
                                                                                  response,
                                                                                  body
                                                                                ) {
                                                                                  if (
                                                                                    error
                                                                                  ) {
                                                                                    /////////need to handle here if error comes///////
                                                                                    console.log(
                                                                                      error
                                                                                    );
                                                                                  } else {
                                                                                    var data =
                                                                                      JSON.parse(
                                                                                        body
                                                                                      );
                                                                                    console.log(
                                                                                      " Level 2C :Check Status Response Body:"
                                                                                    ); //comment
                                                                                    // console.log(data.data.transactionId);
                                                                                    // console.log(data.data.providerReferenceId);
                                                                                    console.log(
                                                                                      "Level 2C :Check Status  API RESPONSE: " +
                                                                                        data.success
                                                                                    );
                                                                                    console.log(
                                                                                      data.code
                                                                                    );
                                                                                    switch (
                                                                                      data.code
                                                                                    ) {
                                                                                      case "PAYMENT_SUCCESS":
                                                                                        console.log(
                                                                                          "Level 2C : Refund Process Completed..."
                                                                                        );
                                                                                        console.log(
                                                                                          rid2
                                                                                        );
                                                                                        const srfd =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        console.log(
                                                                                          "Flow end with CHECK_STATUS SUCCESSFULLY PAYMENT_SUCCESS : 4 "
                                                                                        );
                                                                                        break;
                                                                                      case "PAYMENT_ERROR":
                                                                                        console.log(
                                                                                          rid3
                                                                                        );
                                                                                        frfd =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        console.log(
                                                                                          "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                                        );
                                                                                        /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3B:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                        console.log(
                                                                                          "BLOCK:PAYMENT_ERROR :END  3c:1 "
                                                                                        );
                                                                                        //    //console.log(svtr);
                                                                                        //    const rid3 = await createRefund(svtr.id);
                                                                                        //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                                                        //    console.log(rid3);
                                                                                        //when request complete then add here code for call refund api again and handle errors and pending process
                                                                                        break;

                                                                                      case "INTERNAL_SERVER_ERROR":
                                                                                      case "TIMED_OUT":
                                                                                      case "PAYMENT_PENDING":
                                                                                        /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@        BLOCK:Check_Status 3C     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                        console.log(
                                                                                          "BLOCK:Check_Status 3C "
                                                                                        );
                                                                                        console.log(
                                                                                          "Level 2B : Refund Process status : " +
                                                                                            data.code
                                                                                        );
                                                                                        // console.log(data.data.transactionId);
                                                                                        // console.log(data.data.providerReferenceId);
                                                                                        const prfd =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        //console.log(prfd);
                                                                                        // console.log(svtr.id);
                                                                                        const checksum =
                                                                                          cjs
                                                                                            .SHA256(
                                                                                              "/v3/transaction/" +
                                                                                                merchantId +
                                                                                                "/" +
                                                                                                rid3 +
                                                                                                "/status" +
                                                                                                saltKey
                                                                                            )
                                                                                            .toString(
                                                                                              cjs
                                                                                                .enc
                                                                                                .Hex
                                                                                            );
                                                                                        //console.log("Api checksum: ", checksum);
                                                                                        xVerify =
                                                                                          checksum +
                                                                                          "###" +
                                                                                          saltIndex;
                                                                                        //console.log(xVerify);
                                                                                        const options =
                                                                                          {
                                                                                            method:
                                                                                              "GET",
                                                                                            url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                                                                            headers:
                                                                                              {
                                                                                                "Content-Type":
                                                                                                  "application/json",
                                                                                                "X-VERIFY":
                                                                                                  xVerify,
                                                                                              },
                                                                                          };
                                                                                        console.log(
                                                                                          " Level 2C :Request data:"
                                                                                        ); //comment
                                                                                        console.log(
                                                                                          options
                                                                                        ); //comment
                                                                                        /////////////////////////////////////////////time out///////////////////////////////////////////////////////////////////
                                                                                        setTimeout(
                                                                                          function () {
                                                                                            request(
                                                                                              options,
                                                                                              async function (
                                                                                                error,
                                                                                                response,
                                                                                                body
                                                                                              ) {
                                                                                                if (
                                                                                                  error
                                                                                                ) {
                                                                                                  /////////need to handle here if error comes///////
                                                                                                  console.log(
                                                                                                    error
                                                                                                  );
                                                                                                } else {
                                                                                                  var data =
                                                                                                    JSON.parse(
                                                                                                      body
                                                                                                    );
                                                                                                  console.log(
                                                                                                    " Level 2C :Check Status Response Body:"
                                                                                                  ); //comment
                                                                                                  // console.log(data.data.transactionId);
                                                                                                  // console.log(data.data.providerReferenceId);
                                                                                                  console.log(
                                                                                                    "Level 2C :Check Status  API RESPONSE: " +
                                                                                                      data.success
                                                                                                  );
                                                                                                  console.log(
                                                                                                    data.code
                                                                                                  );
                                                                                                  switch (
                                                                                                    data.code
                                                                                                  ) {
                                                                                                    case "PAYMENT_SUCCESS":
                                                                                                      console.log(
                                                                                                        "Level 2C : Refund Process Completed..."
                                                                                                      );
                                                                                                      console.log(
                                                                                                        rid2
                                                                                                      );
                                                                                                      const srfd =
                                                                                                        await storeRefund(
                                                                                                          data,
                                                                                                          rid3
                                                                                                        );
                                                                                                      console.log(
                                                                                                        "Flow end with CHECK_STATUS SUCCESSFULLY PAYMENT_SUCCESS : 4 "
                                                                                                      );
                                                                                                      break;
                                                                                                    case "PAYMENT_ERROR":
                                                                                                      console.log(
                                                                                                        rid3
                                                                                                      );
                                                                                                      frfd =
                                                                                                        await storeRefund(
                                                                                                          data,
                                                                                                          rid3
                                                                                                        );
                                                                                                      console.log(
                                                                                                        "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                                                      );
                                                                                                      /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3C:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                                      console.log(
                                                                                                        "BLOCK:PAYMENT_ERROR :END  3c:1 "
                                                                                                      );
                                                                                                      //    //console.log(svtr);
                                                                                                      //    const rid3 = await createRefund(svtr.id);
                                                                                                      //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                                                                      //    console.log(rid3);
                                                                                                      //when request complete then add here code for call refund api again and handle errors and pending process
                                                                                                      break;

                                                                                                    case "INTERNAL_SERVER_ERROR":
                                                                                                    case "TIMED_OUT":
                                                                                                    case "PAYMENT_PENDING":
                                                                                                      /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:INTERNAL_SERVER_ERROR :END  3C:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                                      console.log(
                                                                                                        rid2
                                                                                                      );
                                                                                                      frfd =
                                                                                                        await storeRefund(
                                                                                                          data,
                                                                                                          rid3
                                                                                                        );
                                                                                                      console.log(
                                                                                                        frfd
                                                                                                      );
                                                                                                      console.log(
                                                                                                        "FINAL Flow end with CHECK_STATUS FAILED PAYMENT_ERROR,INTERNAL_SERVER_ERROR,TIMED_OUT,PAYMENT_PENDING : 3 "
                                                                                                      );
                                                                                                      //when request complete then add here code for call refund api again and handle errors and pending process
                                                                                                      break;
                                                                                                    default:
                                                                                                      console.log(
                                                                                                        rid3
                                                                                                      );
                                                                                                      frfd3 =
                                                                                                        await storeRefund(
                                                                                                          data,
                                                                                                          rid3
                                                                                                        );
                                                                                                      console.log(
                                                                                                        frfd3
                                                                                                      );
                                                                                                      console.log(
                                                                                                        "Flow end with DEFAULT SWITCH CASE : 1 "
                                                                                                      );
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            );
                                                                                          },
                                                                                          delayTime
                                                                                        );
                                                                                        break;
                                                                                      default:
                                                                                        console.log(
                                                                                          rid3
                                                                                        );
                                                                                        frfd3 =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        console.log(
                                                                                          frfd3
                                                                                        );
                                                                                        console.log(
                                                                                          "Flow end with DEFAULT SWITCH CASE : 1 "
                                                                                        );
                                                                                    }
                                                                                  }
                                                                                }
                                                                              );
                                                                            },
                                                                            delayTime
                                                                          );
                                                                          break;
                                                                        default:
                                                                          console.log(
                                                                            rid3
                                                                          );
                                                                          frfd3 =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          console.log(
                                                                            frfd3
                                                                          );
                                                                          console.log(
                                                                            "Flow end with DEFAULT SWITCH CASE : 2 "
                                                                          );
                                                                      }
                                                                    }
                                                                  }
                                                                );
                                                              },
                                                              delayTime
                                                            );
                                                            break;
                                                          default:
                                                            console.log(rid3);
                                                            frfd3 =
                                                              await storeRefund(
                                                                data,
                                                                rid3
                                                              );
                                                            console.log(frfd3);
                                                            console.log(
                                                              "Flow end with DEFAULT SWITCH CASE : 3 "
                                                            );
                                                        }
                                                      }
                                                    }
                                                  );
                                                }, delayTime);
                                                break;

                                              case "INTERNAL_SERVER_ERROR":
                                              case "TIMED_OUT":
                                              case "PAYMENT_PENDING":
                                                // case 'PAYMENT_ERROR'://need to remove
                                                console.log(
                                                  "Check Status API calling...."
                                                );
                                                console.log(
                                                  "Level 2A : Refund Process status : " +
                                                    data.code
                                                );
                                                const prfd = await storeRefund(
                                                  data,
                                                  rid2
                                                );
                                                //console.log(prfd);
                                                //console.log(svtr.id);
                                                const checksum = cjs
                                                  .SHA256(
                                                    "/v3/transaction/" +
                                                      merchantId +
                                                      "/" +
                                                      rid2 +
                                                      "/status" +
                                                      saltKey
                                                  )
                                                  .toString(cjs.enc.Hex);
                                                //console.log("Api checksum: ", checksum);
                                                xVerify =
                                                  checksum + "###" + saltIndex;
                                                //console.log(xVerify);
                                                options = {
                                                  method: "GET",
                                                  url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid2}/status`,
                                                  headers: {
                                                    "Content-Type":
                                                      "application/json",
                                                    "X-VERIFY": xVerify,
                                                  },
                                                };
                                                console.log(
                                                  "Level 2A : Request data:"
                                                ); //comment
                                                console.log(options); //comment
                                                ///////////////////////////////////////////////////////////////time out/////////////////////////////////////////////////////
                                                setTimeout(function () {
                                                  request(
                                                    options,
                                                    async function (
                                                      error,
                                                      response,
                                                      body
                                                    ) {
                                                      if (error) {
                                                        /////////need to handle here if error comes///////
                                                        console.log(error);
                                                      } else {
                                                        var data =
                                                          JSON.parse(body);
                                                        console.log(
                                                          " Level 2B :Check Status Response Body:"
                                                        ); //comment
                                                        //console.log(data);
                                                        console.log(
                                                          "Level 2B : Check Status API RESPONSE: " +
                                                            data.success
                                                        );
                                                        console.log(data.code);
                                                        switch (data.code) {
                                                          case "PAYMENT_SUCCESS":
                                                            console.log(
                                                              "Level 2B : Check Status Process Completed..."
                                                            );
                                                            console.log(rid2);
                                                            const srfd =
                                                              await storeRefund(
                                                                data,
                                                                rid2
                                                              );
                                                            console.log(
                                                              "Flow end with CHECK STATUS PAYMENT_SUCCESS : 3 "
                                                            );
                                                            break;

                                                          case "PAYMENT_ERROR":
                                                            console.log(rid2);
                                                            frfd =
                                                              await storeRefund(
                                                                data,
                                                                rid2
                                                              );
                                                            console.log(
                                                              "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                            );

                                                            //console.log(svtr);
                                                            /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:REFUND 3      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                            console.log(
                                                              "BLOCK:REFUND 3"
                                                            );
                                                            const rid3 =
                                                              await createRefund(
                                                                svtr.id
                                                              );
                                                            console.log(
                                                              "Level 2A: NEW REFUND ID GENERATED.."
                                                            ); /////////////////////////////////////
                                                            console.log(rid3);
                                                            //when request complete then add here code for call refund api again and handle errors and pending process
                                                            //when request complete then add here code for call refund api again and handle errors and pending process
                                                            console.log(
                                                              "Level 2: Calling Refund API"
                                                            );
                                                            const url =
                                                              "mercury-uat.phonepe.com";
                                                            const path =
                                                              "/v3/credit/backToSource";
                                                            saltKey =
                                                              "0afb5aa4-2206-4ea0-b081-fb94270b8c96";
                                                            saltIndex = 1;
                                                            const decodedRequest =
                                                              {
                                                                merchantId:
                                                                  merchantId,
                                                                transactionId:
                                                                  rid3,
                                                                providerReferenceId:
                                                                  svtr.providerReferenceId,
                                                                amount:
                                                                  rfAmount,
                                                                message:
                                                                  "Incorrect Amount",
                                                              };
                                                            // console.log(decodedRequest);
                                                            let encodedRequest =
                                                              decodedRequest ===
                                                              ""
                                                                ? ""
                                                                : Buffer.from(
                                                                    JSON.stringify(
                                                                      decodedRequest
                                                                    )
                                                                  ).toString(
                                                                    "base64"
                                                                  );
                                                            generateChecksum(
                                                              encodedRequest,
                                                              path,
                                                              saltKey,
                                                              saltIndex
                                                            );
                                                            function generateChecksum(
                                                              encodedRequest,
                                                              path,
                                                              saltKey,
                                                              keyIndex
                                                            ) {
                                                              const checksum =
                                                                cjs
                                                                  .SHA256(
                                                                    encodedRequest +
                                                                      path +
                                                                      saltKey
                                                                  )
                                                                  .toString(
                                                                    cjs.enc.Hex
                                                                  );
                                                              // console.log("base64 request:", encodedRequest, "Api checksum: ", checksum);
                                                              xVerify =
                                                                checksum +
                                                                "###" +
                                                                keyIndex;
                                                            }
                                                            if (
                                                              encodedRequest ===
                                                              ""
                                                            )
                                                              body1 = "";
                                                            else
                                                              body1 =
                                                                JSON.stringify({
                                                                  request:
                                                                    encodedRequest,
                                                                });
                                                            options2 = {
                                                              method: "POST",
                                                              url: "https://mercury-uat.phonepe.com/v3/credit/backToSource",
                                                              headers: {
                                                                "Content-Type":
                                                                  "application/json",
                                                                "X-VERIFY":
                                                                  xVerify,
                                                              },
                                                              body: body1,
                                                            };
                                                            console.log(
                                                              " Level 2: Request data:"
                                                            ); //comment
                                                            console.log(
                                                              options2
                                                            ); //comment
                                                            ////////////////////////////////////////////////////////////////////////////////////////////////time out//////////////////////////////////////////////////////////////////////////////////////////////////
                                                            setTimeout(
                                                              function () {
                                                                request(
                                                                  options2,
                                                                  async function (
                                                                    error,
                                                                    response,
                                                                    body
                                                                  ) {
                                                                    if (error) {
                                                                      /////////need to handle here if error comes///////
                                                                      console.log(
                                                                        error
                                                                      );
                                                                    } else {
                                                                      var data =
                                                                        JSON.parse(
                                                                          body
                                                                        );
                                                                      console.log(
                                                                        "Level 2A :Response Body:"
                                                                      ); //comment
                                                                      //console.log(data);
                                                                      console.log(
                                                                        "Level 2A :REFUND API RESPONSE: " +
                                                                          data.success
                                                                      );
                                                                      console.log(
                                                                        data.code
                                                                      );
                                                                      switch (
                                                                        data.code
                                                                      ) {
                                                                        case "PAYMENT_SUCCESS":
                                                                          console.log(
                                                                            "Level 2A :Refund Process Completed..."
                                                                          );
                                                                          console.log(
                                                                            rid3
                                                                          );
                                                                          const srfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          console.log(
                                                                            "Flow end with REFUND SUCCESSFULLY PAYMENT_SUCCESS : 2 "
                                                                          );
                                                                          break;

                                                                        case "PAYMENT_ERROR":
                                                                          console.log(
                                                                            rid3
                                                                          );
                                                                          frfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          console.log(
                                                                            "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                          );
                                                                          /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                          console.log(
                                                                            "BLOCK:PAYMENT_ERROR :END  1 "
                                                                          );
                                                                          //    //console.log(svtr);
                                                                          //    const rid3 = await createRefund(svtr.id);
                                                                          //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                                          //    console.log(rid3);
                                                                          //when request complete then add here code for call refund api again and handle errors and pending process
                                                                          break;
                                                                        case "INTERNAL_SERVER_ERROR":
                                                                        case "TIMED_OUT":
                                                                        case "PAYMENT_PENDING":
                                                                          // case 'PAYMENT_ERROR'://need to remove
                                                                          console.log(
                                                                            "Check Status API calling...."
                                                                          );
                                                                          console.log(
                                                                            "Level 2A : Refund Process status : " +
                                                                              data.code
                                                                          );
                                                                          const prfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:Check_Status 3A      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                          console.log(
                                                                            "BLOCK:Check_Status 3A"
                                                                          );
                                                                          //console.log(prfd);
                                                                          //console.log(svtr.id);
                                                                          const checksum =
                                                                            cjs
                                                                              .SHA256(
                                                                                "/v3/transaction/" +
                                                                                  merchantId +
                                                                                  "/" +
                                                                                  rid3 +
                                                                                  "/status" +
                                                                                  saltKey
                                                                              )
                                                                              .toString(
                                                                                cjs
                                                                                  .enc
                                                                                  .Hex
                                                                              );
                                                                          //console.log("Api checksum: ", checksum);
                                                                          xVerify =
                                                                            checksum +
                                                                            "###" +
                                                                            saltIndex;
                                                                          //console.log(xVerify);
                                                                          options =
                                                                            {
                                                                              method:
                                                                                "GET",
                                                                              url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                                                              headers:
                                                                                {
                                                                                  "Content-Type":
                                                                                    "application/json",
                                                                                  "X-VERIFY":
                                                                                    xVerify,
                                                                                },
                                                                            };
                                                                          console.log(
                                                                            "Level 2A : Request data:"
                                                                          ); //comment
                                                                          console.log(
                                                                            options
                                                                          ); //comment
                                                                          ///////////////////////////////////////////////////////////////time out/////////////////////////////////////////////////////
                                                                          setTimeout(
                                                                            function () {
                                                                              request(
                                                                                options,
                                                                                async function (
                                                                                  error,
                                                                                  response,
                                                                                  body
                                                                                ) {
                                                                                  if (
                                                                                    error
                                                                                  ) {
                                                                                    /////////need to handle here if error comes///////
                                                                                    console.log(
                                                                                      error
                                                                                    );
                                                                                  } else {
                                                                                    var data =
                                                                                      JSON.parse(
                                                                                        body
                                                                                      );
                                                                                    console.log(
                                                                                      " Level 2B :Check Status Response Body:"
                                                                                    ); //comment
                                                                                    //console.log(data);
                                                                                    console.log(
                                                                                      "Level 2B : Check Status API RESPONSE: " +
                                                                                        data.success
                                                                                    );
                                                                                    console.log(
                                                                                      data.code
                                                                                    );
                                                                                    switch (
                                                                                      data.code
                                                                                    ) {
                                                                                      case "PAYMENT_SUCCESS":
                                                                                        console.log(
                                                                                          "Level 2B : Check Status Process Completed..."
                                                                                        );
                                                                                        console.log(
                                                                                          rid3
                                                                                        );
                                                                                        const srfd =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        console.log(
                                                                                          "Flow end with CHECK STATUS PAYMENT_SUCCESS : 3 "
                                                                                        );
                                                                                        break;

                                                                                      case "PAYMENT_ERROR":
                                                                                        console.log(
                                                                                          rid3
                                                                                        );
                                                                                        frfd =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        console.log(
                                                                                          "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                                        );
                                                                                        /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3A:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                        console.log(
                                                                                          "BLOCK:PAYMENT_ERROR :END  3A:1 "
                                                                                        );
                                                                                        //    //console.log(svtr);
                                                                                        //    const rid4 = await createRefund(svtr.id);
                                                                                        //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                                                        //    console.log(rid4);
                                                                                        //when request complete then add here code for call refund api again and handle errors and pending process
                                                                                        break;

                                                                                      case "INTERNAL_SERVER_ERROR":
                                                                                      case "TIMED_OUT":
                                                                                      case "PAYMENT_PENDING":
                                                                                        /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@        BLOCK:Check_Status 3B     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                        console.log(
                                                                                          "BLOCK:Check_Status 3B "
                                                                                        );
                                                                                        console.log(
                                                                                          "Level 2B : Refund Process status : " +
                                                                                            data.code
                                                                                        );
                                                                                        // console.log(data.data.transactionId);
                                                                                        // console.log(data.data.providerReferenceId);
                                                                                        const prfd =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        //console.log(prfd);
                                                                                        // console.log(svtr.id);
                                                                                        const checksum =
                                                                                          cjs
                                                                                            .SHA256(
                                                                                              "/v3/transaction/" +
                                                                                                merchantId +
                                                                                                "/" +
                                                                                                rid3 +
                                                                                                "/status" +
                                                                                                saltKey
                                                                                            )
                                                                                            .toString(
                                                                                              cjs
                                                                                                .enc
                                                                                                .Hex
                                                                                            );
                                                                                        //console.log("Api checksum: ", checksum);
                                                                                        xVerify =
                                                                                          checksum +
                                                                                          "###" +
                                                                                          saltIndex;
                                                                                        //console.log(xVerify);
                                                                                        const options =
                                                                                          {
                                                                                            method:
                                                                                              "GET",
                                                                                            url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                                                                            headers:
                                                                                              {
                                                                                                "Content-Type":
                                                                                                  "application/json",
                                                                                                "X-VERIFY":
                                                                                                  xVerify,
                                                                                              },
                                                                                          };
                                                                                        console.log(
                                                                                          " Level 2C :Request data:"
                                                                                        ); //comment
                                                                                        console.log(
                                                                                          options
                                                                                        ); //comment
                                                                                        /////////////////////////////////////////////time out///////////////////////////////////////////////////////////////////
                                                                                        setTimeout(
                                                                                          function () {
                                                                                            request(
                                                                                              options,
                                                                                              async function (
                                                                                                error,
                                                                                                response,
                                                                                                body
                                                                                              ) {
                                                                                                if (
                                                                                                  error
                                                                                                ) {
                                                                                                  /////////need to handle here if error comes///////
                                                                                                  console.log(
                                                                                                    error
                                                                                                  );
                                                                                                } else {
                                                                                                  var data =
                                                                                                    JSON.parse(
                                                                                                      body
                                                                                                    );
                                                                                                  console.log(
                                                                                                    " Level 2C :Check Status Response Body:"
                                                                                                  ); //comment
                                                                                                  // console.log(data.data.transactionId);
                                                                                                  // console.log(data.data.providerReferenceId);
                                                                                                  console.log(
                                                                                                    "Level 2C :Check Status  API RESPONSE: " +
                                                                                                      data.success
                                                                                                  );
                                                                                                  console.log(
                                                                                                    data.code
                                                                                                  );
                                                                                                  switch (
                                                                                                    data.code
                                                                                                  ) {
                                                                                                    case "PAYMENT_SUCCESS":
                                                                                                      console.log(
                                                                                                        "Level 2C : Refund Process Completed..."
                                                                                                      );
                                                                                                      console.log(
                                                                                                        rid2
                                                                                                      );
                                                                                                      const srfd =
                                                                                                        await storeRefund(
                                                                                                          data,
                                                                                                          rid3
                                                                                                        );
                                                                                                      console.log(
                                                                                                        "Flow end with CHECK_STATUS SUCCESSFULLY PAYMENT_SUCCESS : 4 "
                                                                                                      );
                                                                                                      break;
                                                                                                    case "PAYMENT_ERROR":
                                                                                                      console.log(
                                                                                                        rid3
                                                                                                      );
                                                                                                      frfd =
                                                                                                        await storeRefund(
                                                                                                          data,
                                                                                                          rid3
                                                                                                        );
                                                                                                      console.log(
                                                                                                        "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                                                      );
                                                                                                      /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3B:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                                      console.log(
                                                                                                        "BLOCK:PAYMENT_ERROR :END  3c:1 "
                                                                                                      );
                                                                                                      //    //console.log(svtr);
                                                                                                      //    const rid3 = await createRefund(svtr.id);
                                                                                                      //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                                                                      //    console.log(rid3);
                                                                                                      //when request complete then add here code for call refund api again and handle errors and pending process
                                                                                                      break;

                                                                                                    case "INTERNAL_SERVER_ERROR":
                                                                                                    case "TIMED_OUT":
                                                                                                    case "PAYMENT_PENDING":
                                                                                                      /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@        BLOCK:Check_Status 3C     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                                      console.log(
                                                                                                        "BLOCK:Check_Status 3C "
                                                                                                      );
                                                                                                      console.log(
                                                                                                        "Level 2B : Refund Process status : " +
                                                                                                          data.code
                                                                                                      );
                                                                                                      // console.log(data.data.transactionId);
                                                                                                      // console.log(data.data.providerReferenceId);
                                                                                                      const prfd =
                                                                                                        await storeRefund(
                                                                                                          data,
                                                                                                          rid3
                                                                                                        );
                                                                                                      //console.log(prfd);
                                                                                                      // console.log(svtr.id);
                                                                                                      const checksum =
                                                                                                        cjs
                                                                                                          .SHA256(
                                                                                                            "/v3/transaction/" +
                                                                                                              merchantId +
                                                                                                              "/" +
                                                                                                              rid3 +
                                                                                                              "/status" +
                                                                                                              saltKey
                                                                                                          )
                                                                                                          .toString(
                                                                                                            cjs
                                                                                                              .enc
                                                                                                              .Hex
                                                                                                          );
                                                                                                      //console.log("Api checksum: ", checksum);
                                                                                                      xVerify =
                                                                                                        checksum +
                                                                                                        "###" +
                                                                                                        saltIndex;
                                                                                                      //console.log(xVerify);
                                                                                                      const options =
                                                                                                        {
                                                                                                          method:
                                                                                                            "GET",
                                                                                                          url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                                                                                          headers:
                                                                                                            {
                                                                                                              "Content-Type":
                                                                                                                "application/json",
                                                                                                              "X-VERIFY":
                                                                                                                xVerify,
                                                                                                            },
                                                                                                        };
                                                                                                      console.log(
                                                                                                        " Level 2C :Request data:"
                                                                                                      ); //comment
                                                                                                      console.log(
                                                                                                        options
                                                                                                      ); //comment
                                                                                                      /////////////////////////////////////////////time out///////////////////////////////////////////////////////////////////
                                                                                                      setTimeout(
                                                                                                        function () {
                                                                                                          request(
                                                                                                            options,
                                                                                                            async function (
                                                                                                              error,
                                                                                                              response,
                                                                                                              body
                                                                                                            ) {
                                                                                                              if (
                                                                                                                error
                                                                                                              ) {
                                                                                                                /////////need to handle here if error comes///////
                                                                                                                console.log(
                                                                                                                  error
                                                                                                                );
                                                                                                              } else {
                                                                                                                var data =
                                                                                                                  JSON.parse(
                                                                                                                    body
                                                                                                                  );
                                                                                                                console.log(
                                                                                                                  " Level 2C :Check Status Response Body:"
                                                                                                                ); //comment
                                                                                                                // console.log(data.data.transactionId);
                                                                                                                // console.log(data.data.providerReferenceId);
                                                                                                                console.log(
                                                                                                                  "Level 2C :Check Status  API RESPONSE: " +
                                                                                                                    data.success
                                                                                                                );
                                                                                                                console.log(
                                                                                                                  data.code
                                                                                                                );
                                                                                                                switch (
                                                                                                                  data.code
                                                                                                                ) {
                                                                                                                  case "PAYMENT_SUCCESS":
                                                                                                                    console.log(
                                                                                                                      "Level 2C : Refund Process Completed..."
                                                                                                                    );
                                                                                                                    console.log(
                                                                                                                      rid2
                                                                                                                    );
                                                                                                                    const srfd =
                                                                                                                      await storeRefund(
                                                                                                                        data,
                                                                                                                        rid3
                                                                                                                      );
                                                                                                                    console.log(
                                                                                                                      "Flow end with CHECK_STATUS SUCCESSFULLY PAYMENT_SUCCESS : 4 "
                                                                                                                    );
                                                                                                                    break;
                                                                                                                  case "PAYMENT_ERROR":
                                                                                                                    console.log(
                                                                                                                      rid3
                                                                                                                    );
                                                                                                                    frfd =
                                                                                                                      await storeRefund(
                                                                                                                        data,
                                                                                                                        rid3
                                                                                                                      );
                                                                                                                    console.log(
                                                                                                                      "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                                                                    );
                                                                                                                    /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3C:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                                                    console.log(
                                                                                                                      "BLOCK:PAYMENT_ERROR :END  3c:1 "
                                                                                                                    );
                                                                                                                    //    //console.log(svtr);
                                                                                                                    //    const rid3 = await createRefund(svtr.id);
                                                                                                                    //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                                                                                    //    console.log(rid3);
                                                                                                                    //when request complete then add here code for call refund api again and handle errors and pending process
                                                                                                                    break;

                                                                                                                  case "INTERNAL_SERVER_ERROR":
                                                                                                                  case "TIMED_OUT":
                                                                                                                  case "PAYMENT_PENDING":
                                                                                                                    /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:INTERNAL_SERVER_ERROR :END  3C:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                                                    console.log(
                                                                                                                      rid2
                                                                                                                    );
                                                                                                                    frfd =
                                                                                                                      await storeRefund(
                                                                                                                        data,
                                                                                                                        rid3
                                                                                                                      );
                                                                                                                    console.log(
                                                                                                                      frfd
                                                                                                                    );
                                                                                                                    console.log(
                                                                                                                      "FINAL Flow end with CHECK_STATUS FAILED PAYMENT_ERROR,INTERNAL_SERVER_ERROR,TIMED_OUT,PAYMENT_PENDING : 3 "
                                                                                                                    );
                                                                                                                    //when request complete then add here code for call refund api again and handle errors and pending process
                                                                                                                    break;
                                                                                                                  default:
                                                                                                                    console.log(
                                                                                                                      rid3
                                                                                                                    );
                                                                                                                    frfd3 =
                                                                                                                      await storeRefund(
                                                                                                                        data,
                                                                                                                        rid3
                                                                                                                      );
                                                                                                                    console.log(
                                                                                                                      frfd3
                                                                                                                    );
                                                                                                                    console.log(
                                                                                                                      "Flow end with DEFAULT SWITCH CASE : 1 "
                                                                                                                    );
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          );
                                                                                                        },
                                                                                                        delayTime
                                                                                                      );
                                                                                                      break;
                                                                                                    default:
                                                                                                      console.log(
                                                                                                        rid3
                                                                                                      );
                                                                                                      frfd3 =
                                                                                                        await storeRefund(
                                                                                                          data,
                                                                                                          rid3
                                                                                                        );
                                                                                                      console.log(
                                                                                                        frfd3
                                                                                                      );
                                                                                                      console.log(
                                                                                                        "Flow end with DEFAULT SWITCH CASE : 1 "
                                                                                                      );
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            );
                                                                                          },
                                                                                          delayTime
                                                                                        );
                                                                                        break;
                                                                                      default:
                                                                                        console.log(
                                                                                          rid3
                                                                                        );
                                                                                        frfd3 =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        console.log(
                                                                                          frfd3
                                                                                        );
                                                                                        console.log(
                                                                                          "Flow end with DEFAULT SWITCH CASE : 2 "
                                                                                        );
                                                                                    }
                                                                                  }
                                                                                }
                                                                              );
                                                                            },
                                                                            delayTime
                                                                          );
                                                                          break;
                                                                        default:
                                                                          console.log(
                                                                            rid3
                                                                          );
                                                                          frfd3 =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          console.log(
                                                                            frfd3
                                                                          );
                                                                          console.log(
                                                                            "Flow end with DEFAULT SWITCH CASE : 3 "
                                                                          );
                                                                      }
                                                                    }
                                                                  }
                                                                );
                                                              },
                                                              delayTime
                                                            );
                                                            break;

                                                          case "INTERNAL_SERVER_ERROR":
                                                          case "TIMED_OUT":
                                                          case "PAYMENT_PENDING":
                                                            console.log(
                                                              "Level 2B : Refund Process status : " +
                                                                data.code
                                                            );
                                                            // console.log(data.data.transactionId);
                                                            // console.log(data.data.providerReferenceId);
                                                            const prfd =
                                                              await storeRefund(
                                                                data,
                                                                rid2
                                                              );
                                                            //console.log(prfd);
                                                            // console.log(svtr.id);
                                                            const checksum = cjs
                                                              .SHA256(
                                                                "/v3/transaction/" +
                                                                  merchantId +
                                                                  "/" +
                                                                  rid2 +
                                                                  "/status" +
                                                                  saltKey
                                                              )
                                                              .toString(
                                                                cjs.enc.Hex
                                                              );
                                                            //console.log("Api checksum: ", checksum);
                                                            xVerify =
                                                              checksum +
                                                              "###" +
                                                              saltIndex;
                                                            //console.log(xVerify);
                                                            const options = {
                                                              method: "GET",
                                                              url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid2}/status`,
                                                              headers: {
                                                                "Content-Type":
                                                                  "application/json",
                                                                "X-VERIFY":
                                                                  xVerify,
                                                              },
                                                            };
                                                            console.log(
                                                              " Level 2C :Request data:"
                                                            ); //comment
                                                            console.log(
                                                              options
                                                            ); //comment
                                                            /////////////////////////////////////////////time out///////////////////////////////////////////////////////////////////
                                                            setTimeout(
                                                              function () {
                                                                request(
                                                                  options,
                                                                  async function (
                                                                    error,
                                                                    response,
                                                                    body
                                                                  ) {
                                                                    if (error) {
                                                                      /////////need to handle here if error comes///////
                                                                      console.log(
                                                                        error
                                                                      );
                                                                    } else {
                                                                      var data =
                                                                        JSON.parse(
                                                                          body
                                                                        );
                                                                      console.log(
                                                                        " Level 2C :Check Status Response Body:"
                                                                      ); //comment
                                                                      // console.log(data.data.transactionId);
                                                                      // console.log(data.data.providerReferenceId);
                                                                      console.log(
                                                                        "Level 2C :Check Status  API RESPONSE: " +
                                                                          data.success
                                                                      );
                                                                      console.log(
                                                                        data.code
                                                                      );
                                                                      switch (
                                                                        data.code
                                                                      ) {
                                                                        case "PAYMENT_SUCCESS":
                                                                          console.log(
                                                                            "Level 2C : Refund Process Completed..."
                                                                          );
                                                                          console.log(
                                                                            rid2
                                                                          );
                                                                          const srfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid2
                                                                            );
                                                                          console.log(
                                                                            "Flow end with CHECK_STATUS SUCCESSFULLY PAYMENT_SUCCESS : 4 "
                                                                          );
                                                                          break;
                                                                        case "PAYMENT_ERROR":
                                                                          console.log(
                                                                            rid2
                                                                          );
                                                                          frfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid2
                                                                            );
                                                                          console.log(
                                                                            "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                          );

                                                                          //console.log(svtr);
                                                                          /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:REFUND 3      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                          console.log(
                                                                            "BLOCK:REFUND 3"
                                                                          );
                                                                          const rid3 =
                                                                            await createRefund(
                                                                              svtr.id
                                                                            );
                                                                          console.log(
                                                                            "Level 2A: NEW REFUND ID GENERATED.."
                                                                          ); /////////////////////////////////////
                                                                          console.log(
                                                                            rid3
                                                                          );
                                                                          //when request complete then add here code for call refund api again and handle errors and pending process
                                                                          //when request complete then add here code for call refund api again and handle errors and pending process
                                                                          console.log(
                                                                            "Level 2: Calling Refund API"
                                                                          );
                                                                          const url =
                                                                            "mercury-uat.phonepe.com";
                                                                          const path =
                                                                            "/v3/credit/backToSource";
                                                                          saltKey =
                                                                            "0afb5aa4-2206-4ea0-b081-fb94270b8c96";
                                                                          saltIndex = 1;
                                                                          const decodedRequest =
                                                                            {
                                                                              merchantId:
                                                                                merchantId,
                                                                              transactionId:
                                                                                rid3,
                                                                              providerReferenceId:
                                                                                svtr.providerReferenceId,
                                                                              amount:
                                                                                rfAmount,
                                                                              message:
                                                                                "Incorrect Amount",
                                                                            };
                                                                          // console.log(decodedRequest);
                                                                          let encodedRequest =
                                                                            decodedRequest ===
                                                                            ""
                                                                              ? ""
                                                                              : Buffer.from(
                                                                                  JSON.stringify(
                                                                                    decodedRequest
                                                                                  )
                                                                                ).toString(
                                                                                  "base64"
                                                                                );
                                                                          generateChecksum(
                                                                            encodedRequest,
                                                                            path,
                                                                            saltKey,
                                                                            saltIndex
                                                                          );
                                                                          function generateChecksum(
                                                                            encodedRequest,
                                                                            path,
                                                                            saltKey,
                                                                            keyIndex
                                                                          ) {
                                                                            const checksum =
                                                                              cjs
                                                                                .SHA256(
                                                                                  encodedRequest +
                                                                                    path +
                                                                                    saltKey
                                                                                )
                                                                                .toString(
                                                                                  cjs
                                                                                    .enc
                                                                                    .Hex
                                                                                );
                                                                            // console.log("base64 request:", encodedRequest, "Api checksum: ", checksum);
                                                                            xVerify =
                                                                              checksum +
                                                                              "###" +
                                                                              keyIndex;
                                                                          }
                                                                          if (
                                                                            encodedRequest ===
                                                                            ""
                                                                          )
                                                                            body1 =
                                                                              "";
                                                                          else
                                                                            body1 =
                                                                              JSON.stringify(
                                                                                {
                                                                                  request:
                                                                                    encodedRequest,
                                                                                }
                                                                              );
                                                                          options2 =
                                                                            {
                                                                              method:
                                                                                "POST",
                                                                              url: "https://mercury-uat.phonepe.com/v3/credit/backToSource",
                                                                              headers:
                                                                                {
                                                                                  "Content-Type":
                                                                                    "application/json",
                                                                                  "X-VERIFY":
                                                                                    xVerify,
                                                                                },
                                                                              body: body1,
                                                                            };
                                                                          console.log(
                                                                            " Level 2: Request data:"
                                                                          ); //comment
                                                                          console.log(
                                                                            options2
                                                                          ); //comment
                                                                          ////////////////////////////////////////////////////////////////////////////////////////////////time out//////////////////////////////////////////////////////////////////////////////////////////////////
                                                                          setTimeout(
                                                                            function () {
                                                                              request(
                                                                                options2,
                                                                                async function (
                                                                                  error,
                                                                                  response,
                                                                                  body
                                                                                ) {
                                                                                  if (
                                                                                    error
                                                                                  ) {
                                                                                    /////////need to handle here if error comes///////
                                                                                    console.log(
                                                                                      error
                                                                                    );
                                                                                  } else {
                                                                                    var data =
                                                                                      JSON.parse(
                                                                                        body
                                                                                      );
                                                                                    console.log(
                                                                                      "Level 2A :Response Body:"
                                                                                    ); //comment
                                                                                    //console.log(data);
                                                                                    console.log(
                                                                                      "Level 2A :REFUND API RESPONSE: " +
                                                                                        data.success
                                                                                    );
                                                                                    console.log(
                                                                                      data.code
                                                                                    );
                                                                                    switch (
                                                                                      data.code
                                                                                    ) {
                                                                                      case "PAYMENT_SUCCESS":
                                                                                        console.log(
                                                                                          "Level 2A :Refund Process Completed..."
                                                                                        );
                                                                                        console.log(
                                                                                          rid3
                                                                                        );
                                                                                        const srfd =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        console.log(
                                                                                          "Flow end with REFUND SUCCESSFULLY PAYMENT_SUCCESS : 2 "
                                                                                        );
                                                                                        break;

                                                                                      case "PAYMENT_ERROR":
                                                                                        console.log(
                                                                                          rid3
                                                                                        );
                                                                                        frfd =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        console.log(
                                                                                          "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                                        );
                                                                                        /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                        console.log(
                                                                                          "BLOCK:PAYMENT_ERROR :END  1 "
                                                                                        );
                                                                                        //    //console.log(svtr);
                                                                                        //    const rid3 = await createRefund(svtr.id);
                                                                                        //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                                                        //    console.log(rid3);
                                                                                        //when request complete then add here code for call refund api again and handle errors and pending process
                                                                                        break;
                                                                                      case "INTERNAL_SERVER_ERROR":
                                                                                      case "TIMED_OUT":
                                                                                      case "PAYMENT_PENDING":
                                                                                        // case 'PAYMENT_ERROR'://need to remove
                                                                                        console.log(
                                                                                          "Check Status API calling...."
                                                                                        );
                                                                                        console.log(
                                                                                          "Level 2A : Refund Process status : " +
                                                                                            data.code
                                                                                        );
                                                                                        const prfd =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:Check_Status 3A      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                        console.log(
                                                                                          "BLOCK:Check_Status 3A"
                                                                                        );
                                                                                        //console.log(prfd);
                                                                                        //console.log(svtr.id);
                                                                                        const checksum =
                                                                                          cjs
                                                                                            .SHA256(
                                                                                              "/v3/transaction/" +
                                                                                                merchantId +
                                                                                                "/" +
                                                                                                rid3 +
                                                                                                "/status" +
                                                                                                saltKey
                                                                                            )
                                                                                            .toString(
                                                                                              cjs
                                                                                                .enc
                                                                                                .Hex
                                                                                            );
                                                                                        //console.log("Api checksum: ", checksum);
                                                                                        xVerify =
                                                                                          checksum +
                                                                                          "###" +
                                                                                          saltIndex;
                                                                                        //console.log(xVerify);
                                                                                        options =
                                                                                          {
                                                                                            method:
                                                                                              "GET",
                                                                                            url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                                                                            headers:
                                                                                              {
                                                                                                "Content-Type":
                                                                                                  "application/json",
                                                                                                "X-VERIFY":
                                                                                                  xVerify,
                                                                                              },
                                                                                          };
                                                                                        console.log(
                                                                                          "Level 2A : Request data:"
                                                                                        ); //comment
                                                                                        console.log(
                                                                                          options
                                                                                        ); //comment
                                                                                        ///////////////////////////////////////////////////////////////time out/////////////////////////////////////////////////////
                                                                                        setTimeout(
                                                                                          function () {
                                                                                            request(
                                                                                              options,
                                                                                              async function (
                                                                                                error,
                                                                                                response,
                                                                                                body
                                                                                              ) {
                                                                                                if (
                                                                                                  error
                                                                                                ) {
                                                                                                  /////////need to handle here if error comes///////
                                                                                                  console.log(
                                                                                                    error
                                                                                                  );
                                                                                                } else {
                                                                                                  var data =
                                                                                                    JSON.parse(
                                                                                                      body
                                                                                                    );
                                                                                                  console.log(
                                                                                                    " Level 2B :Check Status Response Body:"
                                                                                                  ); //comment
                                                                                                  //console.log(data);
                                                                                                  console.log(
                                                                                                    "Level 2B : Check Status API RESPONSE: " +
                                                                                                      data.success
                                                                                                  );
                                                                                                  console.log(
                                                                                                    data.code
                                                                                                  );
                                                                                                  switch (
                                                                                                    data.code
                                                                                                  ) {
                                                                                                    case "PAYMENT_SUCCESS":
                                                                                                      console.log(
                                                                                                        "Level 2B : Check Status Process Completed..."
                                                                                                      );
                                                                                                      console.log(
                                                                                                        rid3
                                                                                                      );
                                                                                                      const srfd =
                                                                                                        await storeRefund(
                                                                                                          data,
                                                                                                          rid3
                                                                                                        );
                                                                                                      console.log(
                                                                                                        "Flow end with CHECK STATUS PAYMENT_SUCCESS : 3 "
                                                                                                      );
                                                                                                      break;

                                                                                                    case "PAYMENT_ERROR":
                                                                                                      console.log(
                                                                                                        rid3
                                                                                                      );
                                                                                                      frfd =
                                                                                                        await storeRefund(
                                                                                                          data,
                                                                                                          rid3
                                                                                                        );
                                                                                                      console.log(
                                                                                                        "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                                                      );
                                                                                                      /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3A:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                                      console.log(
                                                                                                        "BLOCK:PAYMENT_ERROR :END  3A:1 "
                                                                                                      );
                                                                                                      //    //console.log(svtr);
                                                                                                      //    const rid4 = await createRefund(svtr.id);
                                                                                                      //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                                                                      //    console.log(rid4);
                                                                                                      //when request complete then add here code for call refund api again and handle errors and pending process
                                                                                                      break;

                                                                                                    case "INTERNAL_SERVER_ERROR":
                                                                                                    case "TIMED_OUT":
                                                                                                    case "PAYMENT_PENDING":
                                                                                                      /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@        BLOCK:Check_Status 3B     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                                      console.log(
                                                                                                        "BLOCK:Check_Status 3B "
                                                                                                      );
                                                                                                      console.log(
                                                                                                        "Level 2B : Refund Process status : " +
                                                                                                          data.code
                                                                                                      );
                                                                                                      // console.log(data.data.transactionId);
                                                                                                      // console.log(data.data.providerReferenceId);
                                                                                                      const prfd =
                                                                                                        await storeRefund(
                                                                                                          data,
                                                                                                          rid3
                                                                                                        );
                                                                                                      //console.log(prfd);
                                                                                                      // console.log(svtr.id);
                                                                                                      const checksum =
                                                                                                        cjs
                                                                                                          .SHA256(
                                                                                                            "/v3/transaction/" +
                                                                                                              merchantId +
                                                                                                              "/" +
                                                                                                              rid3 +
                                                                                                              "/status" +
                                                                                                              saltKey
                                                                                                          )
                                                                                                          .toString(
                                                                                                            cjs
                                                                                                              .enc
                                                                                                              .Hex
                                                                                                          );
                                                                                                      //console.log("Api checksum: ", checksum);
                                                                                                      xVerify =
                                                                                                        checksum +
                                                                                                        "###" +
                                                                                                        saltIndex;
                                                                                                      //console.log(xVerify);
                                                                                                      const options =
                                                                                                        {
                                                                                                          method:
                                                                                                            "GET",
                                                                                                          url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                                                                                          headers:
                                                                                                            {
                                                                                                              "Content-Type":
                                                                                                                "application/json",
                                                                                                              "X-VERIFY":
                                                                                                                xVerify,
                                                                                                            },
                                                                                                        };
                                                                                                      console.log(
                                                                                                        " Level 2C :Request data:"
                                                                                                      ); //comment
                                                                                                      console.log(
                                                                                                        options
                                                                                                      ); //comment
                                                                                                      /////////////////////////////////////////////time out///////////////////////////////////////////////////////////////////
                                                                                                      setTimeout(
                                                                                                        function () {
                                                                                                          request(
                                                                                                            options,
                                                                                                            async function (
                                                                                                              error,
                                                                                                              response,
                                                                                                              body
                                                                                                            ) {
                                                                                                              if (
                                                                                                                error
                                                                                                              ) {
                                                                                                                /////////need to handle here if error comes///////
                                                                                                                console.log(
                                                                                                                  error
                                                                                                                );
                                                                                                              } else {
                                                                                                                var data =
                                                                                                                  JSON.parse(
                                                                                                                    body
                                                                                                                  );
                                                                                                                console.log(
                                                                                                                  " Level 2C :Check Status Response Body:"
                                                                                                                ); //comment
                                                                                                                // console.log(data.data.transactionId);
                                                                                                                // console.log(data.data.providerReferenceId);
                                                                                                                console.log(
                                                                                                                  "Level 2C :Check Status  API RESPONSE: " +
                                                                                                                    data.success
                                                                                                                );
                                                                                                                console.log(
                                                                                                                  data.code
                                                                                                                );
                                                                                                                switch (
                                                                                                                  data.code
                                                                                                                ) {
                                                                                                                  case "PAYMENT_SUCCESS":
                                                                                                                    console.log(
                                                                                                                      "Level 2C : Refund Process Completed..."
                                                                                                                    );
                                                                                                                    console.log(
                                                                                                                      rid2
                                                                                                                    );
                                                                                                                    const srfd =
                                                                                                                      await storeRefund(
                                                                                                                        data,
                                                                                                                        rid3
                                                                                                                      );
                                                                                                                    console.log(
                                                                                                                      "Flow end with CHECK_STATUS SUCCESSFULLY PAYMENT_SUCCESS : 4 "
                                                                                                                    );
                                                                                                                    break;
                                                                                                                  case "PAYMENT_ERROR":
                                                                                                                    console.log(
                                                                                                                      rid3
                                                                                                                    );
                                                                                                                    frfd =
                                                                                                                      await storeRefund(
                                                                                                                        data,
                                                                                                                        rid3
                                                                                                                      );
                                                                                                                    console.log(
                                                                                                                      "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                                                                    );
                                                                                                                    /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3B:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                                                    console.log(
                                                                                                                      "BLOCK:PAYMENT_ERROR :END  3c:1 "
                                                                                                                    );
                                                                                                                    //    //console.log(svtr);
                                                                                                                    //    const rid3 = await createRefund(svtr.id);
                                                                                                                    //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                                                                                    //    console.log(rid3);
                                                                                                                    //when request complete then add here code for call refund api again and handle errors and pending process
                                                                                                                    break;

                                                                                                                  case "INTERNAL_SERVER_ERROR":
                                                                                                                  case "TIMED_OUT":
                                                                                                                  case "PAYMENT_PENDING":
                                                                                                                    /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@        BLOCK:Check_Status 3C     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                                                    console.log(
                                                                                                                      "BLOCK:Check_Status 3C "
                                                                                                                    );
                                                                                                                    console.log(
                                                                                                                      "Level 2B : Refund Process status : " +
                                                                                                                        data.code
                                                                                                                    );
                                                                                                                    // console.log(data.data.transactionId);
                                                                                                                    // console.log(data.data.providerReferenceId);
                                                                                                                    const prfd =
                                                                                                                      await storeRefund(
                                                                                                                        data,
                                                                                                                        rid3
                                                                                                                      );
                                                                                                                    //console.log(prfd);
                                                                                                                    // console.log(svtr.id);
                                                                                                                    const checksum =
                                                                                                                      cjs
                                                                                                                        .SHA256(
                                                                                                                          "/v3/transaction/" +
                                                                                                                            merchantId +
                                                                                                                            "/" +
                                                                                                                            rid3 +
                                                                                                                            "/status" +
                                                                                                                            saltKey
                                                                                                                        )
                                                                                                                        .toString(
                                                                                                                          cjs
                                                                                                                            .enc
                                                                                                                            .Hex
                                                                                                                        );
                                                                                                                    //console.log("Api checksum: ", checksum);
                                                                                                                    xVerify =
                                                                                                                      checksum +
                                                                                                                      "###" +
                                                                                                                      saltIndex;
                                                                                                                    //console.log(xVerify);
                                                                                                                    const options =
                                                                                                                      {
                                                                                                                        method:
                                                                                                                          "GET",
                                                                                                                        url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                                                                                                        headers:
                                                                                                                          {
                                                                                                                            "Content-Type":
                                                                                                                              "application/json",
                                                                                                                            "X-VERIFY":
                                                                                                                              xVerify,
                                                                                                                          },
                                                                                                                      };
                                                                                                                    console.log(
                                                                                                                      " Level 2C :Request data:"
                                                                                                                    ); //comment
                                                                                                                    console.log(
                                                                                                                      options
                                                                                                                    ); //comment
                                                                                                                    /////////////////////////////////////////////time out///////////////////////////////////////////////////////////////////
                                                                                                                    setTimeout(
                                                                                                                      function () {
                                                                                                                        request(
                                                                                                                          options,
                                                                                                                          async function (
                                                                                                                            error,
                                                                                                                            response,
                                                                                                                            body
                                                                                                                          ) {
                                                                                                                            if (
                                                                                                                              error
                                                                                                                            ) {
                                                                                                                              /////////need to handle here if error comes///////
                                                                                                                              console.log(
                                                                                                                                error
                                                                                                                              );
                                                                                                                            } else {
                                                                                                                              var data =
                                                                                                                                JSON.parse(
                                                                                                                                  body
                                                                                                                                );
                                                                                                                              console.log(
                                                                                                                                " Level 2C :Check Status Response Body:"
                                                                                                                              ); //comment
                                                                                                                              // console.log(data.data.transactionId);
                                                                                                                              // console.log(data.data.providerReferenceId);
                                                                                                                              console.log(
                                                                                                                                "Level 2C :Check Status  API RESPONSE: " +
                                                                                                                                  data.success
                                                                                                                              );
                                                                                                                              console.log(
                                                                                                                                data.code
                                                                                                                              );
                                                                                                                              switch (
                                                                                                                                data.code
                                                                                                                              ) {
                                                                                                                                case "PAYMENT_SUCCESS":
                                                                                                                                  console.log(
                                                                                                                                    "Level 2C : Refund Process Completed..."
                                                                                                                                  );
                                                                                                                                  console.log(
                                                                                                                                    rid2
                                                                                                                                  );
                                                                                                                                  const srfd =
                                                                                                                                    await storeRefund(
                                                                                                                                      data,
                                                                                                                                      rid3
                                                                                                                                    );
                                                                                                                                  console.log(
                                                                                                                                    "Flow end with CHECK_STATUS SUCCESSFULLY PAYMENT_SUCCESS : 4 "
                                                                                                                                  );
                                                                                                                                  break;
                                                                                                                                case "PAYMENT_ERROR":
                                                                                                                                  console.log(
                                                                                                                                    rid3
                                                                                                                                  );
                                                                                                                                  frfd =
                                                                                                                                    await storeRefund(
                                                                                                                                      data,
                                                                                                                                      rid3
                                                                                                                                    );
                                                                                                                                  console.log(
                                                                                                                                    "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                                                                                  );
                                                                                                                                  /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3C:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                                                                  console.log(
                                                                                                                                    "BLOCK:PAYMENT_ERROR :END  3c:1 "
                                                                                                                                  );
                                                                                                                                  //    //console.log(svtr);
                                                                                                                                  //    const rid3 = await createRefund(svtr.id);
                                                                                                                                  //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                                                                                                  //    console.log(rid3);
                                                                                                                                  //when request complete then add here code for call refund api again and handle errors and pending process
                                                                                                                                  break;

                                                                                                                                case "INTERNAL_SERVER_ERROR":
                                                                                                                                case "TIMED_OUT":
                                                                                                                                case "PAYMENT_PENDING":
                                                                                                                                  /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:INTERNAL_SERVER_ERROR :END  3C:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                                                                  console.log(
                                                                                                                                    rid2
                                                                                                                                  );
                                                                                                                                  frfd =
                                                                                                                                    await storeRefund(
                                                                                                                                      data,
                                                                                                                                      rid3
                                                                                                                                    );
                                                                                                                                  console.log(
                                                                                                                                    frfd
                                                                                                                                  );
                                                                                                                                  console.log(
                                                                                                                                    "FINAL Flow end with CHECK_STATUS FAILED PAYMENT_ERROR,INTERNAL_SERVER_ERROR,TIMED_OUT,PAYMENT_PENDING : 3 "
                                                                                                                                  );
                                                                                                                                  //when request complete then add here code for call refund api again and handle errors and pending process
                                                                                                                                  break;
                                                                                                                                default:
                                                                                                                                  console.log(
                                                                                                                                    rid3
                                                                                                                                  );
                                                                                                                                  frfd3 =
                                                                                                                                    await storeRefund(
                                                                                                                                      data,
                                                                                                                                      rid3
                                                                                                                                    );
                                                                                                                                  console.log(
                                                                                                                                    frfd3
                                                                                                                                  );
                                                                                                                                  console.log(
                                                                                                                                    "Flow end with DEFAULT SWITCH CASE : 1 "
                                                                                                                                  );
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        );
                                                                                                                      },
                                                                                                                      delayTime
                                                                                                                    );
                                                                                                                    break;
                                                                                                                  default:
                                                                                                                    console.log(
                                                                                                                      rid3
                                                                                                                    );
                                                                                                                    frfd3 =
                                                                                                                      await storeRefund(
                                                                                                                        data,
                                                                                                                        rid3
                                                                                                                      );
                                                                                                                    console.log(
                                                                                                                      frfd3
                                                                                                                    );
                                                                                                                    console.log(
                                                                                                                      "Flow end with DEFAULT SWITCH CASE : 1 "
                                                                                                                    );
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          );
                                                                                                        },
                                                                                                        delayTime
                                                                                                      );
                                                                                                      break;
                                                                                                    default:
                                                                                                      console.log(
                                                                                                        rid3
                                                                                                      );
                                                                                                      frfd3 =
                                                                                                        await storeRefund(
                                                                                                          data,
                                                                                                          rid3
                                                                                                        );
                                                                                                      console.log(
                                                                                                        frfd3
                                                                                                      );
                                                                                                      console.log(
                                                                                                        "Flow end with DEFAULT SWITCH CASE : 2 "
                                                                                                      );
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            );
                                                                                          },
                                                                                          delayTime
                                                                                        );
                                                                                        break;
                                                                                      default:
                                                                                        console.log(
                                                                                          rid3
                                                                                        );
                                                                                        frfd3 =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        console.log(
                                                                                          frfd3
                                                                                        );
                                                                                        console.log(
                                                                                          "Flow end with DEFAULT SWITCH CASE : 3 "
                                                                                        );
                                                                                    }
                                                                                  }
                                                                                }
                                                                              );
                                                                            },
                                                                            delayTime
                                                                          );
                                                                          break;

                                                                        case "INTERNAL_SERVER_ERROR":
                                                                        case "TIMED_OUT":
                                                                        case "PAYMENT_PENDING":
                                                                          console.log(
                                                                            rid2
                                                                          );
                                                                          frfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid2
                                                                            );
                                                                          console.log(
                                                                            frfd
                                                                          );
                                                                          console.log(
                                                                            "FINAL Flow end with CHECK_STATUS FAILED PAYMENT_ERROR,INTERNAL_SERVER_ERROR,TIMED_OUT,PAYMENT_PENDING : 3 "
                                                                          );
                                                                          //when request complete then add here code for call refund api again and handle errors and pending process
                                                                          break;
                                                                        default:
                                                                          console.log(
                                                                            rid2
                                                                          );
                                                                          frfd2 =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid2
                                                                            );
                                                                          console.log(
                                                                            frfd2
                                                                          );
                                                                          console.log(
                                                                            "Flow end with DEFAULT SWITCH CASE : 1 "
                                                                          );
                                                                      }
                                                                    }
                                                                  }
                                                                );
                                                              },
                                                              delayTime
                                                            );
                                                            break;
                                                          default:
                                                            console.log(rid2);
                                                            frfd2 =
                                                              await storeRefund(
                                                                data,
                                                                rid2
                                                              );
                                                            console.log(frfd2);
                                                            console.log(
                                                              "Flow end with DEFAULT SWITCH CASE : 2 "
                                                            );
                                                        }
                                                      }
                                                    }
                                                  );
                                                }, delayTime);
                                                break;
                                              default:
                                                console.log(rid2);
                                                frfd2 = await storeRefund(
                                                  data,
                                                  rid2
                                                );
                                                console.log(frfd2);
                                                console.log(
                                                  "Flow end with DEFAULT SWITCH CASE : 3 "
                                                );
                                            }
                                          }
                                        }
                                      );
                                    }, delayTime);
                                    break;
                                  case "INTERNAL_SERVER_ERROR":
                                  case "TIMED_OUT":
                                  case "PAYMENT_PENDING":
                                    console.log(rid);
                                    frfd = await storeRefund(data, rid);
                                    console.log(frfd);
                                    console.log(
                                      "Flow end with CHECK_STATUS FAILED PAYMENT_ERROR : 6 "
                                    );
                                    //when request complete then add here code for call refund api again and handle errors and pending process
                                    break;
                                  default:
                                    console.log(rid);
                                    frfd2 = await storeRefund(data, rid);
                                    console.log(frfd2);
                                    console.log(
                                      "Flow end with DEFAULT SWITCH CASE : 7 "
                                    );
                                }
                              }
                            }
                          );
                        }, delayTime);
                        break;
                      default:
                        console.log(rid);
                        frfd2 = await storeRefund(data, rid);
                        console.log(frfd2);
                        console.log("Flow end with DEFAULT SWITCH CASE : 8 ");
                    }
                  }
                });
              }, delayTime);
              break;
            default:
              console.log(rid);
              frfd2 = await storeRefund(data, rid);
              console.log(frfd2);
              console.log("Flow end with DEFAULT SWITCH CASE : 9 ");
          }
        }
      });
    }
    //////////////////////////////amount < a ////////////////////////START////////////////////////////////////////
    else {
      console.log("amount<a");
      const rfAmount = amount;
      np = true;
      rf = "Refundable Amount is " + rfAmount;
      vs = "VendPending";
      const svtr = await callBackDataStoreDB(req.body, np, rf, vs);
      console.log("********************************************************");
      // console.log(svtr);
      /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:REFUND 1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
      console.log("BLOCK:REFUND 1");
      const rid = await createRefund(svtr.id);
      console.log(rid);

      console.log("Calling Refund API");
      const url = "mercury-uat.phonepe.com";
      const path = "/v3/credit/backToSource";
      saltKey = "0afb5aa4-2206-4ea0-b081-fb94270b8c96";
      saltIndex = 1;
      const decodedRequest = {
        merchantId: merchantId,
        transactionId: rid,
        providerReferenceId: svtr.providerReferenceId,
        amount: rfAmount,
        message: "Incorrect Amount",
      };
      // console.log(decodedRequest);
      let encodedRequest =
        decodedRequest === ""
          ? ""
          : Buffer.from(JSON.stringify(decodedRequest)).toString("base64");
      generateChecksum(encodedRequest, path, saltKey, saltIndex);
      function generateChecksum(encodedRequest, path, saltKey, keyIndex) {
        const checksum = cjs
          .SHA256(encodedRequest + path + saltKey)
          .toString(cjs.enc.Hex);
        // console.log("base64 request:", encodedRequest, "Api checksum: ", checksum);
        xVerify = checksum + "###" + keyIndex;
      }
      if (encodedRequest === "") body1 = "";
      else body1 = JSON.stringify({ request: encodedRequest });
      options = {
        method: "POST",
        url: "https://mercury-uat.phonepe.com/v3/credit/backToSource",
        headers: {
          "Content-Type": "application/json",
          "X-VERIFY": xVerify,
        },
        body: body1,
      };
      console.log("Request data:"); //comment
      console.log(options); //comment

      request(options, async function (error, response, body) {
        if (error) {
          /////////need to handle here if error comes///////
          console.log(error);
        } else {
          var data = JSON.parse(body);
          console.log("Level 1 :Response Body:"); //comment
          //console.log(data);
          console.log("Level 1 :REFUND API RESPONSE: " + data.success);
          console.log(data.code);
          switch (data.code) {
            case "PAYMENT_SUCCESS":
              console.log("Level 1 :Refund Process Completed...");
              console.log(rid);
              const srfd = await storeRefund(data, rid);
              console.log(
                "Flow end with REFUND SUCCESSFULLY PAYMENT_SUCCESS : 1 "
              );
              break;

            case "PAYMENT_ERROR":
              console.log(rid);
              frfd = await storeRefund(data, rid);
              //console.log(svtr);
              /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:REFUND 2     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
              console.log("BLOCK:REFUND 2");
              const rid2 = await createRefund(svtr.id);
              console.log("Level 1: NEW REFUND ID GENERATED.."); /////////////////////////////////////
              console.log(rid2);
              //when request complete then add here code for call refund api again and handle errors and pending process
              console.log("Level 2: Calling Refund API");
              const url = "mercury-uat.phonepe.com";
              const path = "/v3/credit/backToSource";
              saltKey = "0afb5aa4-2206-4ea0-b081-fb94270b8c96";
              saltIndex = 1;
              const decodedRequest = {
                merchantId: merchantId,
                transactionId: rid2,
                providerReferenceId: svtr.providerReferenceId,
                amount: rfAmount,
                message: "Incorrect Amount",
              };
              // console.log(decodedRequest);
              let encodedRequest =
                decodedRequest === ""
                  ? ""
                  : Buffer.from(JSON.stringify(decodedRequest)).toString(
                      "base64"
                    );
              generateChecksum(encodedRequest, path, saltKey, saltIndex);
              function generateChecksum(
                encodedRequest,
                path,
                saltKey,
                keyIndex
              ) {
                const checksum = cjs
                  .SHA256(encodedRequest + path + saltKey)
                  .toString(cjs.enc.Hex);
                // console.log("base64 request:", encodedRequest, "Api checksum: ", checksum);
                xVerify = checksum + "###" + keyIndex;
              }
              if (encodedRequest === "") body1 = "";
              else body1 = JSON.stringify({ request: encodedRequest });
              options2 = {
                method: "POST",
                url: "https://mercury-uat.phonepe.com/v3/credit/backToSource",
                headers: {
                  "Content-Type": "application/json",
                  "X-VERIFY": xVerify,
                },
                body: body1,
              };
              console.log(" Level 2: Request data:"); //comment
              console.log(options2); //comment
              ////////////////////////////////////////////////////////////////////////////////////////////////time out//////////////////////////////////////////////////////////////////////////////////////////////////
              setTimeout(function () {
                request(options2, async function (error, response, body) {
                  if (error) {
                    /////////need to handle here if error comes///////
                    console.log(error);
                  } else {
                    var data = JSON.parse(body);
                    console.log("Level 2A :Response Body:"); //comment
                    //console.log(data);
                    console.log(
                      "Level 2A :REFUND API RESPONSE: " + data.success
                    );
                    console.log(data.code);
                    switch (data.code) {
                      case "PAYMENT_SUCCESS":
                        console.log("Level 2A :Refund Process Completed...");
                        console.log(rid2);
                        const srfd = await storeRefund(data, rid2);
                        console.log(
                          "Flow end with REFUND SUCCESSFULLY PAYMENT_SUCCESS : 2 "
                        );
                        break;

                      case "PAYMENT_ERROR":
                        console.log(rid2);
                        frfd = await storeRefund(data, rid2);
                        console.log(
                          "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                        );

                        //console.log(svtr);
                        /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:REFUND 3      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                        console.log("BLOCK:REFUND 3");
                        const rid3 = await createRefund(svtr.id);
                        console.log("Level 2A: NEW REFUND ID GENERATED.."); /////////////////////////////////////
                        console.log(rid3);
                        //when request complete then add here code for call refund api again and handle errors and pending process
                        //when request complete then add here code for call refund api again and handle errors and pending process
                        console.log("Level 2: Calling Refund API");
                        const url = "mercury-uat.phonepe.com";
                        const path = "/v3/credit/backToSource";
                        saltKey = "0afb5aa4-2206-4ea0-b081-fb94270b8c96";
                        saltIndex = 1;
                        const decodedRequest = {
                          merchantId: merchantId,
                          transactionId: rid3,
                          providerReferenceId: svtr.providerReferenceId,
                          amount: rfAmount,
                          message: "Incorrect Amount",
                        };
                        // console.log(decodedRequest);
                        let encodedRequest =
                          decodedRequest === ""
                            ? ""
                            : Buffer.from(
                                JSON.stringify(decodedRequest)
                              ).toString("base64");
                        generateChecksum(
                          encodedRequest,
                          path,
                          saltKey,
                          saltIndex
                        );
                        function generateChecksum(
                          encodedRequest,
                          path,
                          saltKey,
                          keyIndex
                        ) {
                          const checksum = cjs
                            .SHA256(encodedRequest + path + saltKey)
                            .toString(cjs.enc.Hex);
                          // console.log("base64 request:", encodedRequest, "Api checksum: ", checksum);
                          xVerify = checksum + "###" + keyIndex;
                        }
                        if (encodedRequest === "") body1 = "";
                        else
                          body1 = JSON.stringify({ request: encodedRequest });
                        options2 = {
                          method: "POST",
                          url: "https://mercury-uat.phonepe.com/v3/credit/backToSource",
                          headers: {
                            "Content-Type": "application/json",
                            "X-VERIFY": xVerify,
                          },
                          body: body1,
                        };
                        console.log(" Level 2: Request data:"); //comment
                        console.log(options2); //comment
                        ////////////////////////////////////////////////////////////////////////////////////////////////time out//////////////////////////////////////////////////////////////////////////////////////////////////
                        setTimeout(function () {
                          request(
                            options2,
                            async function (error, response, body) {
                              if (error) {
                                /////////need to handle here if error comes///////
                                console.log(error);
                              } else {
                                var data = JSON.parse(body);
                                console.log("Level 2A :Response Body:"); //comment
                                //console.log(data);
                                console.log(
                                  "Level 2A :REFUND API RESPONSE: " +
                                    data.success
                                );
                                console.log(data.code);
                                switch (data.code) {
                                  case "PAYMENT_SUCCESS":
                                    console.log(
                                      "Level 2A :Refund Process Completed..."
                                    );
                                    console.log(rid3);
                                    const srfd = await storeRefund(data, rid3);
                                    console.log(
                                      "Flow end with REFUND SUCCESSFULLY PAYMENT_SUCCESS : 2 "
                                    );
                                    break;

                                  case "PAYMENT_ERROR":
                                    console.log(rid3);
                                    frfd = await storeRefund(data, rid3);
                                    console.log(
                                      "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                    );
                                    /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                    console.log("BLOCK:PAYMENT_ERROR :END  1 ");
                                    //    //console.log(svtr);
                                    //    const rid3 = await createRefund(svtr.id);
                                    //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                    //    console.log(rid3);
                                    //when request complete then add here code for call refund api again and handle errors and pending process
                                    break;
                                  case "INTERNAL_SERVER_ERROR":
                                  case "TIMED_OUT":
                                  case "PAYMENT_PENDING":
                                    // case 'PAYMENT_ERROR'://need to remove
                                    console.log("Check Status API calling....");
                                    console.log(
                                      "Level 2A : Refund Process status : " +
                                        data.code
                                    );
                                    const prfd = await storeRefund(data, rid3);
                                    /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:Check_Status 3A      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                    console.log("BLOCK:Check_Status 3A");
                                    //console.log(prfd);
                                    //console.log(svtr.id);
                                    const checksum = cjs
                                      .SHA256(
                                        "/v3/transaction/" +
                                          merchantId +
                                          "/" +
                                          rid3 +
                                          "/status" +
                                          saltKey
                                      )
                                      .toString(cjs.enc.Hex);
                                    //console.log("Api checksum: ", checksum);
                                    xVerify = checksum + "###" + saltIndex;
                                    //console.log(xVerify);
                                    options = {
                                      method: "GET",
                                      url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                      headers: {
                                        "Content-Type": "application/json",
                                        "X-VERIFY": xVerify,
                                      },
                                    };
                                    console.log("Level 2A : Request data:"); //comment
                                    console.log(options); //comment
                                    ///////////////////////////////////////////////////////////////time out/////////////////////////////////////////////////////
                                    setTimeout(function () {
                                      request(
                                        options,
                                        async function (error, response, body) {
                                          if (error) {
                                            /////////need to handle here if error comes///////
                                            console.log(error);
                                          } else {
                                            var data = JSON.parse(body);
                                            console.log(
                                              " Level 2B :Check Status Response Body:"
                                            ); //comment
                                            //console.log(data);
                                            console.log(
                                              "Level 2B : Check Status API RESPONSE: " +
                                                data.success
                                            );
                                            console.log(data.code);
                                            switch (data.code) {
                                              case "PAYMENT_SUCCESS":
                                                console.log(
                                                  "Level 2B : Check Status Process Completed..."
                                                );
                                                console.log(rid3);
                                                const srfd = await storeRefund(
                                                  data,
                                                  rid3
                                                );
                                                console.log(
                                                  "Flow end with CHECK STATUS PAYMENT_SUCCESS : 3 "
                                                );
                                                break;

                                              case "PAYMENT_ERROR":
                                                console.log(rid3);
                                                frfd = await storeRefund(
                                                  data,
                                                  rid3
                                                );
                                                console.log(
                                                  "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                );
                                                /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3A:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                console.log(
                                                  "BLOCK:PAYMENT_ERROR :END  3A:1 "
                                                );
                                                //    //console.log(svtr);
                                                //    const rid4 = await createRefund(svtr.id);
                                                //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                //    console.log(rid4);
                                                //when request complete then add here code for call refund api again and handle errors and pending process
                                                break;

                                              case "INTERNAL_SERVER_ERROR":
                                              case "TIMED_OUT":
                                              case "PAYMENT_PENDING":
                                                /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@        BLOCK:Check_Status 3B     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                console.log(
                                                  "BLOCK:Check_Status 3B "
                                                );
                                                console.log(
                                                  "Level 2B : Refund Process status : " +
                                                    data.code
                                                );
                                                // console.log(data.data.transactionId);
                                                // console.log(data.data.providerReferenceId);
                                                const prfd = await storeRefund(
                                                  data,
                                                  rid3
                                                );
                                                //console.log(prfd);
                                                // console.log(svtr.id);
                                                const checksum = cjs
                                                  .SHA256(
                                                    "/v3/transaction/" +
                                                      merchantId +
                                                      "/" +
                                                      rid3 +
                                                      "/status" +
                                                      saltKey
                                                  )
                                                  .toString(cjs.enc.Hex);
                                                //console.log("Api checksum: ", checksum);
                                                xVerify =
                                                  checksum + "###" + saltIndex;
                                                //console.log(xVerify);
                                                const options = {
                                                  method: "GET",
                                                  url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                                  headers: {
                                                    "Content-Type":
                                                      "application/json",
                                                    "X-VERIFY": xVerify,
                                                  },
                                                };
                                                console.log(
                                                  " Level 2C :Request data:"
                                                ); //comment
                                                console.log(options); //comment
                                                /////////////////////////////////////////////time out///////////////////////////////////////////////////////////////////
                                                setTimeout(function () {
                                                  request(
                                                    options,
                                                    async function (
                                                      error,
                                                      response,
                                                      body
                                                    ) {
                                                      if (error) {
                                                        /////////need to handle here if error comes///////
                                                        console.log(error);
                                                      } else {
                                                        var data =
                                                          JSON.parse(body);
                                                        console.log(
                                                          " Level 2C :Check Status Response Body:"
                                                        ); //comment
                                                        // console.log(data.data.transactionId);
                                                        // console.log(data.data.providerReferenceId);
                                                        console.log(
                                                          "Level 2C :Check Status  API RESPONSE: " +
                                                            data.success
                                                        );
                                                        console.log(data.code);
                                                        switch (data.code) {
                                                          case "PAYMENT_SUCCESS":
                                                            console.log(
                                                              "Level 2C : Refund Process Completed..."
                                                            );
                                                            console.log(rid2);
                                                            const srfd =
                                                              await storeRefund(
                                                                data,
                                                                rid3
                                                              );
                                                            console.log(
                                                              "Flow end with CHECK_STATUS SUCCESSFULLY PAYMENT_SUCCESS : 4 "
                                                            );
                                                            break;
                                                          case "PAYMENT_ERROR":
                                                            console.log(rid3);
                                                            frfd =
                                                              await storeRefund(
                                                                data,
                                                                rid3
                                                              );
                                                            console.log(
                                                              "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                            );
                                                            /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3B:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                            console.log(
                                                              "BLOCK:PAYMENT_ERROR :END  3c:1 "
                                                            );
                                                            //    //console.log(svtr);
                                                            //    const rid3 = await createRefund(svtr.id);
                                                            //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                            //    console.log(rid3);
                                                            //when request complete then add here code for call refund api again and handle errors and pending process
                                                            break;

                                                          case "INTERNAL_SERVER_ERROR":
                                                          case "TIMED_OUT":
                                                          case "PAYMENT_PENDING":
                                                            /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@        BLOCK:Check_Status 3C     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                            console.log(
                                                              "BLOCK:Check_Status 3C "
                                                            );
                                                            console.log(
                                                              "Level 2B : Refund Process status : " +
                                                                data.code
                                                            );
                                                            // console.log(data.data.transactionId);
                                                            // console.log(data.data.providerReferenceId);
                                                            const prfd =
                                                              await storeRefund(
                                                                data,
                                                                rid3
                                                              );
                                                            //console.log(prfd);
                                                            // console.log(svtr.id);
                                                            const checksum = cjs
                                                              .SHA256(
                                                                "/v3/transaction/" +
                                                                  merchantId +
                                                                  "/" +
                                                                  rid3 +
                                                                  "/status" +
                                                                  saltKey
                                                              )
                                                              .toString(
                                                                cjs.enc.Hex
                                                              );
                                                            //console.log("Api checksum: ", checksum);
                                                            xVerify =
                                                              checksum +
                                                              "###" +
                                                              saltIndex;
                                                            //console.log(xVerify);
                                                            const options = {
                                                              method: "GET",
                                                              url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                                              headers: {
                                                                "Content-Type":
                                                                  "application/json",
                                                                "X-VERIFY":
                                                                  xVerify,
                                                              },
                                                            };
                                                            console.log(
                                                              " Level 2C :Request data:"
                                                            ); //comment
                                                            console.log(
                                                              options
                                                            ); //comment
                                                            /////////////////////////////////////////////time out///////////////////////////////////////////////////////////////////
                                                            setTimeout(
                                                              function () {
                                                                request(
                                                                  options,
                                                                  async function (
                                                                    error,
                                                                    response,
                                                                    body
                                                                  ) {
                                                                    if (error) {
                                                                      /////////need to handle here if error comes///////
                                                                      console.log(
                                                                        error
                                                                      );
                                                                    } else {
                                                                      var data =
                                                                        JSON.parse(
                                                                          body
                                                                        );
                                                                      console.log(
                                                                        " Level 2C :Check Status Response Body:"
                                                                      ); //comment
                                                                      // console.log(data.data.transactionId);
                                                                      // console.log(data.data.providerReferenceId);
                                                                      console.log(
                                                                        "Level 2C :Check Status  API RESPONSE: " +
                                                                          data.success
                                                                      );
                                                                      console.log(
                                                                        data.code
                                                                      );
                                                                      switch (
                                                                        data.code
                                                                      ) {
                                                                        case "PAYMENT_SUCCESS":
                                                                          console.log(
                                                                            "Level 2C : Refund Process Completed..."
                                                                          );
                                                                          console.log(
                                                                            rid2
                                                                          );
                                                                          const srfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          console.log(
                                                                            "Flow end with CHECK_STATUS SUCCESSFULLY PAYMENT_SUCCESS : 4 "
                                                                          );
                                                                          break;
                                                                        case "PAYMENT_ERROR":
                                                                          console.log(
                                                                            rid3
                                                                          );
                                                                          frfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          console.log(
                                                                            "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                          );
                                                                          /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3C:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                          console.log(
                                                                            "BLOCK:PAYMENT_ERROR :END  3c:1 "
                                                                          );
                                                                          //    //console.log(svtr);
                                                                          //    const rid3 = await createRefund(svtr.id);
                                                                          //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                                          //    console.log(rid3);
                                                                          //when request complete then add here code for call refund api again and handle errors and pending process
                                                                          break;

                                                                        case "INTERNAL_SERVER_ERROR":
                                                                        case "TIMED_OUT":
                                                                        case "PAYMENT_PENDING":
                                                                          /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:INTERNAL_SERVER_ERROR :END  3C:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                          console.log(
                                                                            rid2
                                                                          );
                                                                          frfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          console.log(
                                                                            frfd
                                                                          );
                                                                          console.log(
                                                                            "FINAL Flow end with CHECK_STATUS FAILED PAYMENT_ERROR,INTERNAL_SERVER_ERROR,TIMED_OUT,PAYMENT_PENDING : 3 "
                                                                          );
                                                                          //when request complete then add here code for call refund api again and handle errors and pending process
                                                                          break;
                                                                        default:
                                                                          console.log(
                                                                            rid3
                                                                          );
                                                                          frfd3 =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          console.log(
                                                                            frfd3
                                                                          );
                                                                          console.log(
                                                                            "Flow end with DEFAULT SWITCH CASE : 1 "
                                                                          );
                                                                      }
                                                                    }
                                                                  }
                                                                );
                                                              },
                                                              delayTime
                                                            );
                                                            break;
                                                          default:
                                                            console.log(rid3);
                                                            frfd3 =
                                                              await storeRefund(
                                                                data,
                                                                rid3
                                                              );
                                                            console.log(frfd3);
                                                            console.log(
                                                              "Flow end with DEFAULT SWITCH CASE : 1 "
                                                            );
                                                        }
                                                      }
                                                    }
                                                  );
                                                }, delayTime);
                                                break;
                                              default:
                                                console.log(rid3);
                                                frfd3 = await storeRefund(
                                                  data,
                                                  rid3
                                                );
                                                console.log(frfd3);
                                                console.log(
                                                  "Flow end with DEFAULT SWITCH CASE : 2 "
                                                );
                                            }
                                          }
                                        }
                                      );
                                    }, delayTime);
                                    break;
                                  default:
                                    console.log(rid3);
                                    frfd3 = await storeRefund(data, rid3);
                                    console.log(frfd3);
                                    console.log(
                                      "Flow end with DEFAULT SWITCH CASE : 3 "
                                    );
                                }
                              }
                            }
                          );
                        }, delayTime);
                        break;

                      case "INTERNAL_SERVER_ERROR":
                      case "TIMED_OUT":
                      case "PAYMENT_PENDING":
                        // case 'PAYMENT_ERROR'://need to remove
                        console.log("Check Status API calling....");
                        console.log(
                          "Level 2A : Refund Process status : " + data.code
                        );
                        const prfd = await storeRefund(data, rid2);
                        //console.log(prfd);
                        //console.log(svtr.id);
                        const checksum = cjs
                          .SHA256(
                            "/v3/transaction/" +
                              merchantId +
                              "/" +
                              rid2 +
                              "/status" +
                              saltKey
                          )
                          .toString(cjs.enc.Hex);
                        //console.log("Api checksum: ", checksum);
                        xVerify = checksum + "###" + saltIndex;
                        //console.log(xVerify);
                        options = {
                          method: "GET",
                          url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid2}/status`,
                          headers: {
                            "Content-Type": "application/json",
                            "X-VERIFY": xVerify,
                          },
                        };
                        console.log("Level 2A : Request data:"); //comment
                        console.log(options); //comment
                        ///////////////////////////////////////////////////////////////time out/////////////////////////////////////////////////////
                        setTimeout(function () {
                          request(
                            options,
                            async function (error, response, body) {
                              if (error) {
                                /////////need to handle here if error comes///////
                                console.log(error);
                              } else {
                                var data = JSON.parse(body);
                                console.log(
                                  " Level 2B :Check Status Response Body:"
                                ); //comment
                                //console.log(data);
                                console.log(
                                  "Level 2B : Check Status API RESPONSE: " +
                                    data.success
                                );
                                console.log(data.code);
                                switch (data.code) {
                                  case "PAYMENT_SUCCESS":
                                    console.log(
                                      "Level 2B : Check Status Process Completed..."
                                    );
                                    console.log(rid2);
                                    const srfd = await storeRefund(data, rid2);
                                    console.log(
                                      "Flow end with CHECK STATUS PAYMENT_SUCCESS : 3 "
                                    );
                                    break;

                                  case "PAYMENT_ERROR":
                                    console.log(rid2);
                                    frfd = await storeRefund(data, rid2);
                                    console.log(
                                      "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                    );

                                    //console.log(svtr);
                                    /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:REFUND 3      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                    console.log("BLOCK:REFUND 3");
                                    const rid3 = await createRefund(svtr.id);
                                    console.log(
                                      "Level 2A: NEW REFUND ID GENERATED.."
                                    ); /////////////////////////////////////
                                    console.log(rid3);
                                    //when request complete then add here code for call refund api again and handle errors and pending process
                                    //when request complete then add here code for call refund api again and handle errors and pending process
                                    console.log("Level 2: Calling Refund API");
                                    const url = "mercury-uat.phonepe.com";
                                    const path = "/v3/credit/backToSource";
                                    saltKey =
                                      "0afb5aa4-2206-4ea0-b081-fb94270b8c96";
                                    saltIndex = 1;
                                    const decodedRequest = {
                                      merchantId: merchantId,
                                      transactionId: rid3,
                                      providerReferenceId:
                                        svtr.providerReferenceId,
                                      amount: rfAmount,
                                      message: "Incorrect Amount",
                                    };
                                    // console.log(decodedRequest);
                                    let encodedRequest =
                                      decodedRequest === ""
                                        ? ""
                                        : Buffer.from(
                                            JSON.stringify(decodedRequest)
                                          ).toString("base64");
                                    generateChecksum(
                                      encodedRequest,
                                      path,
                                      saltKey,
                                      saltIndex
                                    );
                                    function generateChecksum(
                                      encodedRequest,
                                      path,
                                      saltKey,
                                      keyIndex
                                    ) {
                                      const checksum = cjs
                                        .SHA256(encodedRequest + path + saltKey)
                                        .toString(cjs.enc.Hex);
                                      // console.log("base64 request:", encodedRequest, "Api checksum: ", checksum);
                                      xVerify = checksum + "###" + keyIndex;
                                    }
                                    if (encodedRequest === "") body1 = "";
                                    else
                                      body1 = JSON.stringify({
                                        request: encodedRequest,
                                      });
                                    options2 = {
                                      method: "POST",
                                      url: "https://mercury-uat.phonepe.com/v3/credit/backToSource",
                                      headers: {
                                        "Content-Type": "application/json",
                                        "X-VERIFY": xVerify,
                                      },
                                      body: body1,
                                    };
                                    console.log(" Level 2: Request data:"); //comment
                                    console.log(options2); //comment
                                    ////////////////////////////////////////////////////////////////////////////////////////////////time out//////////////////////////////////////////////////////////////////////////////////////////////////
                                    setTimeout(function () {
                                      request(
                                        options2,
                                        async function (error, response, body) {
                                          if (error) {
                                            /////////need to handle here if error comes///////
                                            console.log(error);
                                          } else {
                                            var data = JSON.parse(body);
                                            console.log(
                                              "Level 2A :Response Body:"
                                            ); //comment
                                            //console.log(data);
                                            console.log(
                                              "Level 2A :REFUND API RESPONSE: " +
                                                data.success
                                            );
                                            console.log(data.code);
                                            switch (data.code) {
                                              case "PAYMENT_SUCCESS":
                                                console.log(
                                                  "Level 2A :Refund Process Completed..."
                                                );
                                                console.log(rid3);
                                                const srfd = await storeRefund(
                                                  data,
                                                  rid3
                                                );
                                                console.log(
                                                  "Flow end with REFUND SUCCESSFULLY PAYMENT_SUCCESS : 2 "
                                                );
                                                break;

                                              case "PAYMENT_ERROR":
                                                console.log(rid3);
                                                frfd = await storeRefund(
                                                  data,
                                                  rid3
                                                );
                                                console.log(
                                                  "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                );
                                                /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                console.log(
                                                  "BLOCK:PAYMENT_ERROR :END  1 "
                                                );
                                                //    //console.log(svtr);
                                                //    const rid3 = await createRefund(svtr.id);
                                                //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                //    console.log(rid3);
                                                //when request complete then add here code for call refund api again and handle errors and pending process
                                                break;
                                              case "INTERNAL_SERVER_ERROR":
                                              case "TIMED_OUT":
                                              case "PAYMENT_PENDING":
                                                // case 'PAYMENT_ERROR'://need to remove
                                                console.log(
                                                  "Check Status API calling...."
                                                );
                                                console.log(
                                                  "Level 2A : Refund Process status : " +
                                                    data.code
                                                );
                                                const prfd = await storeRefund(
                                                  data,
                                                  rid3
                                                );
                                                /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:Check_Status 3A      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                console.log(
                                                  "BLOCK:Check_Status 3A"
                                                );
                                                //console.log(prfd);
                                                //console.log(svtr.id);
                                                const checksum = cjs
                                                  .SHA256(
                                                    "/v3/transaction/" +
                                                      merchantId +
                                                      "/" +
                                                      rid3 +
                                                      "/status" +
                                                      saltKey
                                                  )
                                                  .toString(cjs.enc.Hex);
                                                //console.log("Api checksum: ", checksum);
                                                xVerify =
                                                  checksum + "###" + saltIndex;
                                                //console.log(xVerify);
                                                options = {
                                                  method: "GET",
                                                  url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                                  headers: {
                                                    "Content-Type":
                                                      "application/json",
                                                    "X-VERIFY": xVerify,
                                                  },
                                                };
                                                console.log(
                                                  "Level 2A : Request data:"
                                                ); //comment
                                                console.log(options); //comment
                                                ///////////////////////////////////////////////////////////////time out/////////////////////////////////////////////////////
                                                setTimeout(function () {
                                                  request(
                                                    options,
                                                    async function (
                                                      error,
                                                      response,
                                                      body
                                                    ) {
                                                      if (error) {
                                                        /////////need to handle here if error comes///////
                                                        console.log(error);
                                                      } else {
                                                        var data =
                                                          JSON.parse(body);
                                                        console.log(
                                                          " Level 2B :Check Status Response Body:"
                                                        ); //comment
                                                        //console.log(data);
                                                        console.log(
                                                          "Level 2B : Check Status API RESPONSE: " +
                                                            data.success
                                                        );
                                                        console.log(data.code);
                                                        switch (data.code) {
                                                          case "PAYMENT_SUCCESS":
                                                            console.log(
                                                              "Level 2B : Check Status Process Completed..."
                                                            );
                                                            console.log(rid3);
                                                            const srfd =
                                                              await storeRefund(
                                                                data,
                                                                rid3
                                                              );
                                                            console.log(
                                                              "Flow end with CHECK STATUS PAYMENT_SUCCESS : 3 "
                                                            );
                                                            break;

                                                          case "PAYMENT_ERROR":
                                                            console.log(rid3);
                                                            frfd =
                                                              await storeRefund(
                                                                data,
                                                                rid3
                                                              );
                                                            console.log(
                                                              "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                            );
                                                            /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3A:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                            console.log(
                                                              "BLOCK:PAYMENT_ERROR :END  3A:1 "
                                                            );
                                                            //    //console.log(svtr);
                                                            //    const rid4 = await createRefund(svtr.id);
                                                            //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                            //    console.log(rid4);
                                                            //when request complete then add here code for call refund api again and handle errors and pending process
                                                            break;

                                                          case "INTERNAL_SERVER_ERROR":
                                                          case "TIMED_OUT":
                                                          case "PAYMENT_PENDING":
                                                            /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@        BLOCK:Check_Status 3B     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                            console.log(
                                                              "BLOCK:Check_Status 3B "
                                                            );
                                                            console.log(
                                                              "Level 2B : Refund Process status : " +
                                                                data.code
                                                            );
                                                            // console.log(data.data.transactionId);
                                                            // console.log(data.data.providerReferenceId);
                                                            const prfd =
                                                              await storeRefund(
                                                                data,
                                                                rid3
                                                              );
                                                            //console.log(prfd);
                                                            // console.log(svtr.id);
                                                            const checksum = cjs
                                                              .SHA256(
                                                                "/v3/transaction/" +
                                                                  merchantId +
                                                                  "/" +
                                                                  rid3 +
                                                                  "/status" +
                                                                  saltKey
                                                              )
                                                              .toString(
                                                                cjs.enc.Hex
                                                              );
                                                            //console.log("Api checksum: ", checksum);
                                                            xVerify =
                                                              checksum +
                                                              "###" +
                                                              saltIndex;
                                                            //console.log(xVerify);
                                                            const options = {
                                                              method: "GET",
                                                              url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                                              headers: {
                                                                "Content-Type":
                                                                  "application/json",
                                                                "X-VERIFY":
                                                                  xVerify,
                                                              },
                                                            };
                                                            console.log(
                                                              " Level 2C :Request data:"
                                                            ); //comment
                                                            console.log(
                                                              options
                                                            ); //comment
                                                            /////////////////////////////////////////////time out///////////////////////////////////////////////////////////////////
                                                            setTimeout(
                                                              function () {
                                                                request(
                                                                  options,
                                                                  async function (
                                                                    error,
                                                                    response,
                                                                    body
                                                                  ) {
                                                                    if (error) {
                                                                      /////////need to handle here if error comes///////
                                                                      console.log(
                                                                        error
                                                                      );
                                                                    } else {
                                                                      var data =
                                                                        JSON.parse(
                                                                          body
                                                                        );
                                                                      console.log(
                                                                        " Level 2C :Check Status Response Body:"
                                                                      ); //comment
                                                                      // console.log(data.data.transactionId);
                                                                      // console.log(data.data.providerReferenceId);
                                                                      console.log(
                                                                        "Level 2C :Check Status  API RESPONSE: " +
                                                                          data.success
                                                                      );
                                                                      console.log(
                                                                        data.code
                                                                      );
                                                                      switch (
                                                                        data.code
                                                                      ) {
                                                                        case "PAYMENT_SUCCESS":
                                                                          console.log(
                                                                            "Level 2C : Refund Process Completed..."
                                                                          );
                                                                          console.log(
                                                                            rid2
                                                                          );
                                                                          const srfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          console.log(
                                                                            "Flow end with CHECK_STATUS SUCCESSFULLY PAYMENT_SUCCESS : 4 "
                                                                          );
                                                                          break;
                                                                        case "PAYMENT_ERROR":
                                                                          console.log(
                                                                            rid3
                                                                          );
                                                                          frfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          console.log(
                                                                            "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                          );
                                                                          /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3B:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                          console.log(
                                                                            "BLOCK:PAYMENT_ERROR :END  3c:1 "
                                                                          );
                                                                          //    //console.log(svtr);
                                                                          //    const rid3 = await createRefund(svtr.id);
                                                                          //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                                          //    console.log(rid3);
                                                                          //when request complete then add here code for call refund api again and handle errors and pending process
                                                                          break;

                                                                        case "INTERNAL_SERVER_ERROR":
                                                                        case "TIMED_OUT":
                                                                        case "PAYMENT_PENDING":
                                                                          /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@        BLOCK:Check_Status 3C     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                          console.log(
                                                                            "BLOCK:Check_Status 3C "
                                                                          );
                                                                          console.log(
                                                                            "Level 2B : Refund Process status : " +
                                                                              data.code
                                                                          );
                                                                          // console.log(data.data.transactionId);
                                                                          // console.log(data.data.providerReferenceId);
                                                                          const prfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          //console.log(prfd);
                                                                          // console.log(svtr.id);
                                                                          const checksum =
                                                                            cjs
                                                                              .SHA256(
                                                                                "/v3/transaction/" +
                                                                                  merchantId +
                                                                                  "/" +
                                                                                  rid3 +
                                                                                  "/status" +
                                                                                  saltKey
                                                                              )
                                                                              .toString(
                                                                                cjs
                                                                                  .enc
                                                                                  .Hex
                                                                              );
                                                                          //console.log("Api checksum: ", checksum);
                                                                          xVerify =
                                                                            checksum +
                                                                            "###" +
                                                                            saltIndex;
                                                                          //console.log(xVerify);
                                                                          const options =
                                                                            {
                                                                              method:
                                                                                "GET",
                                                                              url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                                                              headers:
                                                                                {
                                                                                  "Content-Type":
                                                                                    "application/json",
                                                                                  "X-VERIFY":
                                                                                    xVerify,
                                                                                },
                                                                            };
                                                                          console.log(
                                                                            " Level 2C :Request data:"
                                                                          ); //comment
                                                                          console.log(
                                                                            options
                                                                          ); //comment
                                                                          /////////////////////////////////////////////time out///////////////////////////////////////////////////////////////////
                                                                          setTimeout(
                                                                            function () {
                                                                              request(
                                                                                options,
                                                                                async function (
                                                                                  error,
                                                                                  response,
                                                                                  body
                                                                                ) {
                                                                                  if (
                                                                                    error
                                                                                  ) {
                                                                                    /////////need to handle here if error comes///////
                                                                                    console.log(
                                                                                      error
                                                                                    );
                                                                                  } else {
                                                                                    var data =
                                                                                      JSON.parse(
                                                                                        body
                                                                                      );
                                                                                    console.log(
                                                                                      " Level 2C :Check Status Response Body:"
                                                                                    ); //comment
                                                                                    // console.log(data.data.transactionId);
                                                                                    // console.log(data.data.providerReferenceId);
                                                                                    console.log(
                                                                                      "Level 2C :Check Status  API RESPONSE: " +
                                                                                        data.success
                                                                                    );
                                                                                    console.log(
                                                                                      data.code
                                                                                    );
                                                                                    switch (
                                                                                      data.code
                                                                                    ) {
                                                                                      case "PAYMENT_SUCCESS":
                                                                                        console.log(
                                                                                          "Level 2C : Refund Process Completed..."
                                                                                        );
                                                                                        console.log(
                                                                                          rid2
                                                                                        );
                                                                                        const srfd =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        console.log(
                                                                                          "Flow end with CHECK_STATUS SUCCESSFULLY PAYMENT_SUCCESS : 4 "
                                                                                        );
                                                                                        break;
                                                                                      case "PAYMENT_ERROR":
                                                                                        console.log(
                                                                                          rid3
                                                                                        );
                                                                                        frfd =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        console.log(
                                                                                          "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                                        );
                                                                                        /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3C:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                        console.log(
                                                                                          "BLOCK:PAYMENT_ERROR :END  3c:1 "
                                                                                        );
                                                                                        //    //console.log(svtr);
                                                                                        //    const rid3 = await createRefund(svtr.id);
                                                                                        //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                                                        //    console.log(rid3);
                                                                                        //when request complete then add here code for call refund api again and handle errors and pending process
                                                                                        break;

                                                                                      case "INTERNAL_SERVER_ERROR":
                                                                                      case "TIMED_OUT":
                                                                                      case "PAYMENT_PENDING":
                                                                                        /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:INTERNAL_SERVER_ERROR :END  3C:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                        console.log(
                                                                                          rid2
                                                                                        );
                                                                                        frfd =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        console.log(
                                                                                          frfd
                                                                                        );
                                                                                        console.log(
                                                                                          "FINAL Flow end with CHECK_STATUS FAILED PAYMENT_ERROR,INTERNAL_SERVER_ERROR,TIMED_OUT,PAYMENT_PENDING : 3 "
                                                                                        );
                                                                                        //when request complete then add here code for call refund api again and handle errors and pending process
                                                                                        break;
                                                                                      default:
                                                                                        console.log(
                                                                                          rid3
                                                                                        );
                                                                                        frfd3 =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        console.log(
                                                                                          frfd3
                                                                                        );
                                                                                        console.log(
                                                                                          "Flow end with DEFAULT SWITCH CASE : 1 "
                                                                                        );
                                                                                    }
                                                                                  }
                                                                                }
                                                                              );
                                                                            },
                                                                            delayTime
                                                                          );
                                                                          break;
                                                                        default:
                                                                          console.log(
                                                                            rid3
                                                                          );
                                                                          frfd3 =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          console.log(
                                                                            frfd3
                                                                          );
                                                                          console.log(
                                                                            "Flow end with DEFAULT SWITCH CASE : 1 "
                                                                          );
                                                                      }
                                                                    }
                                                                  }
                                                                );
                                                              },
                                                              delayTime
                                                            );
                                                            break;
                                                          default:
                                                            console.log(rid3);
                                                            frfd3 =
                                                              await storeRefund(
                                                                data,
                                                                rid3
                                                              );
                                                            console.log(frfd3);
                                                            console.log(
                                                              "Flow end with DEFAULT SWITCH CASE : 2 "
                                                            );
                                                        }
                                                      }
                                                    }
                                                  );
                                                }, delayTime);
                                                break;
                                              default:
                                                console.log(rid3);
                                                frfd3 = await storeRefund(
                                                  data,
                                                  rid3
                                                );
                                                console.log(frfd3);
                                                console.log(
                                                  "Flow end with DEFAULT SWITCH CASE : 3 "
                                                );
                                            }
                                          }
                                        }
                                      );
                                    }, delayTime);
                                    break;

                                  case "INTERNAL_SERVER_ERROR":
                                  case "TIMED_OUT":
                                  case "PAYMENT_PENDING":
                                    console.log(
                                      "Level 2B : Refund Process status : " +
                                        data.code
                                    );
                                    // console.log(data.data.transactionId);
                                    // console.log(data.data.providerReferenceId);
                                    const prfd = await storeRefund(data, rid2);
                                    //console.log(prfd);
                                    // console.log(svtr.id);
                                    const checksum = cjs
                                      .SHA256(
                                        "/v3/transaction/" +
                                          merchantId +
                                          "/" +
                                          rid2 +
                                          "/status" +
                                          saltKey
                                      )
                                      .toString(cjs.enc.Hex);
                                    //console.log("Api checksum: ", checksum);
                                    xVerify = checksum + "###" + saltIndex;
                                    //console.log(xVerify);
                                    const options = {
                                      method: "GET",
                                      url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid2}/status`,
                                      headers: {
                                        "Content-Type": "application/json",
                                        "X-VERIFY": xVerify,
                                      },
                                    };
                                    console.log(" Level 2C :Request data:"); //comment
                                    console.log(options); //comment
                                    /////////////////////////////////////////////time out///////////////////////////////////////////////////////////////////
                                    setTimeout(function () {
                                      request(
                                        options,
                                        async function (error, response, body) {
                                          if (error) {
                                            /////////need to handle here if error comes///////
                                            console.log(error);
                                          } else {
                                            var data = JSON.parse(body);
                                            console.log(
                                              " Level 2C :Check Status Response Body:"
                                            ); //comment
                                            // console.log(data.data.transactionId);
                                            // console.log(data.data.providerReferenceId);
                                            console.log(
                                              "Level 2C :Check Status  API RESPONSE: " +
                                                data.success
                                            );
                                            console.log(data.code);
                                            switch (data.code) {
                                              case "PAYMENT_SUCCESS":
                                                console.log(
                                                  "Level 2C : Refund Process Completed..."
                                                );
                                                console.log(rid2);
                                                const srfd = await storeRefund(
                                                  data,
                                                  rid2
                                                );
                                                console.log(
                                                  "Flow end with CHECK_STATUS SUCCESSFULLY PAYMENT_SUCCESS : 4 "
                                                );
                                                break;
                                              case "PAYMENT_ERROR":
                                                console.log(rid2);
                                                frfd = await storeRefund(
                                                  data,
                                                  rid2
                                                );
                                                console.log(
                                                  "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                );

                                                //console.log(svtr);
                                                /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:REFUND 3      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                console.log("BLOCK:REFUND 3");
                                                const rid3 = await createRefund(
                                                  svtr.id
                                                );
                                                console.log(
                                                  "Level 2A: NEW REFUND ID GENERATED.."
                                                ); /////////////////////////////////////
                                                console.log(rid3);
                                                //when request complete then add here code for call refund api again and handle errors and pending process
                                                //when request complete then add here code for call refund api again and handle errors and pending process
                                                console.log(
                                                  "Level 2: Calling Refund API"
                                                );
                                                const url =
                                                  "mercury-uat.phonepe.com";
                                                const path =
                                                  "/v3/credit/backToSource";
                                                saltKey =
                                                  "0afb5aa4-2206-4ea0-b081-fb94270b8c96";
                                                saltIndex = 1;
                                                const decodedRequest = {
                                                  merchantId: merchantId,
                                                  transactionId: rid3,
                                                  providerReferenceId:
                                                    svtr.providerReferenceId,
                                                  amount: rfAmount,
                                                  message: "Incorrect Amount",
                                                };
                                                // console.log(decodedRequest);
                                                let encodedRequest =
                                                  decodedRequest === ""
                                                    ? ""
                                                    : Buffer.from(
                                                        JSON.stringify(
                                                          decodedRequest
                                                        )
                                                      ).toString("base64");
                                                generateChecksum(
                                                  encodedRequest,
                                                  path,
                                                  saltKey,
                                                  saltIndex
                                                );
                                                function generateChecksum(
                                                  encodedRequest,
                                                  path,
                                                  saltKey,
                                                  keyIndex
                                                ) {
                                                  const checksum = cjs
                                                    .SHA256(
                                                      encodedRequest +
                                                        path +
                                                        saltKey
                                                    )
                                                    .toString(cjs.enc.Hex);
                                                  // console.log("base64 request:", encodedRequest, "Api checksum: ", checksum);
                                                  xVerify =
                                                    checksum + "###" + keyIndex;
                                                }
                                                if (encodedRequest === "")
                                                  body1 = "";
                                                else
                                                  body1 = JSON.stringify({
                                                    request: encodedRequest,
                                                  });
                                                options2 = {
                                                  method: "POST",
                                                  url: "https://mercury-uat.phonepe.com/v3/credit/backToSource",
                                                  headers: {
                                                    "Content-Type":
                                                      "application/json",
                                                    "X-VERIFY": xVerify,
                                                  },
                                                  body: body1,
                                                };
                                                console.log(
                                                  " Level 2: Request data:"
                                                ); //comment
                                                console.log(options2); //comment
                                                ////////////////////////////////////////////////////////////////////////////////////////////////time out//////////////////////////////////////////////////////////////////////////////////////////////////
                                                setTimeout(function () {
                                                  request(
                                                    options2,
                                                    async function (
                                                      error,
                                                      response,
                                                      body
                                                    ) {
                                                      if (error) {
                                                        /////////need to handle here if error comes///////
                                                        console.log(error);
                                                      } else {
                                                        var data =
                                                          JSON.parse(body);
                                                        console.log(
                                                          "Level 2A :Response Body:"
                                                        ); //comment
                                                        //console.log(data);
                                                        console.log(
                                                          "Level 2A :REFUND API RESPONSE: " +
                                                            data.success
                                                        );
                                                        console.log(data.code);
                                                        switch (data.code) {
                                                          case "PAYMENT_SUCCESS":
                                                            console.log(
                                                              "Level 2A :Refund Process Completed..."
                                                            );
                                                            console.log(rid3);
                                                            const srfd =
                                                              await storeRefund(
                                                                data,
                                                                rid3
                                                              );
                                                            console.log(
                                                              "Flow end with REFUND SUCCESSFULLY PAYMENT_SUCCESS : 2 "
                                                            );
                                                            break;

                                                          case "PAYMENT_ERROR":
                                                            console.log(rid3);
                                                            frfd =
                                                              await storeRefund(
                                                                data,
                                                                rid3
                                                              );
                                                            console.log(
                                                              "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                            );
                                                            /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                            console.log(
                                                              "BLOCK:PAYMENT_ERROR :END  1 "
                                                            );
                                                            //    //console.log(svtr);
                                                            //    const rid3 = await createRefund(svtr.id);
                                                            //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                            //    console.log(rid3);
                                                            //when request complete then add here code for call refund api again and handle errors and pending process
                                                            break;
                                                          case "INTERNAL_SERVER_ERROR":
                                                          case "TIMED_OUT":
                                                          case "PAYMENT_PENDING":
                                                            // case 'PAYMENT_ERROR'://need to remove
                                                            console.log(
                                                              "Check Status API calling...."
                                                            );
                                                            console.log(
                                                              "Level 2A : Refund Process status : " +
                                                                data.code
                                                            );
                                                            const prfd =
                                                              await storeRefund(
                                                                data,
                                                                rid3
                                                              );
                                                            /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:Check_Status 3A      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                            console.log(
                                                              "BLOCK:Check_Status 3A"
                                                            );
                                                            //console.log(prfd);
                                                            //console.log(svtr.id);
                                                            const checksum = cjs
                                                              .SHA256(
                                                                "/v3/transaction/" +
                                                                  merchantId +
                                                                  "/" +
                                                                  rid3 +
                                                                  "/status" +
                                                                  saltKey
                                                              )
                                                              .toString(
                                                                cjs.enc.Hex
                                                              );
                                                            //console.log("Api checksum: ", checksum);
                                                            xVerify =
                                                              checksum +
                                                              "###" +
                                                              saltIndex;
                                                            //console.log(xVerify);
                                                            options = {
                                                              method: "GET",
                                                              url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                                              headers: {
                                                                "Content-Type":
                                                                  "application/json",
                                                                "X-VERIFY":
                                                                  xVerify,
                                                              },
                                                            };
                                                            console.log(
                                                              "Level 2A : Request data:"
                                                            ); //comment
                                                            console.log(
                                                              options
                                                            ); //comment
                                                            ///////////////////////////////////////////////////////////////time out/////////////////////////////////////////////////////
                                                            setTimeout(
                                                              function () {
                                                                request(
                                                                  options,
                                                                  async function (
                                                                    error,
                                                                    response,
                                                                    body
                                                                  ) {
                                                                    if (error) {
                                                                      /////////need to handle here if error comes///////
                                                                      console.log(
                                                                        error
                                                                      );
                                                                    } else {
                                                                      var data =
                                                                        JSON.parse(
                                                                          body
                                                                        );
                                                                      console.log(
                                                                        " Level 2B :Check Status Response Body:"
                                                                      ); //comment
                                                                      //console.log(data);
                                                                      console.log(
                                                                        "Level 2B : Check Status API RESPONSE: " +
                                                                          data.success
                                                                      );
                                                                      console.log(
                                                                        data.code
                                                                      );
                                                                      switch (
                                                                        data.code
                                                                      ) {
                                                                        case "PAYMENT_SUCCESS":
                                                                          console.log(
                                                                            "Level 2B : Check Status Process Completed..."
                                                                          );
                                                                          console.log(
                                                                            rid3
                                                                          );
                                                                          const srfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          console.log(
                                                                            "Flow end with CHECK STATUS PAYMENT_SUCCESS : 3 "
                                                                          );
                                                                          break;

                                                                        case "PAYMENT_ERROR":
                                                                          console.log(
                                                                            rid3
                                                                          );
                                                                          frfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          console.log(
                                                                            "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                          );
                                                                          /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3A:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                          console.log(
                                                                            "BLOCK:PAYMENT_ERROR :END  3A:1 "
                                                                          );
                                                                          //    //console.log(svtr);
                                                                          //    const rid4 = await createRefund(svtr.id);
                                                                          //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                                          //    console.log(rid4);
                                                                          //when request complete then add here code for call refund api again and handle errors and pending process
                                                                          break;

                                                                        case "INTERNAL_SERVER_ERROR":
                                                                        case "TIMED_OUT":
                                                                        case "PAYMENT_PENDING":
                                                                          /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@        BLOCK:Check_Status 3B     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                          console.log(
                                                                            "BLOCK:Check_Status 3B "
                                                                          );
                                                                          console.log(
                                                                            "Level 2B : Refund Process status : " +
                                                                              data.code
                                                                          );
                                                                          // console.log(data.data.transactionId);
                                                                          // console.log(data.data.providerReferenceId);
                                                                          const prfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          //console.log(prfd);
                                                                          // console.log(svtr.id);
                                                                          const checksum =
                                                                            cjs
                                                                              .SHA256(
                                                                                "/v3/transaction/" +
                                                                                  merchantId +
                                                                                  "/" +
                                                                                  rid3 +
                                                                                  "/status" +
                                                                                  saltKey
                                                                              )
                                                                              .toString(
                                                                                cjs
                                                                                  .enc
                                                                                  .Hex
                                                                              );
                                                                          //console.log("Api checksum: ", checksum);
                                                                          xVerify =
                                                                            checksum +
                                                                            "###" +
                                                                            saltIndex;
                                                                          //console.log(xVerify);
                                                                          const options =
                                                                            {
                                                                              method:
                                                                                "GET",
                                                                              url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                                                              headers:
                                                                                {
                                                                                  "Content-Type":
                                                                                    "application/json",
                                                                                  "X-VERIFY":
                                                                                    xVerify,
                                                                                },
                                                                            };
                                                                          console.log(
                                                                            " Level 2C :Request data:"
                                                                          ); //comment
                                                                          console.log(
                                                                            options
                                                                          ); //comment
                                                                          /////////////////////////////////////////////time out///////////////////////////////////////////////////////////////////
                                                                          setTimeout(
                                                                            function () {
                                                                              request(
                                                                                options,
                                                                                async function (
                                                                                  error,
                                                                                  response,
                                                                                  body
                                                                                ) {
                                                                                  if (
                                                                                    error
                                                                                  ) {
                                                                                    /////////need to handle here if error comes///////
                                                                                    console.log(
                                                                                      error
                                                                                    );
                                                                                  } else {
                                                                                    var data =
                                                                                      JSON.parse(
                                                                                        body
                                                                                      );
                                                                                    console.log(
                                                                                      " Level 2C :Check Status Response Body:"
                                                                                    ); //comment
                                                                                    // console.log(data.data.transactionId);
                                                                                    // console.log(data.data.providerReferenceId);
                                                                                    console.log(
                                                                                      "Level 2C :Check Status  API RESPONSE: " +
                                                                                        data.success
                                                                                    );
                                                                                    console.log(
                                                                                      data.code
                                                                                    );
                                                                                    switch (
                                                                                      data.code
                                                                                    ) {
                                                                                      case "PAYMENT_SUCCESS":
                                                                                        console.log(
                                                                                          "Level 2C : Refund Process Completed..."
                                                                                        );
                                                                                        console.log(
                                                                                          rid2
                                                                                        );
                                                                                        const srfd =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        console.log(
                                                                                          "Flow end with CHECK_STATUS SUCCESSFULLY PAYMENT_SUCCESS : 4 "
                                                                                        );
                                                                                        break;
                                                                                      case "PAYMENT_ERROR":
                                                                                        console.log(
                                                                                          rid3
                                                                                        );
                                                                                        frfd =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        console.log(
                                                                                          "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                                        );
                                                                                        /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3B:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                        console.log(
                                                                                          "BLOCK:PAYMENT_ERROR :END  3c:1 "
                                                                                        );
                                                                                        //    //console.log(svtr);
                                                                                        //    const rid3 = await createRefund(svtr.id);
                                                                                        //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                                                        //    console.log(rid3);
                                                                                        //when request complete then add here code for call refund api again and handle errors and pending process
                                                                                        break;

                                                                                      case "INTERNAL_SERVER_ERROR":
                                                                                      case "TIMED_OUT":
                                                                                      case "PAYMENT_PENDING":
                                                                                        /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@        BLOCK:Check_Status 3C     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                        console.log(
                                                                                          "BLOCK:Check_Status 3C "
                                                                                        );
                                                                                        console.log(
                                                                                          "Level 2B : Refund Process status : " +
                                                                                            data.code
                                                                                        );
                                                                                        // console.log(data.data.transactionId);
                                                                                        // console.log(data.data.providerReferenceId);
                                                                                        const prfd =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        //console.log(prfd);
                                                                                        // console.log(svtr.id);
                                                                                        const checksum =
                                                                                          cjs
                                                                                            .SHA256(
                                                                                              "/v3/transaction/" +
                                                                                                merchantId +
                                                                                                "/" +
                                                                                                rid3 +
                                                                                                "/status" +
                                                                                                saltKey
                                                                                            )
                                                                                            .toString(
                                                                                              cjs
                                                                                                .enc
                                                                                                .Hex
                                                                                            );
                                                                                        //console.log("Api checksum: ", checksum);
                                                                                        xVerify =
                                                                                          checksum +
                                                                                          "###" +
                                                                                          saltIndex;
                                                                                        //console.log(xVerify);
                                                                                        const options =
                                                                                          {
                                                                                            method:
                                                                                              "GET",
                                                                                            url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                                                                            headers:
                                                                                              {
                                                                                                "Content-Type":
                                                                                                  "application/json",
                                                                                                "X-VERIFY":
                                                                                                  xVerify,
                                                                                              },
                                                                                          };
                                                                                        console.log(
                                                                                          " Level 2C :Request data:"
                                                                                        ); //comment
                                                                                        console.log(
                                                                                          options
                                                                                        ); //comment
                                                                                        /////////////////////////////////////////////time out///////////////////////////////////////////////////////////////////
                                                                                        setTimeout(
                                                                                          function () {
                                                                                            request(
                                                                                              options,
                                                                                              async function (
                                                                                                error,
                                                                                                response,
                                                                                                body
                                                                                              ) {
                                                                                                if (
                                                                                                  error
                                                                                                ) {
                                                                                                  /////////need to handle here if error comes///////
                                                                                                  console.log(
                                                                                                    error
                                                                                                  );
                                                                                                } else {
                                                                                                  var data =
                                                                                                    JSON.parse(
                                                                                                      body
                                                                                                    );
                                                                                                  console.log(
                                                                                                    " Level 2C :Check Status Response Body:"
                                                                                                  ); //comment
                                                                                                  // console.log(data.data.transactionId);
                                                                                                  // console.log(data.data.providerReferenceId);
                                                                                                  console.log(
                                                                                                    "Level 2C :Check Status  API RESPONSE: " +
                                                                                                      data.success
                                                                                                  );
                                                                                                  console.log(
                                                                                                    data.code
                                                                                                  );
                                                                                                  switch (
                                                                                                    data.code
                                                                                                  ) {
                                                                                                    case "PAYMENT_SUCCESS":
                                                                                                      console.log(
                                                                                                        "Level 2C : Refund Process Completed..."
                                                                                                      );
                                                                                                      console.log(
                                                                                                        rid2
                                                                                                      );
                                                                                                      const srfd =
                                                                                                        await storeRefund(
                                                                                                          data,
                                                                                                          rid3
                                                                                                        );
                                                                                                      console.log(
                                                                                                        "Flow end with CHECK_STATUS SUCCESSFULLY PAYMENT_SUCCESS : 4 "
                                                                                                      );
                                                                                                      break;
                                                                                                    case "PAYMENT_ERROR":
                                                                                                      console.log(
                                                                                                        rid3
                                                                                                      );
                                                                                                      frfd =
                                                                                                        await storeRefund(
                                                                                                          data,
                                                                                                          rid3
                                                                                                        );
                                                                                                      console.log(
                                                                                                        "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                                                      );
                                                                                                      /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3C:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                                      console.log(
                                                                                                        "BLOCK:PAYMENT_ERROR :END  3c:1 "
                                                                                                      );
                                                                                                      //    //console.log(svtr);
                                                                                                      //    const rid3 = await createRefund(svtr.id);
                                                                                                      //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                                                                      //    console.log(rid3);
                                                                                                      //when request complete then add here code for call refund api again and handle errors and pending process
                                                                                                      break;

                                                                                                    case "INTERNAL_SERVER_ERROR":
                                                                                                    case "TIMED_OUT":
                                                                                                    case "PAYMENT_PENDING":
                                                                                                      /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:INTERNAL_SERVER_ERROR :END  3C:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                                      console.log(
                                                                                                        rid2
                                                                                                      );
                                                                                                      frfd =
                                                                                                        await storeRefund(
                                                                                                          data,
                                                                                                          rid3
                                                                                                        );
                                                                                                      console.log(
                                                                                                        frfd
                                                                                                      );
                                                                                                      console.log(
                                                                                                        "FINAL Flow end with CHECK_STATUS FAILED PAYMENT_ERROR,INTERNAL_SERVER_ERROR,TIMED_OUT,PAYMENT_PENDING : 3 "
                                                                                                      );
                                                                                                      //when request complete then add here code for call refund api again and handle errors and pending process
                                                                                                      break;
                                                                                                    default:
                                                                                                      console.log(
                                                                                                        rid3
                                                                                                      );
                                                                                                      frfd3 =
                                                                                                        await storeRefund(
                                                                                                          data,
                                                                                                          rid3
                                                                                                        );
                                                                                                      console.log(
                                                                                                        frfd3
                                                                                                      );
                                                                                                      console.log(
                                                                                                        "Flow end with DEFAULT SWITCH CASE : 1 "
                                                                                                      );
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            );
                                                                                          },
                                                                                          delayTime
                                                                                        );
                                                                                        break;
                                                                                      default:
                                                                                        console.log(
                                                                                          rid3
                                                                                        );
                                                                                        frfd3 =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        console.log(
                                                                                          frfd3
                                                                                        );
                                                                                        console.log(
                                                                                          "Flow end with DEFAULT SWITCH CASE : 1 "
                                                                                        );
                                                                                    }
                                                                                  }
                                                                                }
                                                                              );
                                                                            },
                                                                            delayTime
                                                                          );
                                                                          break;
                                                                        default:
                                                                          console.log(
                                                                            rid3
                                                                          );
                                                                          frfd3 =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          console.log(
                                                                            frfd3
                                                                          );
                                                                          console.log(
                                                                            "Flow end with DEFAULT SWITCH CASE : 2 "
                                                                          );
                                                                      }
                                                                    }
                                                                  }
                                                                );
                                                              },
                                                              delayTime
                                                            );
                                                            break;
                                                          default:
                                                            console.log(rid3);
                                                            frfd3 =
                                                              await storeRefund(
                                                                data,
                                                                rid3
                                                              );
                                                            console.log(frfd3);
                                                            console.log(
                                                              "Flow end with DEFAULT SWITCH CASE : 3 "
                                                            );
                                                        }
                                                      }
                                                    }
                                                  );
                                                }, delayTime);
                                                break;

                                              case "INTERNAL_SERVER_ERROR":
                                              case "TIMED_OUT":
                                              case "PAYMENT_PENDING":
                                                console.log(rid2);
                                                frfd = await storeRefund(
                                                  data,
                                                  rid2
                                                );
                                                console.log(frfd);
                                                console.log(
                                                  "FINAL Flow end with CHECK_STATUS FAILED PAYMENT_ERROR,INTERNAL_SERVER_ERROR,TIMED_OUT,PAYMENT_PENDING : 3 "
                                                );
                                                //when request complete then add here code for call refund api again and handle errors and pending process
                                                break;
                                              default:
                                                console.log(rid2);
                                                frfd2 = await storeRefund(
                                                  data,
                                                  rid2
                                                );
                                                console.log(frfd2);
                                                console.log(
                                                  "Flow end with DEFAULT SWITCH CASE : 1 "
                                                );
                                            }
                                          }
                                        }
                                      );
                                    }, delayTime);
                                    break;
                                  default:
                                    console.log(rid2);
                                    frfd2 = await storeRefund(data, rid2);
                                    console.log(frfd2);
                                    console.log(
                                      "Flow end with DEFAULT SWITCH CASE : 2 "
                                    );
                                }
                              }
                            }
                          );
                        }, delayTime);
                        break;
                      default:
                        console.log(rid2);
                        frfd2 = await storeRefund(data, rid2);
                        console.log(frfd2);
                        console.log("Flow end with DEFAULT SWITCH CASE : 3 ");
                    }
                  }
                });
              }, delayTime);
              break;
            case "INTERNAL_SERVER_ERROR":
            case "TIMED_OUT":
            case "PAYMENT_PENDING":
              console.log("Level 1 : Refund Process status : " + data.code);
              const prfd = await storeRefund(data, rid);
              // console.log(prfd);
              // console.log(svtr.id);
              // console.log("^^^^^^^^^^^^^^^^^^^");
              // console.log(merchantId);
              // console.log(rid);
              //console.log(saltKey);

              const checksum = cjs
                .SHA256(
                  "/v3/transaction/" +
                    merchantId +
                    "/" +
                    rid +
                    "/status" +
                    saltKey
                )
                .toString(cjs.enc.Hex);
              //console.log("%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%");
              xVerify = checksum + "###" + saltIndex;
              //console.log(xVerify);
              options = {
                method: "GET",
                url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid}/status`,
                headers: {
                  "Content-Type": "application/json",
                  "X-VERIFY": xVerify,
                },
              };
              console.log("Level 1 : Request data:"); //comment
              console.log(options); //comment
              //////////////////////////////////////////////////////////////////////////////////////////timeout ///////////////////////////////
              setTimeout(function () {
                request(options, async function (error, response, body) {
                  if (error) {
                    /////////need to handle here if error comes///////
                    console.log(error);
                  } else {
                    var data = JSON.parse(body);
                    console.log(" Level 2 :Check Status Response Body:"); //comment
                    //console.log(data);
                    console.log(
                      "Level 2 : Check Status API RESPONSE: " + data.success
                    );
                    console.log(data.code);
                    switch (data.code) {
                      case "PAYMENT_SUCCESS":
                        console.log(
                          "Level 2 : Check Status Process Completed..."
                        );
                        console.log(rid);
                        const srfd = await storeRefund(data, rid);
                        console.log(
                          "Flow end with CHECK_STATUS SUCCESSFULLY PAYMENT_SUCCESS : 5 "
                        );
                        break;

                      case "PAYMENT_ERROR":
                        console.log(rid);
                        frfd = await storeRefund(data, rid);
                        //console.log(svtr);
                        /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:REFUND 2     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                        console.log("BLOCK:REFUND 2");
                        const rid2 = await createRefund(svtr.id);
                        console.log("Level 1: NEW REFUND ID GENERATED.."); /////////////////////////////////////
                        console.log(rid2);
                        //when request complete then add here code for call refund api again and handle errors and pending process
                        console.log("Level 2: Calling Refund API");
                        const url = "mercury-uat.phonepe.com";
                        const path = "/v3/credit/backToSource";
                        saltKey = "0afb5aa4-2206-4ea0-b081-fb94270b8c96";
                        saltIndex = 1;
                        const decodedRequest = {
                          merchantId: merchantId,
                          transactionId: rid2,
                          providerReferenceId: svtr.providerReferenceId,
                          amount: rfAmount,
                          message: "Incorrect Amount",
                        };
                        // console.log(decodedRequest);
                        let encodedRequest =
                          decodedRequest === ""
                            ? ""
                            : Buffer.from(
                                JSON.stringify(decodedRequest)
                              ).toString("base64");
                        generateChecksum(
                          encodedRequest,
                          path,
                          saltKey,
                          saltIndex
                        );
                        function generateChecksum(
                          encodedRequest,
                          path,
                          saltKey,
                          keyIndex
                        ) {
                          const checksum = cjs
                            .SHA256(encodedRequest + path + saltKey)
                            .toString(cjs.enc.Hex);
                          // console.log("base64 request:", encodedRequest, "Api checksum: ", checksum);
                          xVerify = checksum + "###" + keyIndex;
                        }
                        if (encodedRequest === "") body1 = "";
                        else
                          body1 = JSON.stringify({ request: encodedRequest });
                        options2 = {
                          method: "POST",
                          url: "https://mercury-uat.phonepe.com/v3/credit/backToSource",
                          headers: {
                            "Content-Type": "application/json",
                            "X-VERIFY": xVerify,
                          },
                          body: body1,
                        };
                        console.log(" Level 2: Request data:"); //comment
                        console.log(options2); //comment
                        ////////////////////////////////////////////////////////////////////////////////////////////////time out//////////////////////////////////////////////////////////////////////////////////////////////////
                        setTimeout(function () {
                          request(
                            options2,
                            async function (error, response, body) {
                              if (error) {
                                /////////need to handle here if error comes///////
                                console.log(error);
                              } else {
                                var data = JSON.parse(body);
                                console.log("Level 2A :Response Body:"); //comment
                                //console.log(data);
                                console.log(
                                  "Level 2A :REFUND API RESPONSE: " +
                                    data.success
                                );
                                console.log(data.code);
                                switch (data.code) {
                                  case "PAYMENT_SUCCESS":
                                    console.log(
                                      "Level 2A :Refund Process Completed..."
                                    );
                                    console.log(rid2);
                                    const srfd = await storeRefund(data, rid2);
                                    console.log(
                                      "Flow end with REFUND SUCCESSFULLY PAYMENT_SUCCESS : 2 "
                                    );
                                    break;

                                  case "PAYMENT_ERROR":
                                    console.log(rid2);
                                    frfd = await storeRefund(data, rid2);
                                    console.log(
                                      "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                    );

                                    //console.log(svtr);
                                    /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:REFUND 3      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                    console.log("BLOCK:REFUND 3");
                                    const rid3 = await createRefund(svtr.id);
                                    console.log(
                                      "Level 2A: NEW REFUND ID GENERATED.."
                                    ); /////////////////////////////////////
                                    console.log(rid3);
                                    //when request complete then add here code for call refund api again and handle errors and pending process
                                    //when request complete then add here code for call refund api again and handle errors and pending process
                                    console.log("Level 2: Calling Refund API");
                                    const url = "mercury-uat.phonepe.com";
                                    const path = "/v3/credit/backToSource";
                                    saltKey =
                                      "0afb5aa4-2206-4ea0-b081-fb94270b8c96";
                                    saltIndex = 1;
                                    const decodedRequest = {
                                      merchantId: merchantId,
                                      transactionId: rid3,
                                      providerReferenceId:
                                        svtr.providerReferenceId,
                                      amount: rfAmount,
                                      message: "Incorrect Amount",
                                    };
                                    // console.log(decodedRequest);
                                    let encodedRequest =
                                      decodedRequest === ""
                                        ? ""
                                        : Buffer.from(
                                            JSON.stringify(decodedRequest)
                                          ).toString("base64");
                                    generateChecksum(
                                      encodedRequest,
                                      path,
                                      saltKey,
                                      saltIndex
                                    );
                                    function generateChecksum(
                                      encodedRequest,
                                      path,
                                      saltKey,
                                      keyIndex
                                    ) {
                                      const checksum = cjs
                                        .SHA256(encodedRequest + path + saltKey)
                                        .toString(cjs.enc.Hex);
                                      // console.log("base64 request:", encodedRequest, "Api checksum: ", checksum);
                                      xVerify = checksum + "###" + keyIndex;
                                    }
                                    if (encodedRequest === "") body1 = "";
                                    else
                                      body1 = JSON.stringify({
                                        request: encodedRequest,
                                      });
                                    options2 = {
                                      method: "POST",
                                      url: "https://mercury-uat.phonepe.com/v3/credit/backToSource",
                                      headers: {
                                        "Content-Type": "application/json",
                                        "X-VERIFY": xVerify,
                                      },
                                      body: body1,
                                    };
                                    console.log(" Level 2: Request data:"); //comment
                                    console.log(options2); //comment
                                    ////////////////////////////////////////////////////////////////////////////////////////////////time out//////////////////////////////////////////////////////////////////////////////////////////////////
                                    setTimeout(function () {
                                      request(
                                        options2,
                                        async function (error, response, body) {
                                          if (error) {
                                            /////////need to handle here if error comes///////
                                            console.log(error);
                                          } else {
                                            var data = JSON.parse(body);
                                            console.log(
                                              "Level 2A :Response Body:"
                                            ); //comment
                                            //console.log(data);
                                            console.log(
                                              "Level 2A :REFUND API RESPONSE: " +
                                                data.success
                                            );
                                            console.log(data.code);
                                            switch (data.code) {
                                              case "PAYMENT_SUCCESS":
                                                console.log(
                                                  "Level 2A :Refund Process Completed..."
                                                );
                                                console.log(rid3);
                                                const srfd = await storeRefund(
                                                  data,
                                                  rid3
                                                );
                                                console.log(
                                                  "Flow end with REFUND SUCCESSFULLY PAYMENT_SUCCESS : 2 "
                                                );
                                                break;

                                              case "PAYMENT_ERROR":
                                                console.log(rid3);
                                                frfd = await storeRefund(
                                                  data,
                                                  rid3
                                                );
                                                console.log(
                                                  "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                );
                                                /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                console.log(
                                                  "BLOCK:PAYMENT_ERROR :END  1 "
                                                );
                                                //    //console.log(svtr);
                                                //    const rid3 = await createRefund(svtr.id);
                                                //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                //    console.log(rid3);
                                                //when request complete then add here code for call refund api again and handle errors and pending process
                                                break;
                                              case "INTERNAL_SERVER_ERROR":
                                              case "TIMED_OUT":
                                              case "PAYMENT_PENDING":
                                                // case 'PAYMENT_ERROR'://need to remove
                                                console.log(
                                                  "Check Status API calling...."
                                                );
                                                console.log(
                                                  "Level 2A : Refund Process status : " +
                                                    data.code
                                                );
                                                const prfd = await storeRefund(
                                                  data,
                                                  rid3
                                                );
                                                /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:Check_Status 3A      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                console.log(
                                                  "BLOCK:Check_Status 3A"
                                                );
                                                //console.log(prfd);
                                                //console.log(svtr.id);
                                                const checksum = cjs
                                                  .SHA256(
                                                    "/v3/transaction/" +
                                                      merchantId +
                                                      "/" +
                                                      rid3 +
                                                      "/status" +
                                                      saltKey
                                                  )
                                                  .toString(cjs.enc.Hex);
                                                //console.log("Api checksum: ", checksum);
                                                xVerify =
                                                  checksum + "###" + saltIndex;
                                                //console.log(xVerify);
                                                options = {
                                                  method: "GET",
                                                  url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                                  headers: {
                                                    "Content-Type":
                                                      "application/json",
                                                    "X-VERIFY": xVerify,
                                                  },
                                                };
                                                console.log(
                                                  "Level 2A : Request data:"
                                                ); //comment
                                                console.log(options); //comment
                                                ///////////////////////////////////////////////////////////////time out/////////////////////////////////////////////////////
                                                setTimeout(function () {
                                                  request(
                                                    options,
                                                    async function (
                                                      error,
                                                      response,
                                                      body
                                                    ) {
                                                      if (error) {
                                                        /////////need to handle here if error comes///////
                                                        console.log(error);
                                                      } else {
                                                        var data =
                                                          JSON.parse(body);
                                                        console.log(
                                                          " Level 2B :Check Status Response Body:"
                                                        ); //comment
                                                        //console.log(data);
                                                        console.log(
                                                          "Level 2B : Check Status API RESPONSE: " +
                                                            data.success
                                                        );
                                                        console.log(data.code);
                                                        switch (data.code) {
                                                          case "PAYMENT_SUCCESS":
                                                            console.log(
                                                              "Level 2B : Check Status Process Completed..."
                                                            );
                                                            console.log(rid3);
                                                            const srfd =
                                                              await storeRefund(
                                                                data,
                                                                rid3
                                                              );
                                                            console.log(
                                                              "Flow end with CHECK STATUS PAYMENT_SUCCESS : 3 "
                                                            );
                                                            break;

                                                          case "PAYMENT_ERROR":
                                                            console.log(rid3);
                                                            frfd =
                                                              await storeRefund(
                                                                data,
                                                                rid3
                                                              );
                                                            console.log(
                                                              "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                            );
                                                            /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3A:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                            console.log(
                                                              "BLOCK:PAYMENT_ERROR :END  3A:1 "
                                                            );
                                                            //    //console.log(svtr);
                                                            //    const rid4 = await createRefund(svtr.id);
                                                            //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                            //    console.log(rid4);
                                                            //when request complete then add here code for call refund api again and handle errors and pending process
                                                            break;

                                                          case "INTERNAL_SERVER_ERROR":
                                                          case "TIMED_OUT":
                                                          case "PAYMENT_PENDING":
                                                            /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@        BLOCK:Check_Status 3B     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                            console.log(
                                                              "BLOCK:Check_Status 3B "
                                                            );
                                                            console.log(
                                                              "Level 2B : Refund Process status : " +
                                                                data.code
                                                            );
                                                            // console.log(data.data.transactionId);
                                                            // console.log(data.data.providerReferenceId);
                                                            const prfd =
                                                              await storeRefund(
                                                                data,
                                                                rid3
                                                              );
                                                            //console.log(prfd);
                                                            // console.log(svtr.id);
                                                            const checksum = cjs
                                                              .SHA256(
                                                                "/v3/transaction/" +
                                                                  merchantId +
                                                                  "/" +
                                                                  rid3 +
                                                                  "/status" +
                                                                  saltKey
                                                              )
                                                              .toString(
                                                                cjs.enc.Hex
                                                              );
                                                            //console.log("Api checksum: ", checksum);
                                                            xVerify =
                                                              checksum +
                                                              "###" +
                                                              saltIndex;
                                                            //console.log(xVerify);
                                                            const options = {
                                                              method: "GET",
                                                              url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                                              headers: {
                                                                "Content-Type":
                                                                  "application/json",
                                                                "X-VERIFY":
                                                                  xVerify,
                                                              },
                                                            };
                                                            console.log(
                                                              " Level 2C :Request data:"
                                                            ); //comment
                                                            console.log(
                                                              options
                                                            ); //comment
                                                            /////////////////////////////////////////////time out///////////////////////////////////////////////////////////////////
                                                            setTimeout(
                                                              function () {
                                                                request(
                                                                  options,
                                                                  async function (
                                                                    error,
                                                                    response,
                                                                    body
                                                                  ) {
                                                                    if (error) {
                                                                      /////////need to handle here if error comes///////
                                                                      console.log(
                                                                        error
                                                                      );
                                                                    } else {
                                                                      var data =
                                                                        JSON.parse(
                                                                          body
                                                                        );
                                                                      console.log(
                                                                        " Level 2C :Check Status Response Body:"
                                                                      ); //comment
                                                                      // console.log(data.data.transactionId);
                                                                      // console.log(data.data.providerReferenceId);
                                                                      console.log(
                                                                        "Level 2C :Check Status  API RESPONSE: " +
                                                                          data.success
                                                                      );
                                                                      console.log(
                                                                        data.code
                                                                      );
                                                                      switch (
                                                                        data.code
                                                                      ) {
                                                                        case "PAYMENT_SUCCESS":
                                                                          console.log(
                                                                            "Level 2C : Refund Process Completed..."
                                                                          );
                                                                          console.log(
                                                                            rid2
                                                                          );
                                                                          const srfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          console.log(
                                                                            "Flow end with CHECK_STATUS SUCCESSFULLY PAYMENT_SUCCESS : 4 "
                                                                          );
                                                                          break;
                                                                        case "PAYMENT_ERROR":
                                                                          console.log(
                                                                            rid3
                                                                          );
                                                                          frfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          console.log(
                                                                            "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                          );
                                                                          /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3B:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                          console.log(
                                                                            "BLOCK:PAYMENT_ERROR :END  3c:1 "
                                                                          );
                                                                          //    //console.log(svtr);
                                                                          //    const rid3 = await createRefund(svtr.id);
                                                                          //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                                          //    console.log(rid3);
                                                                          //when request complete then add here code for call refund api again and handle errors and pending process
                                                                          break;

                                                                        case "INTERNAL_SERVER_ERROR":
                                                                        case "TIMED_OUT":
                                                                        case "PAYMENT_PENDING":
                                                                          /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@        BLOCK:Check_Status 3C     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                          console.log(
                                                                            "BLOCK:Check_Status 3C "
                                                                          );
                                                                          console.log(
                                                                            "Level 2B : Refund Process status : " +
                                                                              data.code
                                                                          );
                                                                          // console.log(data.data.transactionId);
                                                                          // console.log(data.data.providerReferenceId);
                                                                          const prfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          //console.log(prfd);
                                                                          // console.log(svtr.id);
                                                                          const checksum =
                                                                            cjs
                                                                              .SHA256(
                                                                                "/v3/transaction/" +
                                                                                  merchantId +
                                                                                  "/" +
                                                                                  rid3 +
                                                                                  "/status" +
                                                                                  saltKey
                                                                              )
                                                                              .toString(
                                                                                cjs
                                                                                  .enc
                                                                                  .Hex
                                                                              );
                                                                          //console.log("Api checksum: ", checksum);
                                                                          xVerify =
                                                                            checksum +
                                                                            "###" +
                                                                            saltIndex;
                                                                          //console.log(xVerify);
                                                                          const options =
                                                                            {
                                                                              method:
                                                                                "GET",
                                                                              url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                                                              headers:
                                                                                {
                                                                                  "Content-Type":
                                                                                    "application/json",
                                                                                  "X-VERIFY":
                                                                                    xVerify,
                                                                                },
                                                                            };
                                                                          console.log(
                                                                            " Level 2C :Request data:"
                                                                          ); //comment
                                                                          console.log(
                                                                            options
                                                                          ); //comment
                                                                          /////////////////////////////////////////////time out///////////////////////////////////////////////////////////////////
                                                                          setTimeout(
                                                                            function () {
                                                                              request(
                                                                                options,
                                                                                async function (
                                                                                  error,
                                                                                  response,
                                                                                  body
                                                                                ) {
                                                                                  if (
                                                                                    error
                                                                                  ) {
                                                                                    /////////need to handle here if error comes///////
                                                                                    console.log(
                                                                                      error
                                                                                    );
                                                                                  } else {
                                                                                    var data =
                                                                                      JSON.parse(
                                                                                        body
                                                                                      );
                                                                                    console.log(
                                                                                      " Level 2C :Check Status Response Body:"
                                                                                    ); //comment
                                                                                    // console.log(data.data.transactionId);
                                                                                    // console.log(data.data.providerReferenceId);
                                                                                    console.log(
                                                                                      "Level 2C :Check Status  API RESPONSE: " +
                                                                                        data.success
                                                                                    );
                                                                                    console.log(
                                                                                      data.code
                                                                                    );
                                                                                    switch (
                                                                                      data.code
                                                                                    ) {
                                                                                      case "PAYMENT_SUCCESS":
                                                                                        console.log(
                                                                                          "Level 2C : Refund Process Completed..."
                                                                                        );
                                                                                        console.log(
                                                                                          rid2
                                                                                        );
                                                                                        const srfd =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        console.log(
                                                                                          "Flow end with CHECK_STATUS SUCCESSFULLY PAYMENT_SUCCESS : 4 "
                                                                                        );
                                                                                        break;
                                                                                      case "PAYMENT_ERROR":
                                                                                        console.log(
                                                                                          rid3
                                                                                        );
                                                                                        frfd =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        console.log(
                                                                                          "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                                        );
                                                                                        /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3C:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                        console.log(
                                                                                          "BLOCK:PAYMENT_ERROR :END  3c:1 "
                                                                                        );
                                                                                        //    //console.log(svtr);
                                                                                        //    const rid3 = await createRefund(svtr.id);
                                                                                        //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                                                        //    console.log(rid3);
                                                                                        //when request complete then add here code for call refund api again and handle errors and pending process
                                                                                        break;

                                                                                      case "INTERNAL_SERVER_ERROR":
                                                                                      case "TIMED_OUT":
                                                                                      case "PAYMENT_PENDING":
                                                                                        /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:INTERNAL_SERVER_ERROR :END  3C:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                        console.log(
                                                                                          rid2
                                                                                        );
                                                                                        frfd =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        console.log(
                                                                                          frfd
                                                                                        );
                                                                                        console.log(
                                                                                          "FINAL Flow end with CHECK_STATUS FAILED PAYMENT_ERROR,INTERNAL_SERVER_ERROR,TIMED_OUT,PAYMENT_PENDING : 3 "
                                                                                        );
                                                                                        //when request complete then add here code for call refund api again and handle errors and pending process
                                                                                        break;
                                                                                      default:
                                                                                        console.log(
                                                                                          rid3
                                                                                        );
                                                                                        frfd3 =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        console.log(
                                                                                          frfd3
                                                                                        );
                                                                                        console.log(
                                                                                          "Flow end with DEFAULT SWITCH CASE : 1 "
                                                                                        );
                                                                                    }
                                                                                  }
                                                                                }
                                                                              );
                                                                            },
                                                                            delayTime
                                                                          );
                                                                          break;
                                                                        default:
                                                                          console.log(
                                                                            rid3
                                                                          );
                                                                          frfd3 =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          console.log(
                                                                            frfd3
                                                                          );
                                                                          console.log(
                                                                            "Flow end with DEFAULT SWITCH CASE : 1 "
                                                                          );
                                                                      }
                                                                    }
                                                                  }
                                                                );
                                                              },
                                                              delayTime
                                                            );
                                                            break;
                                                          default:
                                                            console.log(rid3);
                                                            frfd3 =
                                                              await storeRefund(
                                                                data,
                                                                rid3
                                                              );
                                                            console.log(frfd3);
                                                            console.log(
                                                              "Flow end with DEFAULT SWITCH CASE : 2 "
                                                            );
                                                        }
                                                      }
                                                    }
                                                  );
                                                }, delayTime);
                                                break;
                                              default:
                                                console.log(rid3);
                                                frfd3 = await storeRefund(
                                                  data,
                                                  rid3
                                                );
                                                console.log(frfd3);
                                                console.log(
                                                  "Flow end with DEFAULT SWITCH CASE : 3 "
                                                );
                                            }
                                          }
                                        }
                                      );
                                    }, delayTime);
                                    break;

                                  case "INTERNAL_SERVER_ERROR":
                                  case "TIMED_OUT":
                                  case "PAYMENT_PENDING":
                                    // case 'PAYMENT_ERROR'://need to remove
                                    console.log("Check Status API calling....");
                                    console.log(
                                      "Level 2A : Refund Process status : " +
                                        data.code
                                    );
                                    const prfd = await storeRefund(data, rid2);
                                    //console.log(prfd);
                                    //console.log(svtr.id);
                                    const checksum = cjs
                                      .SHA256(
                                        "/v3/transaction/" +
                                          merchantId +
                                          "/" +
                                          rid2 +
                                          "/status" +
                                          saltKey
                                      )
                                      .toString(cjs.enc.Hex);
                                    //console.log("Api checksum: ", checksum);
                                    xVerify = checksum + "###" + saltIndex;
                                    //console.log(xVerify);
                                    options = {
                                      method: "GET",
                                      url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid2}/status`,
                                      headers: {
                                        "Content-Type": "application/json",
                                        "X-VERIFY": xVerify,
                                      },
                                    };
                                    console.log("Level 2A : Request data:"); //comment
                                    console.log(options); //comment
                                    ///////////////////////////////////////////////////////////////time out/////////////////////////////////////////////////////
                                    setTimeout(function () {
                                      request(
                                        options,
                                        async function (error, response, body) {
                                          if (error) {
                                            /////////need to handle here if error comes///////
                                            console.log(error);
                                          } else {
                                            var data = JSON.parse(body);
                                            console.log(
                                              " Level 2B :Check Status Response Body:"
                                            ); //comment
                                            //console.log(data);
                                            console.log(
                                              "Level 2B : Check Status API RESPONSE: " +
                                                data.success
                                            );
                                            console.log(data.code);
                                            switch (data.code) {
                                              case "PAYMENT_SUCCESS":
                                                console.log(
                                                  "Level 2B : Check Status Process Completed..."
                                                );
                                                console.log(rid2);
                                                const srfd = await storeRefund(
                                                  data,
                                                  rid2
                                                );
                                                console.log(
                                                  "Flow end with CHECK STATUS PAYMENT_SUCCESS : 3 "
                                                );
                                                break;

                                              case "PAYMENT_ERROR":
                                                console.log(rid2);
                                                frfd = await storeRefund(
                                                  data,
                                                  rid2
                                                );
                                                console.log(
                                                  "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                );

                                                //console.log(svtr);
                                                /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:REFUND 3      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                console.log("BLOCK:REFUND 3");
                                                const rid3 = await createRefund(
                                                  svtr.id
                                                );
                                                console.log(
                                                  "Level 2A: NEW REFUND ID GENERATED.."
                                                ); /////////////////////////////////////
                                                console.log(rid3);
                                                //when request complete then add here code for call refund api again and handle errors and pending process
                                                //when request complete then add here code for call refund api again and handle errors and pending process
                                                console.log(
                                                  "Level 2: Calling Refund API"
                                                );
                                                const url =
                                                  "mercury-uat.phonepe.com";
                                                const path =
                                                  "/v3/credit/backToSource";
                                                saltKey =
                                                  "0afb5aa4-2206-4ea0-b081-fb94270b8c96";
                                                saltIndex = 1;
                                                const decodedRequest = {
                                                  merchantId: merchantId,
                                                  transactionId: rid3,
                                                  providerReferenceId:
                                                    svtr.providerReferenceId,
                                                  amount: rfAmount,
                                                  message: "Incorrect Amount",
                                                };
                                                // console.log(decodedRequest);
                                                let encodedRequest =
                                                  decodedRequest === ""
                                                    ? ""
                                                    : Buffer.from(
                                                        JSON.stringify(
                                                          decodedRequest
                                                        )
                                                      ).toString("base64");
                                                generateChecksum(
                                                  encodedRequest,
                                                  path,
                                                  saltKey,
                                                  saltIndex
                                                );
                                                function generateChecksum(
                                                  encodedRequest,
                                                  path,
                                                  saltKey,
                                                  keyIndex
                                                ) {
                                                  const checksum = cjs
                                                    .SHA256(
                                                      encodedRequest +
                                                        path +
                                                        saltKey
                                                    )
                                                    .toString(cjs.enc.Hex);
                                                  // console.log("base64 request:", encodedRequest, "Api checksum: ", checksum);
                                                  xVerify =
                                                    checksum + "###" + keyIndex;
                                                }
                                                if (encodedRequest === "")
                                                  body1 = "";
                                                else
                                                  body1 = JSON.stringify({
                                                    request: encodedRequest,
                                                  });
                                                options2 = {
                                                  method: "POST",
                                                  url: "https://mercury-uat.phonepe.com/v3/credit/backToSource",
                                                  headers: {
                                                    "Content-Type":
                                                      "application/json",
                                                    "X-VERIFY": xVerify,
                                                  },
                                                  body: body1,
                                                };
                                                console.log(
                                                  " Level 2: Request data:"
                                                ); //comment
                                                console.log(options2); //comment
                                                ////////////////////////////////////////////////////////////////////////////////////////////////time out//////////////////////////////////////////////////////////////////////////////////////////////////
                                                setTimeout(function () {
                                                  request(
                                                    options2,
                                                    async function (
                                                      error,
                                                      response,
                                                      body
                                                    ) {
                                                      if (error) {
                                                        /////////need to handle here if error comes///////
                                                        console.log(error);
                                                      } else {
                                                        var data =
                                                          JSON.parse(body);
                                                        console.log(
                                                          "Level 2A :Response Body:"
                                                        ); //comment
                                                        //console.log(data);
                                                        console.log(
                                                          "Level 2A :REFUND API RESPONSE: " +
                                                            data.success
                                                        );
                                                        console.log(data.code);
                                                        switch (data.code) {
                                                          case "PAYMENT_SUCCESS":
                                                            console.log(
                                                              "Level 2A :Refund Process Completed..."
                                                            );
                                                            console.log(rid3);
                                                            const srfd =
                                                              await storeRefund(
                                                                data,
                                                                rid3
                                                              );
                                                            console.log(
                                                              "Flow end with REFUND SUCCESSFULLY PAYMENT_SUCCESS : 2 "
                                                            );
                                                            break;

                                                          case "PAYMENT_ERROR":
                                                            console.log(rid3);
                                                            frfd =
                                                              await storeRefund(
                                                                data,
                                                                rid3
                                                              );
                                                            console.log(
                                                              "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                            );
                                                            /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                            console.log(
                                                              "BLOCK:PAYMENT_ERROR :END  1 "
                                                            );
                                                            //    //console.log(svtr);
                                                            //    const rid3 = await createRefund(svtr.id);
                                                            //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                            //    console.log(rid3);
                                                            //when request complete then add here code for call refund api again and handle errors and pending process
                                                            break;
                                                          case "INTERNAL_SERVER_ERROR":
                                                          case "TIMED_OUT":
                                                          case "PAYMENT_PENDING":
                                                            // case 'PAYMENT_ERROR'://need to remove
                                                            console.log(
                                                              "Check Status API calling...."
                                                            );
                                                            console.log(
                                                              "Level 2A : Refund Process status : " +
                                                                data.code
                                                            );
                                                            const prfd =
                                                              await storeRefund(
                                                                data,
                                                                rid3
                                                              );
                                                            /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:Check_Status 3A      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                            console.log(
                                                              "BLOCK:Check_Status 3A"
                                                            );
                                                            //console.log(prfd);
                                                            //console.log(svtr.id);
                                                            const checksum = cjs
                                                              .SHA256(
                                                                "/v3/transaction/" +
                                                                  merchantId +
                                                                  "/" +
                                                                  rid3 +
                                                                  "/status" +
                                                                  saltKey
                                                              )
                                                              .toString(
                                                                cjs.enc.Hex
                                                              );
                                                            //console.log("Api checksum: ", checksum);
                                                            xVerify =
                                                              checksum +
                                                              "###" +
                                                              saltIndex;
                                                            //console.log(xVerify);
                                                            options = {
                                                              method: "GET",
                                                              url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                                              headers: {
                                                                "Content-Type":
                                                                  "application/json",
                                                                "X-VERIFY":
                                                                  xVerify,
                                                              },
                                                            };
                                                            console.log(
                                                              "Level 2A : Request data:"
                                                            ); //comment
                                                            console.log(
                                                              options
                                                            ); //comment
                                                            ///////////////////////////////////////////////////////////////time out/////////////////////////////////////////////////////
                                                            setTimeout(
                                                              function () {
                                                                request(
                                                                  options,
                                                                  async function (
                                                                    error,
                                                                    response,
                                                                    body
                                                                  ) {
                                                                    if (error) {
                                                                      /////////need to handle here if error comes///////
                                                                      console.log(
                                                                        error
                                                                      );
                                                                    } else {
                                                                      var data =
                                                                        JSON.parse(
                                                                          body
                                                                        );
                                                                      console.log(
                                                                        " Level 2B :Check Status Response Body:"
                                                                      ); //comment
                                                                      //console.log(data);
                                                                      console.log(
                                                                        "Level 2B : Check Status API RESPONSE: " +
                                                                          data.success
                                                                      );
                                                                      console.log(
                                                                        data.code
                                                                      );
                                                                      switch (
                                                                        data.code
                                                                      ) {
                                                                        case "PAYMENT_SUCCESS":
                                                                          console.log(
                                                                            "Level 2B : Check Status Process Completed..."
                                                                          );
                                                                          console.log(
                                                                            rid3
                                                                          );
                                                                          const srfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          console.log(
                                                                            "Flow end with CHECK STATUS PAYMENT_SUCCESS : 3 "
                                                                          );
                                                                          break;

                                                                        case "PAYMENT_ERROR":
                                                                          console.log(
                                                                            rid3
                                                                          );
                                                                          frfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          console.log(
                                                                            "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                          );
                                                                          /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3A:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                          console.log(
                                                                            "BLOCK:PAYMENT_ERROR :END  3A:1 "
                                                                          );
                                                                          //    //console.log(svtr);
                                                                          //    const rid4 = await createRefund(svtr.id);
                                                                          //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                                          //    console.log(rid4);
                                                                          //when request complete then add here code for call refund api again and handle errors and pending process
                                                                          break;

                                                                        case "INTERNAL_SERVER_ERROR":
                                                                        case "TIMED_OUT":
                                                                        case "PAYMENT_PENDING":
                                                                          /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@        BLOCK:Check_Status 3B     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                          console.log(
                                                                            "BLOCK:Check_Status 3B "
                                                                          );
                                                                          console.log(
                                                                            "Level 2B : Refund Process status : " +
                                                                              data.code
                                                                          );
                                                                          // console.log(data.data.transactionId);
                                                                          // console.log(data.data.providerReferenceId);
                                                                          const prfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          //console.log(prfd);
                                                                          // console.log(svtr.id);
                                                                          const checksum =
                                                                            cjs
                                                                              .SHA256(
                                                                                "/v3/transaction/" +
                                                                                  merchantId +
                                                                                  "/" +
                                                                                  rid3 +
                                                                                  "/status" +
                                                                                  saltKey
                                                                              )
                                                                              .toString(
                                                                                cjs
                                                                                  .enc
                                                                                  .Hex
                                                                              );
                                                                          //console.log("Api checksum: ", checksum);
                                                                          xVerify =
                                                                            checksum +
                                                                            "###" +
                                                                            saltIndex;
                                                                          //console.log(xVerify);
                                                                          const options =
                                                                            {
                                                                              method:
                                                                                "GET",
                                                                              url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                                                              headers:
                                                                                {
                                                                                  "Content-Type":
                                                                                    "application/json",
                                                                                  "X-VERIFY":
                                                                                    xVerify,
                                                                                },
                                                                            };
                                                                          console.log(
                                                                            " Level 2C :Request data:"
                                                                          ); //comment
                                                                          console.log(
                                                                            options
                                                                          ); //comment
                                                                          /////////////////////////////////////////////time out///////////////////////////////////////////////////////////////////
                                                                          setTimeout(
                                                                            function () {
                                                                              request(
                                                                                options,
                                                                                async function (
                                                                                  error,
                                                                                  response,
                                                                                  body
                                                                                ) {
                                                                                  if (
                                                                                    error
                                                                                  ) {
                                                                                    /////////need to handle here if error comes///////
                                                                                    console.log(
                                                                                      error
                                                                                    );
                                                                                  } else {
                                                                                    var data =
                                                                                      JSON.parse(
                                                                                        body
                                                                                      );
                                                                                    console.log(
                                                                                      " Level 2C :Check Status Response Body:"
                                                                                    ); //comment
                                                                                    // console.log(data.data.transactionId);
                                                                                    // console.log(data.data.providerReferenceId);
                                                                                    console.log(
                                                                                      "Level 2C :Check Status  API RESPONSE: " +
                                                                                        data.success
                                                                                    );
                                                                                    console.log(
                                                                                      data.code
                                                                                    );
                                                                                    switch (
                                                                                      data.code
                                                                                    ) {
                                                                                      case "PAYMENT_SUCCESS":
                                                                                        console.log(
                                                                                          "Level 2C : Refund Process Completed..."
                                                                                        );
                                                                                        console.log(
                                                                                          rid2
                                                                                        );
                                                                                        const srfd =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        console.log(
                                                                                          "Flow end with CHECK_STATUS SUCCESSFULLY PAYMENT_SUCCESS : 4 "
                                                                                        );
                                                                                        break;
                                                                                      case "PAYMENT_ERROR":
                                                                                        console.log(
                                                                                          rid3
                                                                                        );
                                                                                        frfd =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        console.log(
                                                                                          "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                                        );
                                                                                        /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3B:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                        console.log(
                                                                                          "BLOCK:PAYMENT_ERROR :END  3c:1 "
                                                                                        );
                                                                                        //    //console.log(svtr);
                                                                                        //    const rid3 = await createRefund(svtr.id);
                                                                                        //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                                                        //    console.log(rid3);
                                                                                        //when request complete then add here code for call refund api again and handle errors and pending process
                                                                                        break;

                                                                                      case "INTERNAL_SERVER_ERROR":
                                                                                      case "TIMED_OUT":
                                                                                      case "PAYMENT_PENDING":
                                                                                        /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@        BLOCK:Check_Status 3C     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                        console.log(
                                                                                          "BLOCK:Check_Status 3C "
                                                                                        );
                                                                                        console.log(
                                                                                          "Level 2B : Refund Process status : " +
                                                                                            data.code
                                                                                        );
                                                                                        // console.log(data.data.transactionId);
                                                                                        // console.log(data.data.providerReferenceId);
                                                                                        const prfd =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        //console.log(prfd);
                                                                                        // console.log(svtr.id);
                                                                                        const checksum =
                                                                                          cjs
                                                                                            .SHA256(
                                                                                              "/v3/transaction/" +
                                                                                                merchantId +
                                                                                                "/" +
                                                                                                rid3 +
                                                                                                "/status" +
                                                                                                saltKey
                                                                                            )
                                                                                            .toString(
                                                                                              cjs
                                                                                                .enc
                                                                                                .Hex
                                                                                            );
                                                                                        //console.log("Api checksum: ", checksum);
                                                                                        xVerify =
                                                                                          checksum +
                                                                                          "###" +
                                                                                          saltIndex;
                                                                                        //console.log(xVerify);
                                                                                        const options =
                                                                                          {
                                                                                            method:
                                                                                              "GET",
                                                                                            url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                                                                            headers:
                                                                                              {
                                                                                                "Content-Type":
                                                                                                  "application/json",
                                                                                                "X-VERIFY":
                                                                                                  xVerify,
                                                                                              },
                                                                                          };
                                                                                        console.log(
                                                                                          " Level 2C :Request data:"
                                                                                        ); //comment
                                                                                        console.log(
                                                                                          options
                                                                                        ); //comment
                                                                                        /////////////////////////////////////////////time out///////////////////////////////////////////////////////////////////
                                                                                        setTimeout(
                                                                                          function () {
                                                                                            request(
                                                                                              options,
                                                                                              async function (
                                                                                                error,
                                                                                                response,
                                                                                                body
                                                                                              ) {
                                                                                                if (
                                                                                                  error
                                                                                                ) {
                                                                                                  /////////need to handle here if error comes///////
                                                                                                  console.log(
                                                                                                    error
                                                                                                  );
                                                                                                } else {
                                                                                                  var data =
                                                                                                    JSON.parse(
                                                                                                      body
                                                                                                    );
                                                                                                  console.log(
                                                                                                    " Level 2C :Check Status Response Body:"
                                                                                                  ); //comment
                                                                                                  // console.log(data.data.transactionId);
                                                                                                  // console.log(data.data.providerReferenceId);
                                                                                                  console.log(
                                                                                                    "Level 2C :Check Status  API RESPONSE: " +
                                                                                                      data.success
                                                                                                  );
                                                                                                  console.log(
                                                                                                    data.code
                                                                                                  );
                                                                                                  switch (
                                                                                                    data.code
                                                                                                  ) {
                                                                                                    case "PAYMENT_SUCCESS":
                                                                                                      console.log(
                                                                                                        "Level 2C : Refund Process Completed..."
                                                                                                      );
                                                                                                      console.log(
                                                                                                        rid2
                                                                                                      );
                                                                                                      const srfd =
                                                                                                        await storeRefund(
                                                                                                          data,
                                                                                                          rid3
                                                                                                        );
                                                                                                      console.log(
                                                                                                        "Flow end with CHECK_STATUS SUCCESSFULLY PAYMENT_SUCCESS : 4 "
                                                                                                      );
                                                                                                      break;
                                                                                                    case "PAYMENT_ERROR":
                                                                                                      console.log(
                                                                                                        rid3
                                                                                                      );
                                                                                                      frfd =
                                                                                                        await storeRefund(
                                                                                                          data,
                                                                                                          rid3
                                                                                                        );
                                                                                                      console.log(
                                                                                                        "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                                                      );
                                                                                                      /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3C:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                                      console.log(
                                                                                                        "BLOCK:PAYMENT_ERROR :END  3c:1 "
                                                                                                      );
                                                                                                      //    //console.log(svtr);
                                                                                                      //    const rid3 = await createRefund(svtr.id);
                                                                                                      //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                                                                      //    console.log(rid3);
                                                                                                      //when request complete then add here code for call refund api again and handle errors and pending process
                                                                                                      break;

                                                                                                    case "INTERNAL_SERVER_ERROR":
                                                                                                    case "TIMED_OUT":
                                                                                                    case "PAYMENT_PENDING":
                                                                                                      /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:INTERNAL_SERVER_ERROR :END  3C:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                                      console.log(
                                                                                                        rid2
                                                                                                      );
                                                                                                      frfd =
                                                                                                        await storeRefund(
                                                                                                          data,
                                                                                                          rid3
                                                                                                        );
                                                                                                      console.log(
                                                                                                        frfd
                                                                                                      );
                                                                                                      console.log(
                                                                                                        "FINAL Flow end with CHECK_STATUS FAILED PAYMENT_ERROR,INTERNAL_SERVER_ERROR,TIMED_OUT,PAYMENT_PENDING : 3 "
                                                                                                      );
                                                                                                      //when request complete then add here code for call refund api again and handle errors and pending process
                                                                                                      break;
                                                                                                    default:
                                                                                                      console.log(
                                                                                                        rid3
                                                                                                      );
                                                                                                      frfd3 =
                                                                                                        await storeRefund(
                                                                                                          data,
                                                                                                          rid3
                                                                                                        );
                                                                                                      console.log(
                                                                                                        frfd3
                                                                                                      );
                                                                                                      console.log(
                                                                                                        "Flow end with DEFAULT SWITCH CASE : 1 "
                                                                                                      );
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            );
                                                                                          },
                                                                                          delayTime
                                                                                        );
                                                                                        break;
                                                                                      default:
                                                                                        console.log(
                                                                                          rid3
                                                                                        );
                                                                                        frfd3 =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        console.log(
                                                                                          frfd3
                                                                                        );
                                                                                        console.log(
                                                                                          "Flow end with DEFAULT SWITCH CASE : 1 "
                                                                                        );
                                                                                    }
                                                                                  }
                                                                                }
                                                                              );
                                                                            },
                                                                            delayTime
                                                                          );
                                                                          break;
                                                                        default:
                                                                          console.log(
                                                                            rid3
                                                                          );
                                                                          frfd3 =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          console.log(
                                                                            frfd3
                                                                          );
                                                                          console.log(
                                                                            "Flow end with DEFAULT SWITCH CASE : 2 "
                                                                          );
                                                                      }
                                                                    }
                                                                  }
                                                                );
                                                              },
                                                              delayTime
                                                            );
                                                            break;
                                                          default:
                                                            console.log(rid3);
                                                            frfd3 =
                                                              await storeRefund(
                                                                data,
                                                                rid3
                                                              );
                                                            console.log(frfd3);
                                                            console.log(
                                                              "Flow end with DEFAULT SWITCH CASE : 3 "
                                                            );
                                                        }
                                                      }
                                                    }
                                                  );
                                                }, delayTime);
                                                break;

                                              case "INTERNAL_SERVER_ERROR":
                                              case "TIMED_OUT":
                                              case "PAYMENT_PENDING":
                                                console.log(
                                                  "Level 2B : Refund Process status : " +
                                                    data.code
                                                );
                                                // console.log(data.data.transactionId);
                                                // console.log(data.data.providerReferenceId);
                                                const prfd = await storeRefund(
                                                  data,
                                                  rid2
                                                );
                                                //console.log(prfd);
                                                // console.log(svtr.id);
                                                const checksum = cjs
                                                  .SHA256(
                                                    "/v3/transaction/" +
                                                      merchantId +
                                                      "/" +
                                                      rid2 +
                                                      "/status" +
                                                      saltKey
                                                  )
                                                  .toString(cjs.enc.Hex);
                                                //console.log("Api checksum: ", checksum);
                                                xVerify =
                                                  checksum + "###" + saltIndex;
                                                //console.log(xVerify);
                                                const options = {
                                                  method: "GET",
                                                  url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid2}/status`,
                                                  headers: {
                                                    "Content-Type":
                                                      "application/json",
                                                    "X-VERIFY": xVerify,
                                                  },
                                                };
                                                console.log(
                                                  " Level 2C :Request data:"
                                                ); //comment
                                                console.log(options); //comment
                                                /////////////////////////////////////////////time out///////////////////////////////////////////////////////////////////
                                                setTimeout(function () {
                                                  request(
                                                    options,
                                                    async function (
                                                      error,
                                                      response,
                                                      body
                                                    ) {
                                                      if (error) {
                                                        /////////need to handle here if error comes///////
                                                        console.log(error);
                                                      } else {
                                                        var data =
                                                          JSON.parse(body);
                                                        console.log(
                                                          " Level 2C :Check Status Response Body:"
                                                        ); //comment
                                                        // console.log(data.data.transactionId);
                                                        // console.log(data.data.providerReferenceId);
                                                        console.log(
                                                          "Level 2C :Check Status  API RESPONSE: " +
                                                            data.success
                                                        );
                                                        console.log(data.code);
                                                        switch (data.code) {
                                                          case "PAYMENT_SUCCESS":
                                                            console.log(
                                                              "Level 2C : Refund Process Completed..."
                                                            );
                                                            console.log(rid2);
                                                            const srfd =
                                                              await storeRefund(
                                                                data,
                                                                rid2
                                                              );
                                                            console.log(
                                                              "Flow end with CHECK_STATUS SUCCESSFULLY PAYMENT_SUCCESS : 4 "
                                                            );
                                                            break;
                                                          case "PAYMENT_ERROR":
                                                            console.log(rid2);
                                                            frfd =
                                                              await storeRefund(
                                                                data,
                                                                rid2
                                                              );
                                                            console.log(
                                                              "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                            );

                                                            //console.log(svtr);
                                                            /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:REFUND 3      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                            console.log(
                                                              "BLOCK:REFUND 3"
                                                            );
                                                            const rid3 =
                                                              await createRefund(
                                                                svtr.id
                                                              );
                                                            console.log(
                                                              "Level 2A: NEW REFUND ID GENERATED.."
                                                            ); /////////////////////////////////////
                                                            console.log(rid3);
                                                            //when request complete then add here code for call refund api again and handle errors and pending process
                                                            //when request complete then add here code for call refund api again and handle errors and pending process
                                                            console.log(
                                                              "Level 2: Calling Refund API"
                                                            );
                                                            const url =
                                                              "mercury-uat.phonepe.com";
                                                            const path =
                                                              "/v3/credit/backToSource";
                                                            saltKey =
                                                              "0afb5aa4-2206-4ea0-b081-fb94270b8c96";
                                                            saltIndex = 1;
                                                            const decodedRequest =
                                                              {
                                                                merchantId:
                                                                  merchantId,
                                                                transactionId:
                                                                  rid3,
                                                                providerReferenceId:
                                                                  svtr.providerReferenceId,
                                                                amount:
                                                                  rfAmount,
                                                                message:
                                                                  "Incorrect Amount",
                                                              };
                                                            // console.log(decodedRequest);
                                                            let encodedRequest =
                                                              decodedRequest ===
                                                              ""
                                                                ? ""
                                                                : Buffer.from(
                                                                    JSON.stringify(
                                                                      decodedRequest
                                                                    )
                                                                  ).toString(
                                                                    "base64"
                                                                  );
                                                            generateChecksum(
                                                              encodedRequest,
                                                              path,
                                                              saltKey,
                                                              saltIndex
                                                            );
                                                            function generateChecksum(
                                                              encodedRequest,
                                                              path,
                                                              saltKey,
                                                              keyIndex
                                                            ) {
                                                              const checksum =
                                                                cjs
                                                                  .SHA256(
                                                                    encodedRequest +
                                                                      path +
                                                                      saltKey
                                                                  )
                                                                  .toString(
                                                                    cjs.enc.Hex
                                                                  );
                                                              // console.log("base64 request:", encodedRequest, "Api checksum: ", checksum);
                                                              xVerify =
                                                                checksum +
                                                                "###" +
                                                                keyIndex;
                                                            }
                                                            if (
                                                              encodedRequest ===
                                                              ""
                                                            )
                                                              body1 = "";
                                                            else
                                                              body1 =
                                                                JSON.stringify({
                                                                  request:
                                                                    encodedRequest,
                                                                });
                                                            options2 = {
                                                              method: "POST",
                                                              url: "https://mercury-uat.phonepe.com/v3/credit/backToSource",
                                                              headers: {
                                                                "Content-Type":
                                                                  "application/json",
                                                                "X-VERIFY":
                                                                  xVerify,
                                                              },
                                                              body: body1,
                                                            };
                                                            console.log(
                                                              " Level 2: Request data:"
                                                            ); //comment
                                                            console.log(
                                                              options2
                                                            ); //comment
                                                            ////////////////////////////////////////////////////////////////////////////////////////////////time out//////////////////////////////////////////////////////////////////////////////////////////////////
                                                            setTimeout(
                                                              function () {
                                                                request(
                                                                  options2,
                                                                  async function (
                                                                    error,
                                                                    response,
                                                                    body
                                                                  ) {
                                                                    if (error) {
                                                                      /////////need to handle here if error comes///////
                                                                      console.log(
                                                                        error
                                                                      );
                                                                    } else {
                                                                      var data =
                                                                        JSON.parse(
                                                                          body
                                                                        );
                                                                      console.log(
                                                                        "Level 2A :Response Body:"
                                                                      ); //comment
                                                                      //console.log(data);
                                                                      console.log(
                                                                        "Level 2A :REFUND API RESPONSE: " +
                                                                          data.success
                                                                      );
                                                                      console.log(
                                                                        data.code
                                                                      );
                                                                      switch (
                                                                        data.code
                                                                      ) {
                                                                        case "PAYMENT_SUCCESS":
                                                                          console.log(
                                                                            "Level 2A :Refund Process Completed..."
                                                                          );
                                                                          console.log(
                                                                            rid3
                                                                          );
                                                                          const srfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          console.log(
                                                                            "Flow end with REFUND SUCCESSFULLY PAYMENT_SUCCESS : 2 "
                                                                          );
                                                                          break;

                                                                        case "PAYMENT_ERROR":
                                                                          console.log(
                                                                            rid3
                                                                          );
                                                                          frfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          console.log(
                                                                            "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                          );
                                                                          /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                          console.log(
                                                                            "BLOCK:PAYMENT_ERROR :END  1 "
                                                                          );
                                                                          //    //console.log(svtr);
                                                                          //    const rid3 = await createRefund(svtr.id);
                                                                          //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                                          //    console.log(rid3);
                                                                          //when request complete then add here code for call refund api again and handle errors and pending process
                                                                          break;
                                                                        case "INTERNAL_SERVER_ERROR":
                                                                        case "TIMED_OUT":
                                                                        case "PAYMENT_PENDING":
                                                                          // case 'PAYMENT_ERROR'://need to remove
                                                                          console.log(
                                                                            "Check Status API calling...."
                                                                          );
                                                                          console.log(
                                                                            "Level 2A : Refund Process status : " +
                                                                              data.code
                                                                          );
                                                                          const prfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:Check_Status 3A      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                          console.log(
                                                                            "BLOCK:Check_Status 3A"
                                                                          );
                                                                          //console.log(prfd);
                                                                          //console.log(svtr.id);
                                                                          const checksum =
                                                                            cjs
                                                                              .SHA256(
                                                                                "/v3/transaction/" +
                                                                                  merchantId +
                                                                                  "/" +
                                                                                  rid3 +
                                                                                  "/status" +
                                                                                  saltKey
                                                                              )
                                                                              .toString(
                                                                                cjs
                                                                                  .enc
                                                                                  .Hex
                                                                              );
                                                                          //console.log("Api checksum: ", checksum);
                                                                          xVerify =
                                                                            checksum +
                                                                            "###" +
                                                                            saltIndex;
                                                                          //console.log(xVerify);
                                                                          options =
                                                                            {
                                                                              method:
                                                                                "GET",
                                                                              url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                                                              headers:
                                                                                {
                                                                                  "Content-Type":
                                                                                    "application/json",
                                                                                  "X-VERIFY":
                                                                                    xVerify,
                                                                                },
                                                                            };
                                                                          console.log(
                                                                            "Level 2A : Request data:"
                                                                          ); //comment
                                                                          console.log(
                                                                            options
                                                                          ); //comment
                                                                          ///////////////////////////////////////////////////////////////time out/////////////////////////////////////////////////////
                                                                          setTimeout(
                                                                            function () {
                                                                              request(
                                                                                options,
                                                                                async function (
                                                                                  error,
                                                                                  response,
                                                                                  body
                                                                                ) {
                                                                                  if (
                                                                                    error
                                                                                  ) {
                                                                                    /////////need to handle here if error comes///////
                                                                                    console.log(
                                                                                      error
                                                                                    );
                                                                                  } else {
                                                                                    var data =
                                                                                      JSON.parse(
                                                                                        body
                                                                                      );
                                                                                    console.log(
                                                                                      " Level 2B :Check Status Response Body:"
                                                                                    ); //comment
                                                                                    //console.log(data);
                                                                                    console.log(
                                                                                      "Level 2B : Check Status API RESPONSE: " +
                                                                                        data.success
                                                                                    );
                                                                                    console.log(
                                                                                      data.code
                                                                                    );
                                                                                    switch (
                                                                                      data.code
                                                                                    ) {
                                                                                      case "PAYMENT_SUCCESS":
                                                                                        console.log(
                                                                                          "Level 2B : Check Status Process Completed..."
                                                                                        );
                                                                                        console.log(
                                                                                          rid3
                                                                                        );
                                                                                        const srfd =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        console.log(
                                                                                          "Flow end with CHECK STATUS PAYMENT_SUCCESS : 3 "
                                                                                        );
                                                                                        break;

                                                                                      case "PAYMENT_ERROR":
                                                                                        console.log(
                                                                                          rid3
                                                                                        );
                                                                                        frfd =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        console.log(
                                                                                          "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                                        );
                                                                                        /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3A:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                        console.log(
                                                                                          "BLOCK:PAYMENT_ERROR :END  3A:1 "
                                                                                        );
                                                                                        //    //console.log(svtr);
                                                                                        //    const rid4 = await createRefund(svtr.id);
                                                                                        //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                                                        //    console.log(rid4);
                                                                                        //when request complete then add here code for call refund api again and handle errors and pending process
                                                                                        break;

                                                                                      case "INTERNAL_SERVER_ERROR":
                                                                                      case "TIMED_OUT":
                                                                                      case "PAYMENT_PENDING":
                                                                                        /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@        BLOCK:Check_Status 3B     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                        console.log(
                                                                                          "BLOCK:Check_Status 3B "
                                                                                        );
                                                                                        console.log(
                                                                                          "Level 2B : Refund Process status : " +
                                                                                            data.code
                                                                                        );
                                                                                        // console.log(data.data.transactionId);
                                                                                        // console.log(data.data.providerReferenceId);
                                                                                        const prfd =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        //console.log(prfd);
                                                                                        // console.log(svtr.id);
                                                                                        const checksum =
                                                                                          cjs
                                                                                            .SHA256(
                                                                                              "/v3/transaction/" +
                                                                                                merchantId +
                                                                                                "/" +
                                                                                                rid3 +
                                                                                                "/status" +
                                                                                                saltKey
                                                                                            )
                                                                                            .toString(
                                                                                              cjs
                                                                                                .enc
                                                                                                .Hex
                                                                                            );
                                                                                        //console.log("Api checksum: ", checksum);
                                                                                        xVerify =
                                                                                          checksum +
                                                                                          "###" +
                                                                                          saltIndex;
                                                                                        //console.log(xVerify);
                                                                                        const options =
                                                                                          {
                                                                                            method:
                                                                                              "GET",
                                                                                            url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                                                                            headers:
                                                                                              {
                                                                                                "Content-Type":
                                                                                                  "application/json",
                                                                                                "X-VERIFY":
                                                                                                  xVerify,
                                                                                              },
                                                                                          };
                                                                                        console.log(
                                                                                          " Level 2C :Request data:"
                                                                                        ); //comment
                                                                                        console.log(
                                                                                          options
                                                                                        ); //comment
                                                                                        /////////////////////////////////////////////time out///////////////////////////////////////////////////////////////////
                                                                                        setTimeout(
                                                                                          function () {
                                                                                            request(
                                                                                              options,
                                                                                              async function (
                                                                                                error,
                                                                                                response,
                                                                                                body
                                                                                              ) {
                                                                                                if (
                                                                                                  error
                                                                                                ) {
                                                                                                  /////////need to handle here if error comes///////
                                                                                                  console.log(
                                                                                                    error
                                                                                                  );
                                                                                                } else {
                                                                                                  var data =
                                                                                                    JSON.parse(
                                                                                                      body
                                                                                                    );
                                                                                                  console.log(
                                                                                                    " Level 2C :Check Status Response Body:"
                                                                                                  ); //comment
                                                                                                  // console.log(data.data.transactionId);
                                                                                                  // console.log(data.data.providerReferenceId);
                                                                                                  console.log(
                                                                                                    "Level 2C :Check Status  API RESPONSE: " +
                                                                                                      data.success
                                                                                                  );
                                                                                                  console.log(
                                                                                                    data.code
                                                                                                  );
                                                                                                  switch (
                                                                                                    data.code
                                                                                                  ) {
                                                                                                    case "PAYMENT_SUCCESS":
                                                                                                      console.log(
                                                                                                        "Level 2C : Refund Process Completed..."
                                                                                                      );
                                                                                                      console.log(
                                                                                                        rid2
                                                                                                      );
                                                                                                      const srfd =
                                                                                                        await storeRefund(
                                                                                                          data,
                                                                                                          rid3
                                                                                                        );
                                                                                                      console.log(
                                                                                                        "Flow end with CHECK_STATUS SUCCESSFULLY PAYMENT_SUCCESS : 4 "
                                                                                                      );
                                                                                                      break;
                                                                                                    case "PAYMENT_ERROR":
                                                                                                      console.log(
                                                                                                        rid3
                                                                                                      );
                                                                                                      frfd =
                                                                                                        await storeRefund(
                                                                                                          data,
                                                                                                          rid3
                                                                                                        );
                                                                                                      console.log(
                                                                                                        "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                                                      );
                                                                                                      /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3B:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                                      console.log(
                                                                                                        "BLOCK:PAYMENT_ERROR :END  3c:1 "
                                                                                                      );
                                                                                                      //    //console.log(svtr);
                                                                                                      //    const rid3 = await createRefund(svtr.id);
                                                                                                      //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                                                                      //    console.log(rid3);
                                                                                                      //when request complete then add here code for call refund api again and handle errors and pending process
                                                                                                      break;

                                                                                                    case "INTERNAL_SERVER_ERROR":
                                                                                                    case "TIMED_OUT":
                                                                                                    case "PAYMENT_PENDING":
                                                                                                      /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@        BLOCK:Check_Status 3C     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                                      console.log(
                                                                                                        "BLOCK:Check_Status 3C "
                                                                                                      );
                                                                                                      console.log(
                                                                                                        "Level 2B : Refund Process status : " +
                                                                                                          data.code
                                                                                                      );
                                                                                                      // console.log(data.data.transactionId);
                                                                                                      // console.log(data.data.providerReferenceId);
                                                                                                      const prfd =
                                                                                                        await storeRefund(
                                                                                                          data,
                                                                                                          rid3
                                                                                                        );
                                                                                                      //console.log(prfd);
                                                                                                      // console.log(svtr.id);
                                                                                                      const checksum =
                                                                                                        cjs
                                                                                                          .SHA256(
                                                                                                            "/v3/transaction/" +
                                                                                                              merchantId +
                                                                                                              "/" +
                                                                                                              rid3 +
                                                                                                              "/status" +
                                                                                                              saltKey
                                                                                                          )
                                                                                                          .toString(
                                                                                                            cjs
                                                                                                              .enc
                                                                                                              .Hex
                                                                                                          );
                                                                                                      //console.log("Api checksum: ", checksum);
                                                                                                      xVerify =
                                                                                                        checksum +
                                                                                                        "###" +
                                                                                                        saltIndex;
                                                                                                      //console.log(xVerify);
                                                                                                      const options =
                                                                                                        {
                                                                                                          method:
                                                                                                            "GET",
                                                                                                          url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                                                                                          headers:
                                                                                                            {
                                                                                                              "Content-Type":
                                                                                                                "application/json",
                                                                                                              "X-VERIFY":
                                                                                                                xVerify,
                                                                                                            },
                                                                                                        };
                                                                                                      console.log(
                                                                                                        " Level 2C :Request data:"
                                                                                                      ); //comment
                                                                                                      console.log(
                                                                                                        options
                                                                                                      ); //comment
                                                                                                      /////////////////////////////////////////////time out///////////////////////////////////////////////////////////////////
                                                                                                      setTimeout(
                                                                                                        function () {
                                                                                                          request(
                                                                                                            options,
                                                                                                            async function (
                                                                                                              error,
                                                                                                              response,
                                                                                                              body
                                                                                                            ) {
                                                                                                              if (
                                                                                                                error
                                                                                                              ) {
                                                                                                                /////////need to handle here if error comes///////
                                                                                                                console.log(
                                                                                                                  error
                                                                                                                );
                                                                                                              } else {
                                                                                                                var data =
                                                                                                                  JSON.parse(
                                                                                                                    body
                                                                                                                  );
                                                                                                                console.log(
                                                                                                                  " Level 2C :Check Status Response Body:"
                                                                                                                ); //comment
                                                                                                                // console.log(data.data.transactionId);
                                                                                                                // console.log(data.data.providerReferenceId);
                                                                                                                console.log(
                                                                                                                  "Level 2C :Check Status  API RESPONSE: " +
                                                                                                                    data.success
                                                                                                                );
                                                                                                                console.log(
                                                                                                                  data.code
                                                                                                                );
                                                                                                                switch (
                                                                                                                  data.code
                                                                                                                ) {
                                                                                                                  case "PAYMENT_SUCCESS":
                                                                                                                    console.log(
                                                                                                                      "Level 2C : Refund Process Completed..."
                                                                                                                    );
                                                                                                                    console.log(
                                                                                                                      rid2
                                                                                                                    );
                                                                                                                    const srfd =
                                                                                                                      await storeRefund(
                                                                                                                        data,
                                                                                                                        rid3
                                                                                                                      );
                                                                                                                    console.log(
                                                                                                                      "Flow end with CHECK_STATUS SUCCESSFULLY PAYMENT_SUCCESS : 4 "
                                                                                                                    );
                                                                                                                    break;
                                                                                                                  case "PAYMENT_ERROR":
                                                                                                                    console.log(
                                                                                                                      rid3
                                                                                                                    );
                                                                                                                    frfd =
                                                                                                                      await storeRefund(
                                                                                                                        data,
                                                                                                                        rid3
                                                                                                                      );
                                                                                                                    console.log(
                                                                                                                      "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                                                                    );
                                                                                                                    /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3C:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                                                    console.log(
                                                                                                                      "BLOCK:PAYMENT_ERROR :END  3c:1 "
                                                                                                                    );
                                                                                                                    //    //console.log(svtr);
                                                                                                                    //    const rid3 = await createRefund(svtr.id);
                                                                                                                    //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                                                                                    //    console.log(rid3);
                                                                                                                    //when request complete then add here code for call refund api again and handle errors and pending process
                                                                                                                    break;

                                                                                                                  case "INTERNAL_SERVER_ERROR":
                                                                                                                  case "TIMED_OUT":
                                                                                                                  case "PAYMENT_PENDING":
                                                                                                                    /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:INTERNAL_SERVER_ERROR :END  3C:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                                                    console.log(
                                                                                                                      rid2
                                                                                                                    );
                                                                                                                    frfd =
                                                                                                                      await storeRefund(
                                                                                                                        data,
                                                                                                                        rid3
                                                                                                                      );
                                                                                                                    console.log(
                                                                                                                      frfd
                                                                                                                    );
                                                                                                                    console.log(
                                                                                                                      "FINAL Flow end with CHECK_STATUS FAILED PAYMENT_ERROR,INTERNAL_SERVER_ERROR,TIMED_OUT,PAYMENT_PENDING : 3 "
                                                                                                                    );
                                                                                                                    //when request complete then add here code for call refund api again and handle errors and pending process
                                                                                                                    break;
                                                                                                                  default:
                                                                                                                    console.log(
                                                                                                                      rid3
                                                                                                                    );
                                                                                                                    frfd3 =
                                                                                                                      await storeRefund(
                                                                                                                        data,
                                                                                                                        rid3
                                                                                                                      );
                                                                                                                    console.log(
                                                                                                                      frfd3
                                                                                                                    );
                                                                                                                    console.log(
                                                                                                                      "Flow end with DEFAULT SWITCH CASE : 1 "
                                                                                                                    );
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          );
                                                                                                        },
                                                                                                        delayTime
                                                                                                      );
                                                                                                      break;
                                                                                                    default:
                                                                                                      console.log(
                                                                                                        rid3
                                                                                                      );
                                                                                                      frfd3 =
                                                                                                        await storeRefund(
                                                                                                          data,
                                                                                                          rid3
                                                                                                        );
                                                                                                      console.log(
                                                                                                        frfd3
                                                                                                      );
                                                                                                      console.log(
                                                                                                        "Flow end with DEFAULT SWITCH CASE : 1 "
                                                                                                      );
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            );
                                                                                          },
                                                                                          delayTime
                                                                                        );
                                                                                        break;
                                                                                      default:
                                                                                        console.log(
                                                                                          rid3
                                                                                        );
                                                                                        frfd3 =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        console.log(
                                                                                          frfd3
                                                                                        );
                                                                                        console.log(
                                                                                          "Flow end with DEFAULT SWITCH CASE : 2 "
                                                                                        );
                                                                                    }
                                                                                  }
                                                                                }
                                                                              );
                                                                            },
                                                                            delayTime
                                                                          );
                                                                          break;
                                                                        default:
                                                                          console.log(
                                                                            rid3
                                                                          );
                                                                          frfd3 =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          console.log(
                                                                            frfd3
                                                                          );
                                                                          console.log(
                                                                            "Flow end with DEFAULT SWITCH CASE : 3 "
                                                                          );
                                                                      }
                                                                    }
                                                                  }
                                                                );
                                                              },
                                                              delayTime
                                                            );
                                                            break;

                                                          case "INTERNAL_SERVER_ERROR":
                                                          case "TIMED_OUT":
                                                          case "PAYMENT_PENDING":
                                                            console.log(rid2);
                                                            frfd =
                                                              await storeRefund(
                                                                data,
                                                                rid2
                                                              );
                                                            console.log(frfd);
                                                            console.log(
                                                              "FINAL Flow end with CHECK_STATUS FAILED PAYMENT_ERROR,INTERNAL_SERVER_ERROR,TIMED_OUT,PAYMENT_PENDING : 3 "
                                                            );
                                                            //when request complete then add here code for call refund api again and handle errors and pending process
                                                            break;
                                                          default:
                                                            console.log(rid2);
                                                            frfd2 =
                                                              await storeRefund(
                                                                data,
                                                                rid2
                                                              );
                                                            console.log(frfd2);
                                                            console.log(
                                                              "Flow end with DEFAULT SWITCH CASE : 1 "
                                                            );
                                                        }
                                                      }
                                                    }
                                                  );
                                                }, delayTime);
                                                break;
                                              default:
                                                console.log(rid2);
                                                frfd2 = await storeRefund(
                                                  data,
                                                  rid2
                                                );
                                                console.log(frfd2);
                                                console.log(
                                                  "Flow end with DEFAULT SWITCH CASE : 2 "
                                                );
                                            }
                                          }
                                        }
                                      );
                                    }, delayTime);
                                    break;
                                  default:
                                    console.log(rid2);
                                    frfd2 = await storeRefund(data, rid2);
                                    console.log(frfd2);
                                    console.log(
                                      "Flow end with DEFAULT SWITCH CASE : 3 "
                                    );
                                }
                              }
                            }
                          );
                        }, delayTime);
                        break;
                      case "INTERNAL_SERVER_ERROR":
                      case "TIMED_OUT":
                      case "PAYMENT_PENDING":
                        console.log(
                          "Level 2 : Refund Process status : " + data.code
                        );
                        // console.log(data.data.transactionId);
                        // console.log(data.data.providerReferenceId);
                        const prfd = await storeRefund(data, rid);
                        //console.log(prfd);
                        // console.log(svtr.id);
                        const checksum = cjs
                          .SHA256(
                            "/v3/transaction/" +
                              merchantId +
                              "/" +
                              rid +
                              "/status" +
                              saltKey
                          )
                          .toString(cjs.enc.Hex);
                        //console.log("Api checksum: ", checksum);
                        xVerify = checksum + "###" + saltIndex;
                        //console.log(xVerify);
                        options = {
                          method: "GET",
                          url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid}/status`,
                          headers: {
                            "Content-Type": "application/json",
                            "X-VERIFY": xVerify,
                          },
                        };
                        console.log(" Level 3 :Request data:"); //comment
                        console.log(options); //comment
                        ////////////////////////time out ////////////////////////////////////
                        setTimeout(function () {
                          request(
                            options,
                            async function (error, response, body) {
                              if (error) {
                                /////////need to handle here if error comes///////
                                console.log(error);
                              } else {
                                var data = JSON.parse(body);
                                console.log(
                                  " Level 3 :Check Status Response Body:"
                                ); //comment
                                // console.log(data.data.transactionId);
                                // console.log(data.data.providerReferenceId);
                                console.log(
                                  "Level 3 :Check Status  API RESPONSE: " +
                                    data.success
                                );
                                console.log(data.code);
                                switch (data.code) {
                                  case "PAYMENT_SUCCESS":
                                    console.log(
                                      "Level 3 : Refund Process Completed..."
                                    );
                                    console.log(rid);
                                    const srfd = await storeRefund(data, rid);
                                    console.log(
                                      "Flow end with CHECK STATUS SUCCESSFULLY PAYMENT_SUCCESS : 9"
                                    );
                                    break;
                                  case "PAYMENT_ERROR":
                                    console.log(rid);
                                    frfd = await storeRefund(data, rid);
                                    //console.log(svtr);
                                    /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:REFUND 2     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                    console.log("BLOCK:REFUND 2");
                                    const rid2 = await createRefund(svtr.id);
                                    console.log(
                                      "Level 1: NEW REFUND ID GENERATED.."
                                    ); /////////////////////////////////////
                                    console.log(rid2);
                                    //when request complete then add here code for call refund api again and handle errors and pending process
                                    console.log("Level 2: Calling Refund API");
                                    const url = "mercury-uat.phonepe.com";
                                    const path = "/v3/credit/backToSource";
                                    saltKey =
                                      "0afb5aa4-2206-4ea0-b081-fb94270b8c96";
                                    saltIndex = 1;
                                    const decodedRequest = {
                                      merchantId: merchantId,
                                      transactionId: rid2,
                                      providerReferenceId:
                                        svtr.providerReferenceId,
                                      amount: rfAmount,
                                      message: "Incorrect Amount",
                                    };
                                    // console.log(decodedRequest);
                                    let encodedRequest =
                                      decodedRequest === ""
                                        ? ""
                                        : Buffer.from(
                                            JSON.stringify(decodedRequest)
                                          ).toString("base64");
                                    generateChecksum(
                                      encodedRequest,
                                      path,
                                      saltKey,
                                      saltIndex
                                    );
                                    function generateChecksum(
                                      encodedRequest,
                                      path,
                                      saltKey,
                                      keyIndex
                                    ) {
                                      const checksum = cjs
                                        .SHA256(encodedRequest + path + saltKey)
                                        .toString(cjs.enc.Hex);
                                      // console.log("base64 request:", encodedRequest, "Api checksum: ", checksum);
                                      xVerify = checksum + "###" + keyIndex;
                                    }
                                    if (encodedRequest === "") body1 = "";
                                    else
                                      body1 = JSON.stringify({
                                        request: encodedRequest,
                                      });
                                    options2 = {
                                      method: "POST",
                                      url: "https://mercury-uat.phonepe.com/v3/credit/backToSource",
                                      headers: {
                                        "Content-Type": "application/json",
                                        "X-VERIFY": xVerify,
                                      },
                                      body: body1,
                                    };
                                    console.log(" Level 2: Request data:"); //comment
                                    console.log(options2); //comment
                                    ////////////////////////////////////////////////////////////////////////////////////////////////time out//////////////////////////////////////////////////////////////////////////////////////////////////
                                    setTimeout(function () {
                                      request(
                                        options2,
                                        async function (error, response, body) {
                                          if (error) {
                                            /////////need to handle here if error comes///////
                                            console.log(error);
                                          } else {
                                            var data = JSON.parse(body);
                                            console.log(
                                              "Level 2A :Response Body:"
                                            ); //comment
                                            //console.log(data);
                                            console.log(
                                              "Level 2A :REFUND API RESPONSE: " +
                                                data.success
                                            );
                                            console.log(data.code);
                                            switch (data.code) {
                                              case "PAYMENT_SUCCESS":
                                                console.log(
                                                  "Level 2A :Refund Process Completed..."
                                                );
                                                console.log(rid2);
                                                const srfd = await storeRefund(
                                                  data,
                                                  rid2
                                                );
                                                console.log(
                                                  "Flow end with REFUND SUCCESSFULLY PAYMENT_SUCCESS : 2 "
                                                );
                                                break;

                                              case "PAYMENT_ERROR":
                                                console.log(rid2);
                                                frfd = await storeRefund(
                                                  data,
                                                  rid2
                                                );
                                                console.log(
                                                  "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                );

                                                //console.log(svtr);
                                                /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:REFUND 3      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                console.log("BLOCK:REFUND 3");
                                                const rid3 = await createRefund(
                                                  svtr.id
                                                );
                                                console.log(
                                                  "Level 2A: NEW REFUND ID GENERATED.."
                                                ); /////////////////////////////////////
                                                console.log(rid3);
                                                //when request complete then add here code for call refund api again and handle errors and pending process
                                                //when request complete then add here code for call refund api again and handle errors and pending process
                                                console.log(
                                                  "Level 2: Calling Refund API"
                                                );
                                                const url =
                                                  "mercury-uat.phonepe.com";
                                                const path =
                                                  "/v3/credit/backToSource";
                                                saltKey =
                                                  "0afb5aa4-2206-4ea0-b081-fb94270b8c96";
                                                saltIndex = 1;
                                                const decodedRequest = {
                                                  merchantId: merchantId,
                                                  transactionId: rid3,
                                                  providerReferenceId:
                                                    svtr.providerReferenceId,
                                                  amount: rfAmount,
                                                  message: "Incorrect Amount",
                                                };
                                                // console.log(decodedRequest);
                                                let encodedRequest =
                                                  decodedRequest === ""
                                                    ? ""
                                                    : Buffer.from(
                                                        JSON.stringify(
                                                          decodedRequest
                                                        )
                                                      ).toString("base64");
                                                generateChecksum(
                                                  encodedRequest,
                                                  path,
                                                  saltKey,
                                                  saltIndex
                                                );
                                                function generateChecksum(
                                                  encodedRequest,
                                                  path,
                                                  saltKey,
                                                  keyIndex
                                                ) {
                                                  const checksum = cjs
                                                    .SHA256(
                                                      encodedRequest +
                                                        path +
                                                        saltKey
                                                    )
                                                    .toString(cjs.enc.Hex);
                                                  // console.log("base64 request:", encodedRequest, "Api checksum: ", checksum);
                                                  xVerify =
                                                    checksum + "###" + keyIndex;
                                                }
                                                if (encodedRequest === "")
                                                  body1 = "";
                                                else
                                                  body1 = JSON.stringify({
                                                    request: encodedRequest,
                                                  });
                                                options2 = {
                                                  method: "POST",
                                                  url: "https://mercury-uat.phonepe.com/v3/credit/backToSource",
                                                  headers: {
                                                    "Content-Type":
                                                      "application/json",
                                                    "X-VERIFY": xVerify,
                                                  },
                                                  body: body1,
                                                };
                                                console.log(
                                                  " Level 2: Request data:"
                                                ); //comment
                                                console.log(options2); //comment
                                                ////////////////////////////////////////////////////////////////////////////////////////////////time out//////////////////////////////////////////////////////////////////////////////////////////////////
                                                setTimeout(function () {
                                                  request(
                                                    options2,
                                                    async function (
                                                      error,
                                                      response,
                                                      body
                                                    ) {
                                                      if (error) {
                                                        /////////need to handle here if error comes///////
                                                        console.log(error);
                                                      } else {
                                                        var data =
                                                          JSON.parse(body);
                                                        console.log(
                                                          "Level 2A :Response Body:"
                                                        ); //comment
                                                        //console.log(data);
                                                        console.log(
                                                          "Level 2A :REFUND API RESPONSE: " +
                                                            data.success
                                                        );
                                                        console.log(data.code);
                                                        switch (data.code) {
                                                          case "PAYMENT_SUCCESS":
                                                            console.log(
                                                              "Level 2A :Refund Process Completed..."
                                                            );
                                                            console.log(rid3);
                                                            const srfd =
                                                              await storeRefund(
                                                                data,
                                                                rid3
                                                              );
                                                            console.log(
                                                              "Flow end with REFUND SUCCESSFULLY PAYMENT_SUCCESS : 2 "
                                                            );
                                                            break;

                                                          case "PAYMENT_ERROR":
                                                            console.log(rid3);
                                                            frfd =
                                                              await storeRefund(
                                                                data,
                                                                rid3
                                                              );
                                                            console.log(
                                                              "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                            );
                                                            /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                            console.log(
                                                              "BLOCK:PAYMENT_ERROR :END  1 "
                                                            );
                                                            //    //console.log(svtr);
                                                            //    const rid3 = await createRefund(svtr.id);
                                                            //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                            //    console.log(rid3);
                                                            //when request complete then add here code for call refund api again and handle errors and pending process
                                                            break;
                                                          case "INTERNAL_SERVER_ERROR":
                                                          case "TIMED_OUT":
                                                          case "PAYMENT_PENDING":
                                                            // case 'PAYMENT_ERROR'://need to remove
                                                            console.log(
                                                              "Check Status API calling...."
                                                            );
                                                            console.log(
                                                              "Level 2A : Refund Process status : " +
                                                                data.code
                                                            );
                                                            const prfd =
                                                              await storeRefund(
                                                                data,
                                                                rid3
                                                              );
                                                            /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:Check_Status 3A      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                            console.log(
                                                              "BLOCK:Check_Status 3A"
                                                            );
                                                            //console.log(prfd);
                                                            //console.log(svtr.id);
                                                            const checksum = cjs
                                                              .SHA256(
                                                                "/v3/transaction/" +
                                                                  merchantId +
                                                                  "/" +
                                                                  rid3 +
                                                                  "/status" +
                                                                  saltKey
                                                              )
                                                              .toString(
                                                                cjs.enc.Hex
                                                              );
                                                            //console.log("Api checksum: ", checksum);
                                                            xVerify =
                                                              checksum +
                                                              "###" +
                                                              saltIndex;
                                                            //console.log(xVerify);
                                                            options = {
                                                              method: "GET",
                                                              url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                                              headers: {
                                                                "Content-Type":
                                                                  "application/json",
                                                                "X-VERIFY":
                                                                  xVerify,
                                                              },
                                                            };
                                                            console.log(
                                                              "Level 2A : Request data:"
                                                            ); //comment
                                                            console.log(
                                                              options
                                                            ); //comment
                                                            ///////////////////////////////////////////////////////////////time out/////////////////////////////////////////////////////
                                                            setTimeout(
                                                              function () {
                                                                request(
                                                                  options,
                                                                  async function (
                                                                    error,
                                                                    response,
                                                                    body
                                                                  ) {
                                                                    if (error) {
                                                                      /////////need to handle here if error comes///////
                                                                      console.log(
                                                                        error
                                                                      );
                                                                    } else {
                                                                      var data =
                                                                        JSON.parse(
                                                                          body
                                                                        );
                                                                      console.log(
                                                                        " Level 2B :Check Status Response Body:"
                                                                      ); //comment
                                                                      //console.log(data);
                                                                      console.log(
                                                                        "Level 2B : Check Status API RESPONSE: " +
                                                                          data.success
                                                                      );
                                                                      console.log(
                                                                        data.code
                                                                      );
                                                                      switch (
                                                                        data.code
                                                                      ) {
                                                                        case "PAYMENT_SUCCESS":
                                                                          console.log(
                                                                            "Level 2B : Check Status Process Completed..."
                                                                          );
                                                                          console.log(
                                                                            rid3
                                                                          );
                                                                          const srfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          console.log(
                                                                            "Flow end with CHECK STATUS PAYMENT_SUCCESS : 3 "
                                                                          );
                                                                          break;

                                                                        case "PAYMENT_ERROR":
                                                                          console.log(
                                                                            rid3
                                                                          );
                                                                          frfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          console.log(
                                                                            "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                          );
                                                                          /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3A:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                          console.log(
                                                                            "BLOCK:PAYMENT_ERROR :END  3A:1 "
                                                                          );
                                                                          //    //console.log(svtr);
                                                                          //    const rid4 = await createRefund(svtr.id);
                                                                          //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                                          //    console.log(rid4);
                                                                          //when request complete then add here code for call refund api again and handle errors and pending process
                                                                          break;

                                                                        case "INTERNAL_SERVER_ERROR":
                                                                        case "TIMED_OUT":
                                                                        case "PAYMENT_PENDING":
                                                                          /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@        BLOCK:Check_Status 3B     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                          console.log(
                                                                            "BLOCK:Check_Status 3B "
                                                                          );
                                                                          console.log(
                                                                            "Level 2B : Refund Process status : " +
                                                                              data.code
                                                                          );
                                                                          // console.log(data.data.transactionId);
                                                                          // console.log(data.data.providerReferenceId);
                                                                          const prfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          //console.log(prfd);
                                                                          // console.log(svtr.id);
                                                                          const checksum =
                                                                            cjs
                                                                              .SHA256(
                                                                                "/v3/transaction/" +
                                                                                  merchantId +
                                                                                  "/" +
                                                                                  rid3 +
                                                                                  "/status" +
                                                                                  saltKey
                                                                              )
                                                                              .toString(
                                                                                cjs
                                                                                  .enc
                                                                                  .Hex
                                                                              );
                                                                          //console.log("Api checksum: ", checksum);
                                                                          xVerify =
                                                                            checksum +
                                                                            "###" +
                                                                            saltIndex;
                                                                          //console.log(xVerify);
                                                                          const options =
                                                                            {
                                                                              method:
                                                                                "GET",
                                                                              url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                                                              headers:
                                                                                {
                                                                                  "Content-Type":
                                                                                    "application/json",
                                                                                  "X-VERIFY":
                                                                                    xVerify,
                                                                                },
                                                                            };
                                                                          console.log(
                                                                            " Level 2C :Request data:"
                                                                          ); //comment
                                                                          console.log(
                                                                            options
                                                                          ); //comment
                                                                          /////////////////////////////////////////////time out///////////////////////////////////////////////////////////////////
                                                                          setTimeout(
                                                                            function () {
                                                                              request(
                                                                                options,
                                                                                async function (
                                                                                  error,
                                                                                  response,
                                                                                  body
                                                                                ) {
                                                                                  if (
                                                                                    error
                                                                                  ) {
                                                                                    /////////need to handle here if error comes///////
                                                                                    console.log(
                                                                                      error
                                                                                    );
                                                                                  } else {
                                                                                    var data =
                                                                                      JSON.parse(
                                                                                        body
                                                                                      );
                                                                                    console.log(
                                                                                      " Level 2C :Check Status Response Body:"
                                                                                    ); //comment
                                                                                    // console.log(data.data.transactionId);
                                                                                    // console.log(data.data.providerReferenceId);
                                                                                    console.log(
                                                                                      "Level 2C :Check Status  API RESPONSE: " +
                                                                                        data.success
                                                                                    );
                                                                                    console.log(
                                                                                      data.code
                                                                                    );
                                                                                    switch (
                                                                                      data.code
                                                                                    ) {
                                                                                      case "PAYMENT_SUCCESS":
                                                                                        console.log(
                                                                                          "Level 2C : Refund Process Completed..."
                                                                                        );
                                                                                        console.log(
                                                                                          rid2
                                                                                        );
                                                                                        const srfd =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        console.log(
                                                                                          "Flow end with CHECK_STATUS SUCCESSFULLY PAYMENT_SUCCESS : 4 "
                                                                                        );
                                                                                        break;
                                                                                      case "PAYMENT_ERROR":
                                                                                        console.log(
                                                                                          rid3
                                                                                        );
                                                                                        frfd =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        console.log(
                                                                                          "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                                        );
                                                                                        /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3B:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                        console.log(
                                                                                          "BLOCK:PAYMENT_ERROR :END  3c:1 "
                                                                                        );
                                                                                        //    //console.log(svtr);
                                                                                        //    const rid3 = await createRefund(svtr.id);
                                                                                        //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                                                        //    console.log(rid3);
                                                                                        //when request complete then add here code for call refund api again and handle errors and pending process
                                                                                        break;

                                                                                      case "INTERNAL_SERVER_ERROR":
                                                                                      case "TIMED_OUT":
                                                                                      case "PAYMENT_PENDING":
                                                                                        /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@        BLOCK:Check_Status 3C     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                        console.log(
                                                                                          "BLOCK:Check_Status 3C "
                                                                                        );
                                                                                        console.log(
                                                                                          "Level 2B : Refund Process status : " +
                                                                                            data.code
                                                                                        );
                                                                                        // console.log(data.data.transactionId);
                                                                                        // console.log(data.data.providerReferenceId);
                                                                                        const prfd =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        //console.log(prfd);
                                                                                        // console.log(svtr.id);
                                                                                        const checksum =
                                                                                          cjs
                                                                                            .SHA256(
                                                                                              "/v3/transaction/" +
                                                                                                merchantId +
                                                                                                "/" +
                                                                                                rid3 +
                                                                                                "/status" +
                                                                                                saltKey
                                                                                            )
                                                                                            .toString(
                                                                                              cjs
                                                                                                .enc
                                                                                                .Hex
                                                                                            );
                                                                                        //console.log("Api checksum: ", checksum);
                                                                                        xVerify =
                                                                                          checksum +
                                                                                          "###" +
                                                                                          saltIndex;
                                                                                        //console.log(xVerify);
                                                                                        const options =
                                                                                          {
                                                                                            method:
                                                                                              "GET",
                                                                                            url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                                                                            headers:
                                                                                              {
                                                                                                "Content-Type":
                                                                                                  "application/json",
                                                                                                "X-VERIFY":
                                                                                                  xVerify,
                                                                                              },
                                                                                          };
                                                                                        console.log(
                                                                                          " Level 2C :Request data:"
                                                                                        ); //comment
                                                                                        console.log(
                                                                                          options
                                                                                        ); //comment
                                                                                        /////////////////////////////////////////////time out///////////////////////////////////////////////////////////////////
                                                                                        setTimeout(
                                                                                          function () {
                                                                                            request(
                                                                                              options,
                                                                                              async function (
                                                                                                error,
                                                                                                response,
                                                                                                body
                                                                                              ) {
                                                                                                if (
                                                                                                  error
                                                                                                ) {
                                                                                                  /////////need to handle here if error comes///////
                                                                                                  console.log(
                                                                                                    error
                                                                                                  );
                                                                                                } else {
                                                                                                  var data =
                                                                                                    JSON.parse(
                                                                                                      body
                                                                                                    );
                                                                                                  console.log(
                                                                                                    " Level 2C :Check Status Response Body:"
                                                                                                  ); //comment
                                                                                                  // console.log(data.data.transactionId);
                                                                                                  // console.log(data.data.providerReferenceId);
                                                                                                  console.log(
                                                                                                    "Level 2C :Check Status  API RESPONSE: " +
                                                                                                      data.success
                                                                                                  );
                                                                                                  console.log(
                                                                                                    data.code
                                                                                                  );
                                                                                                  switch (
                                                                                                    data.code
                                                                                                  ) {
                                                                                                    case "PAYMENT_SUCCESS":
                                                                                                      console.log(
                                                                                                        "Level 2C : Refund Process Completed..."
                                                                                                      );
                                                                                                      console.log(
                                                                                                        rid2
                                                                                                      );
                                                                                                      const srfd =
                                                                                                        await storeRefund(
                                                                                                          data,
                                                                                                          rid3
                                                                                                        );
                                                                                                      console.log(
                                                                                                        "Flow end with CHECK_STATUS SUCCESSFULLY PAYMENT_SUCCESS : 4 "
                                                                                                      );
                                                                                                      break;
                                                                                                    case "PAYMENT_ERROR":
                                                                                                      console.log(
                                                                                                        rid3
                                                                                                      );
                                                                                                      frfd =
                                                                                                        await storeRefund(
                                                                                                          data,
                                                                                                          rid3
                                                                                                        );
                                                                                                      console.log(
                                                                                                        "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                                                      );
                                                                                                      /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3C:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                                      console.log(
                                                                                                        "BLOCK:PAYMENT_ERROR :END  3c:1 "
                                                                                                      );
                                                                                                      //    //console.log(svtr);
                                                                                                      //    const rid3 = await createRefund(svtr.id);
                                                                                                      //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                                                                      //    console.log(rid3);
                                                                                                      //when request complete then add here code for call refund api again and handle errors and pending process
                                                                                                      break;

                                                                                                    case "INTERNAL_SERVER_ERROR":
                                                                                                    case "TIMED_OUT":
                                                                                                    case "PAYMENT_PENDING":
                                                                                                      /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:INTERNAL_SERVER_ERROR :END  3C:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                                      console.log(
                                                                                                        rid2
                                                                                                      );
                                                                                                      frfd =
                                                                                                        await storeRefund(
                                                                                                          data,
                                                                                                          rid3
                                                                                                        );
                                                                                                      console.log(
                                                                                                        frfd
                                                                                                      );
                                                                                                      console.log(
                                                                                                        "FINAL Flow end with CHECK_STATUS FAILED PAYMENT_ERROR,INTERNAL_SERVER_ERROR,TIMED_OUT,PAYMENT_PENDING : 3 "
                                                                                                      );
                                                                                                      //when request complete then add here code for call refund api again and handle errors and pending process
                                                                                                      break;
                                                                                                    default:
                                                                                                      console.log(
                                                                                                        rid3
                                                                                                      );
                                                                                                      frfd3 =
                                                                                                        await storeRefund(
                                                                                                          data,
                                                                                                          rid3
                                                                                                        );
                                                                                                      console.log(
                                                                                                        frfd3
                                                                                                      );
                                                                                                      console.log(
                                                                                                        "Flow end with DEFAULT SWITCH CASE : 1 "
                                                                                                      );
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            );
                                                                                          },
                                                                                          delayTime
                                                                                        );
                                                                                        break;
                                                                                      default:
                                                                                        console.log(
                                                                                          rid3
                                                                                        );
                                                                                        frfd3 =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        console.log(
                                                                                          frfd3
                                                                                        );
                                                                                        console.log(
                                                                                          "Flow end with DEFAULT SWITCH CASE : 1 "
                                                                                        );
                                                                                    }
                                                                                  }
                                                                                }
                                                                              );
                                                                            },
                                                                            delayTime
                                                                          );
                                                                          break;
                                                                        default:
                                                                          console.log(
                                                                            rid3
                                                                          );
                                                                          frfd3 =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          console.log(
                                                                            frfd3
                                                                          );
                                                                          console.log(
                                                                            "Flow end with DEFAULT SWITCH CASE : 2 "
                                                                          );
                                                                      }
                                                                    }
                                                                  }
                                                                );
                                                              },
                                                              delayTime
                                                            );
                                                            break;
                                                          default:
                                                            console.log(rid3);
                                                            frfd3 =
                                                              await storeRefund(
                                                                data,
                                                                rid3
                                                              );
                                                            console.log(frfd3);
                                                            console.log(
                                                              "Flow end with DEFAULT SWITCH CASE : 3 "
                                                            );
                                                        }
                                                      }
                                                    }
                                                  );
                                                }, delayTime);
                                                break;

                                              case "INTERNAL_SERVER_ERROR":
                                              case "TIMED_OUT":
                                              case "PAYMENT_PENDING":
                                                // case 'PAYMENT_ERROR'://need to remove
                                                console.log(
                                                  "Check Status API calling...."
                                                );
                                                console.log(
                                                  "Level 2A : Refund Process status : " +
                                                    data.code
                                                );
                                                const prfd = await storeRefund(
                                                  data,
                                                  rid2
                                                );
                                                //console.log(prfd);
                                                //console.log(svtr.id);
                                                const checksum = cjs
                                                  .SHA256(
                                                    "/v3/transaction/" +
                                                      merchantId +
                                                      "/" +
                                                      rid2 +
                                                      "/status" +
                                                      saltKey
                                                  )
                                                  .toString(cjs.enc.Hex);
                                                //console.log("Api checksum: ", checksum);
                                                xVerify =
                                                  checksum + "###" + saltIndex;
                                                //console.log(xVerify);
                                                options = {
                                                  method: "GET",
                                                  url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid2}/status`,
                                                  headers: {
                                                    "Content-Type":
                                                      "application/json",
                                                    "X-VERIFY": xVerify,
                                                  },
                                                };
                                                console.log(
                                                  "Level 2A : Request data:"
                                                ); //comment
                                                console.log(options); //comment
                                                ///////////////////////////////////////////////////////////////time out/////////////////////////////////////////////////////
                                                setTimeout(function () {
                                                  request(
                                                    options,
                                                    async function (
                                                      error,
                                                      response,
                                                      body
                                                    ) {
                                                      if (error) {
                                                        /////////need to handle here if error comes///////
                                                        console.log(error);
                                                      } else {
                                                        var data =
                                                          JSON.parse(body);
                                                        console.log(
                                                          " Level 2B :Check Status Response Body:"
                                                        ); //comment
                                                        //console.log(data);
                                                        console.log(
                                                          "Level 2B : Check Status API RESPONSE: " +
                                                            data.success
                                                        );
                                                        console.log(data.code);
                                                        switch (data.code) {
                                                          case "PAYMENT_SUCCESS":
                                                            console.log(
                                                              "Level 2B : Check Status Process Completed..."
                                                            );
                                                            console.log(rid2);
                                                            const srfd =
                                                              await storeRefund(
                                                                data,
                                                                rid2
                                                              );
                                                            console.log(
                                                              "Flow end with CHECK STATUS PAYMENT_SUCCESS : 3 "
                                                            );
                                                            break;

                                                          case "PAYMENT_ERROR":
                                                            console.log(rid2);
                                                            frfd =
                                                              await storeRefund(
                                                                data,
                                                                rid2
                                                              );
                                                            console.log(
                                                              "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                            );

                                                            //console.log(svtr);
                                                            /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:REFUND 3      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                            console.log(
                                                              "BLOCK:REFUND 3"
                                                            );
                                                            const rid3 =
                                                              await createRefund(
                                                                svtr.id
                                                              );
                                                            console.log(
                                                              "Level 2A: NEW REFUND ID GENERATED.."
                                                            ); /////////////////////////////////////
                                                            console.log(rid3);
                                                            //when request complete then add here code for call refund api again and handle errors and pending process
                                                            //when request complete then add here code for call refund api again and handle errors and pending process
                                                            console.log(
                                                              "Level 2: Calling Refund API"
                                                            );
                                                            const url =
                                                              "mercury-uat.phonepe.com";
                                                            const path =
                                                              "/v3/credit/backToSource";
                                                            saltKey =
                                                              "0afb5aa4-2206-4ea0-b081-fb94270b8c96";
                                                            saltIndex = 1;
                                                            const decodedRequest =
                                                              {
                                                                merchantId:
                                                                  merchantId,
                                                                transactionId:
                                                                  rid3,
                                                                providerReferenceId:
                                                                  svtr.providerReferenceId,
                                                                amount:
                                                                  rfAmount,
                                                                message:
                                                                  "Incorrect Amount",
                                                              };
                                                            // console.log(decodedRequest);
                                                            let encodedRequest =
                                                              decodedRequest ===
                                                              ""
                                                                ? ""
                                                                : Buffer.from(
                                                                    JSON.stringify(
                                                                      decodedRequest
                                                                    )
                                                                  ).toString(
                                                                    "base64"
                                                                  );
                                                            generateChecksum(
                                                              encodedRequest,
                                                              path,
                                                              saltKey,
                                                              saltIndex
                                                            );
                                                            function generateChecksum(
                                                              encodedRequest,
                                                              path,
                                                              saltKey,
                                                              keyIndex
                                                            ) {
                                                              const checksum =
                                                                cjs
                                                                  .SHA256(
                                                                    encodedRequest +
                                                                      path +
                                                                      saltKey
                                                                  )
                                                                  .toString(
                                                                    cjs.enc.Hex
                                                                  );
                                                              // console.log("base64 request:", encodedRequest, "Api checksum: ", checksum);
                                                              xVerify =
                                                                checksum +
                                                                "###" +
                                                                keyIndex;
                                                            }
                                                            if (
                                                              encodedRequest ===
                                                              ""
                                                            )
                                                              body1 = "";
                                                            else
                                                              body1 =
                                                                JSON.stringify({
                                                                  request:
                                                                    encodedRequest,
                                                                });
                                                            options2 = {
                                                              method: "POST",
                                                              url: "https://mercury-uat.phonepe.com/v3/credit/backToSource",
                                                              headers: {
                                                                "Content-Type":
                                                                  "application/json",
                                                                "X-VERIFY":
                                                                  xVerify,
                                                              },
                                                              body: body1,
                                                            };
                                                            console.log(
                                                              " Level 2: Request data:"
                                                            ); //comment
                                                            console.log(
                                                              options2
                                                            ); //comment
                                                            ////////////////////////////////////////////////////////////////////////////////////////////////time out//////////////////////////////////////////////////////////////////////////////////////////////////
                                                            setTimeout(
                                                              function () {
                                                                request(
                                                                  options2,
                                                                  async function (
                                                                    error,
                                                                    response,
                                                                    body
                                                                  ) {
                                                                    if (error) {
                                                                      /////////need to handle here if error comes///////
                                                                      console.log(
                                                                        error
                                                                      );
                                                                    } else {
                                                                      var data =
                                                                        JSON.parse(
                                                                          body
                                                                        );
                                                                      console.log(
                                                                        "Level 2A :Response Body:"
                                                                      ); //comment
                                                                      //console.log(data);
                                                                      console.log(
                                                                        "Level 2A :REFUND API RESPONSE: " +
                                                                          data.success
                                                                      );
                                                                      console.log(
                                                                        data.code
                                                                      );
                                                                      switch (
                                                                        data.code
                                                                      ) {
                                                                        case "PAYMENT_SUCCESS":
                                                                          console.log(
                                                                            "Level 2A :Refund Process Completed..."
                                                                          );
                                                                          console.log(
                                                                            rid3
                                                                          );
                                                                          const srfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          console.log(
                                                                            "Flow end with REFUND SUCCESSFULLY PAYMENT_SUCCESS : 2 "
                                                                          );
                                                                          break;

                                                                        case "PAYMENT_ERROR":
                                                                          console.log(
                                                                            rid3
                                                                          );
                                                                          frfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          console.log(
                                                                            "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                          );
                                                                          /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                          console.log(
                                                                            "BLOCK:PAYMENT_ERROR :END  1 "
                                                                          );
                                                                          //    //console.log(svtr);
                                                                          //    const rid3 = await createRefund(svtr.id);
                                                                          //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                                          //    console.log(rid3);
                                                                          //when request complete then add here code for call refund api again and handle errors and pending process
                                                                          break;
                                                                        case "INTERNAL_SERVER_ERROR":
                                                                        case "TIMED_OUT":
                                                                        case "PAYMENT_PENDING":
                                                                          // case 'PAYMENT_ERROR'://need to remove
                                                                          console.log(
                                                                            "Check Status API calling...."
                                                                          );
                                                                          console.log(
                                                                            "Level 2A : Refund Process status : " +
                                                                              data.code
                                                                          );
                                                                          const prfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:Check_Status 3A      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                          console.log(
                                                                            "BLOCK:Check_Status 3A"
                                                                          );
                                                                          //console.log(prfd);
                                                                          //console.log(svtr.id);
                                                                          const checksum =
                                                                            cjs
                                                                              .SHA256(
                                                                                "/v3/transaction/" +
                                                                                  merchantId +
                                                                                  "/" +
                                                                                  rid3 +
                                                                                  "/status" +
                                                                                  saltKey
                                                                              )
                                                                              .toString(
                                                                                cjs
                                                                                  .enc
                                                                                  .Hex
                                                                              );
                                                                          //console.log("Api checksum: ", checksum);
                                                                          xVerify =
                                                                            checksum +
                                                                            "###" +
                                                                            saltIndex;
                                                                          //console.log(xVerify);
                                                                          options =
                                                                            {
                                                                              method:
                                                                                "GET",
                                                                              url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                                                              headers:
                                                                                {
                                                                                  "Content-Type":
                                                                                    "application/json",
                                                                                  "X-VERIFY":
                                                                                    xVerify,
                                                                                },
                                                                            };
                                                                          console.log(
                                                                            "Level 2A : Request data:"
                                                                          ); //comment
                                                                          console.log(
                                                                            options
                                                                          ); //comment
                                                                          ///////////////////////////////////////////////////////////////time out/////////////////////////////////////////////////////
                                                                          setTimeout(
                                                                            function () {
                                                                              request(
                                                                                options,
                                                                                async function (
                                                                                  error,
                                                                                  response,
                                                                                  body
                                                                                ) {
                                                                                  if (
                                                                                    error
                                                                                  ) {
                                                                                    /////////need to handle here if error comes///////
                                                                                    console.log(
                                                                                      error
                                                                                    );
                                                                                  } else {
                                                                                    var data =
                                                                                      JSON.parse(
                                                                                        body
                                                                                      );
                                                                                    console.log(
                                                                                      " Level 2B :Check Status Response Body:"
                                                                                    ); //comment
                                                                                    //console.log(data);
                                                                                    console.log(
                                                                                      "Level 2B : Check Status API RESPONSE: " +
                                                                                        data.success
                                                                                    );
                                                                                    console.log(
                                                                                      data.code
                                                                                    );
                                                                                    switch (
                                                                                      data.code
                                                                                    ) {
                                                                                      case "PAYMENT_SUCCESS":
                                                                                        console.log(
                                                                                          "Level 2B : Check Status Process Completed..."
                                                                                        );
                                                                                        console.log(
                                                                                          rid3
                                                                                        );
                                                                                        const srfd =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        console.log(
                                                                                          "Flow end with CHECK STATUS PAYMENT_SUCCESS : 3 "
                                                                                        );
                                                                                        break;

                                                                                      case "PAYMENT_ERROR":
                                                                                        console.log(
                                                                                          rid3
                                                                                        );
                                                                                        frfd =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        console.log(
                                                                                          "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                                        );
                                                                                        /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3A:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                        console.log(
                                                                                          "BLOCK:PAYMENT_ERROR :END  3A:1 "
                                                                                        );
                                                                                        //    //console.log(svtr);
                                                                                        //    const rid4 = await createRefund(svtr.id);
                                                                                        //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                                                        //    console.log(rid4);
                                                                                        //when request complete then add here code for call refund api again and handle errors and pending process
                                                                                        break;

                                                                                      case "INTERNAL_SERVER_ERROR":
                                                                                      case "TIMED_OUT":
                                                                                      case "PAYMENT_PENDING":
                                                                                        /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@        BLOCK:Check_Status 3B     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                        console.log(
                                                                                          "BLOCK:Check_Status 3B "
                                                                                        );
                                                                                        console.log(
                                                                                          "Level 2B : Refund Process status : " +
                                                                                            data.code
                                                                                        );
                                                                                        // console.log(data.data.transactionId);
                                                                                        // console.log(data.data.providerReferenceId);
                                                                                        const prfd =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        //console.log(prfd);
                                                                                        // console.log(svtr.id);
                                                                                        const checksum =
                                                                                          cjs
                                                                                            .SHA256(
                                                                                              "/v3/transaction/" +
                                                                                                merchantId +
                                                                                                "/" +
                                                                                                rid3 +
                                                                                                "/status" +
                                                                                                saltKey
                                                                                            )
                                                                                            .toString(
                                                                                              cjs
                                                                                                .enc
                                                                                                .Hex
                                                                                            );
                                                                                        //console.log("Api checksum: ", checksum);
                                                                                        xVerify =
                                                                                          checksum +
                                                                                          "###" +
                                                                                          saltIndex;
                                                                                        //console.log(xVerify);
                                                                                        const options =
                                                                                          {
                                                                                            method:
                                                                                              "GET",
                                                                                            url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                                                                            headers:
                                                                                              {
                                                                                                "Content-Type":
                                                                                                  "application/json",
                                                                                                "X-VERIFY":
                                                                                                  xVerify,
                                                                                              },
                                                                                          };
                                                                                        console.log(
                                                                                          " Level 2C :Request data:"
                                                                                        ); //comment
                                                                                        console.log(
                                                                                          options
                                                                                        ); //comment
                                                                                        /////////////////////////////////////////////time out///////////////////////////////////////////////////////////////////
                                                                                        setTimeout(
                                                                                          function () {
                                                                                            request(
                                                                                              options,
                                                                                              async function (
                                                                                                error,
                                                                                                response,
                                                                                                body
                                                                                              ) {
                                                                                                if (
                                                                                                  error
                                                                                                ) {
                                                                                                  /////////need to handle here if error comes///////
                                                                                                  console.log(
                                                                                                    error
                                                                                                  );
                                                                                                } else {
                                                                                                  var data =
                                                                                                    JSON.parse(
                                                                                                      body
                                                                                                    );
                                                                                                  console.log(
                                                                                                    " Level 2C :Check Status Response Body:"
                                                                                                  ); //comment
                                                                                                  // console.log(data.data.transactionId);
                                                                                                  // console.log(data.data.providerReferenceId);
                                                                                                  console.log(
                                                                                                    "Level 2C :Check Status  API RESPONSE: " +
                                                                                                      data.success
                                                                                                  );
                                                                                                  console.log(
                                                                                                    data.code
                                                                                                  );
                                                                                                  switch (
                                                                                                    data.code
                                                                                                  ) {
                                                                                                    case "PAYMENT_SUCCESS":
                                                                                                      console.log(
                                                                                                        "Level 2C : Refund Process Completed..."
                                                                                                      );
                                                                                                      console.log(
                                                                                                        rid2
                                                                                                      );
                                                                                                      const srfd =
                                                                                                        await storeRefund(
                                                                                                          data,
                                                                                                          rid3
                                                                                                        );
                                                                                                      console.log(
                                                                                                        "Flow end with CHECK_STATUS SUCCESSFULLY PAYMENT_SUCCESS : 4 "
                                                                                                      );
                                                                                                      break;
                                                                                                    case "PAYMENT_ERROR":
                                                                                                      console.log(
                                                                                                        rid3
                                                                                                      );
                                                                                                      frfd =
                                                                                                        await storeRefund(
                                                                                                          data,
                                                                                                          rid3
                                                                                                        );
                                                                                                      console.log(
                                                                                                        "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                                                      );
                                                                                                      /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3B:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                                      console.log(
                                                                                                        "BLOCK:PAYMENT_ERROR :END  3c:1 "
                                                                                                      );
                                                                                                      //    //console.log(svtr);
                                                                                                      //    const rid3 = await createRefund(svtr.id);
                                                                                                      //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                                                                      //    console.log(rid3);
                                                                                                      //when request complete then add here code for call refund api again and handle errors and pending process
                                                                                                      break;

                                                                                                    case "INTERNAL_SERVER_ERROR":
                                                                                                    case "TIMED_OUT":
                                                                                                    case "PAYMENT_PENDING":
                                                                                                      /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@        BLOCK:Check_Status 3C     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                                      console.log(
                                                                                                        "BLOCK:Check_Status 3C "
                                                                                                      );
                                                                                                      console.log(
                                                                                                        "Level 2B : Refund Process status : " +
                                                                                                          data.code
                                                                                                      );
                                                                                                      // console.log(data.data.transactionId);
                                                                                                      // console.log(data.data.providerReferenceId);
                                                                                                      const prfd =
                                                                                                        await storeRefund(
                                                                                                          data,
                                                                                                          rid3
                                                                                                        );
                                                                                                      //console.log(prfd);
                                                                                                      // console.log(svtr.id);
                                                                                                      const checksum =
                                                                                                        cjs
                                                                                                          .SHA256(
                                                                                                            "/v3/transaction/" +
                                                                                                              merchantId +
                                                                                                              "/" +
                                                                                                              rid3 +
                                                                                                              "/status" +
                                                                                                              saltKey
                                                                                                          )
                                                                                                          .toString(
                                                                                                            cjs
                                                                                                              .enc
                                                                                                              .Hex
                                                                                                          );
                                                                                                      //console.log("Api checksum: ", checksum);
                                                                                                      xVerify =
                                                                                                        checksum +
                                                                                                        "###" +
                                                                                                        saltIndex;
                                                                                                      //console.log(xVerify);
                                                                                                      const options =
                                                                                                        {
                                                                                                          method:
                                                                                                            "GET",
                                                                                                          url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                                                                                          headers:
                                                                                                            {
                                                                                                              "Content-Type":
                                                                                                                "application/json",
                                                                                                              "X-VERIFY":
                                                                                                                xVerify,
                                                                                                            },
                                                                                                        };
                                                                                                      console.log(
                                                                                                        " Level 2C :Request data:"
                                                                                                      ); //comment
                                                                                                      console.log(
                                                                                                        options
                                                                                                      ); //comment
                                                                                                      /////////////////////////////////////////////time out///////////////////////////////////////////////////////////////////
                                                                                                      setTimeout(
                                                                                                        function () {
                                                                                                          request(
                                                                                                            options,
                                                                                                            async function (
                                                                                                              error,
                                                                                                              response,
                                                                                                              body
                                                                                                            ) {
                                                                                                              if (
                                                                                                                error
                                                                                                              ) {
                                                                                                                /////////need to handle here if error comes///////
                                                                                                                console.log(
                                                                                                                  error
                                                                                                                );
                                                                                                              } else {
                                                                                                                var data =
                                                                                                                  JSON.parse(
                                                                                                                    body
                                                                                                                  );
                                                                                                                console.log(
                                                                                                                  " Level 2C :Check Status Response Body:"
                                                                                                                ); //comment
                                                                                                                // console.log(data.data.transactionId);
                                                                                                                // console.log(data.data.providerReferenceId);
                                                                                                                console.log(
                                                                                                                  "Level 2C :Check Status  API RESPONSE: " +
                                                                                                                    data.success
                                                                                                                );
                                                                                                                console.log(
                                                                                                                  data.code
                                                                                                                );
                                                                                                                switch (
                                                                                                                  data.code
                                                                                                                ) {
                                                                                                                  case "PAYMENT_SUCCESS":
                                                                                                                    console.log(
                                                                                                                      "Level 2C : Refund Process Completed..."
                                                                                                                    );
                                                                                                                    console.log(
                                                                                                                      rid2
                                                                                                                    );
                                                                                                                    const srfd =
                                                                                                                      await storeRefund(
                                                                                                                        data,
                                                                                                                        rid3
                                                                                                                      );
                                                                                                                    console.log(
                                                                                                                      "Flow end with CHECK_STATUS SUCCESSFULLY PAYMENT_SUCCESS : 4 "
                                                                                                                    );
                                                                                                                    break;
                                                                                                                  case "PAYMENT_ERROR":
                                                                                                                    console.log(
                                                                                                                      rid3
                                                                                                                    );
                                                                                                                    frfd =
                                                                                                                      await storeRefund(
                                                                                                                        data,
                                                                                                                        rid3
                                                                                                                      );
                                                                                                                    console.log(
                                                                                                                      "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                                                                    );
                                                                                                                    /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3C:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                                                    console.log(
                                                                                                                      "BLOCK:PAYMENT_ERROR :END  3c:1 "
                                                                                                                    );
                                                                                                                    //    //console.log(svtr);
                                                                                                                    //    const rid3 = await createRefund(svtr.id);
                                                                                                                    //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                                                                                    //    console.log(rid3);
                                                                                                                    //when request complete then add here code for call refund api again and handle errors and pending process
                                                                                                                    break;

                                                                                                                  case "INTERNAL_SERVER_ERROR":
                                                                                                                  case "TIMED_OUT":
                                                                                                                  case "PAYMENT_PENDING":
                                                                                                                    /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:INTERNAL_SERVER_ERROR :END  3C:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                                                    console.log(
                                                                                                                      rid2
                                                                                                                    );
                                                                                                                    frfd =
                                                                                                                      await storeRefund(
                                                                                                                        data,
                                                                                                                        rid3
                                                                                                                      );
                                                                                                                    console.log(
                                                                                                                      frfd
                                                                                                                    );
                                                                                                                    console.log(
                                                                                                                      "FINAL Flow end with CHECK_STATUS FAILED PAYMENT_ERROR,INTERNAL_SERVER_ERROR,TIMED_OUT,PAYMENT_PENDING : 3 "
                                                                                                                    );
                                                                                                                    //when request complete then add here code for call refund api again and handle errors and pending process
                                                                                                                    break;
                                                                                                                  default:
                                                                                                                    console.log(
                                                                                                                      rid3
                                                                                                                    );
                                                                                                                    frfd3 =
                                                                                                                      await storeRefund(
                                                                                                                        data,
                                                                                                                        rid3
                                                                                                                      );
                                                                                                                    console.log(
                                                                                                                      frfd3
                                                                                                                    );
                                                                                                                    console.log(
                                                                                                                      "Flow end with DEFAULT SWITCH CASE : 1 "
                                                                                                                    );
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          );
                                                                                                        },
                                                                                                        delayTime
                                                                                                      );
                                                                                                      break;
                                                                                                    default:
                                                                                                      console.log(
                                                                                                        rid3
                                                                                                      );
                                                                                                      frfd3 =
                                                                                                        await storeRefund(
                                                                                                          data,
                                                                                                          rid3
                                                                                                        );
                                                                                                      console.log(
                                                                                                        frfd3
                                                                                                      );
                                                                                                      console.log(
                                                                                                        "Flow end with DEFAULT SWITCH CASE : 1 "
                                                                                                      );
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            );
                                                                                          },
                                                                                          delayTime
                                                                                        );
                                                                                        break;
                                                                                      default:
                                                                                        console.log(
                                                                                          rid3
                                                                                        );
                                                                                        frfd3 =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        console.log(
                                                                                          frfd3
                                                                                        );
                                                                                        console.log(
                                                                                          "Flow end with DEFAULT SWITCH CASE : 2 "
                                                                                        );
                                                                                    }
                                                                                  }
                                                                                }
                                                                              );
                                                                            },
                                                                            delayTime
                                                                          );
                                                                          break;
                                                                        default:
                                                                          console.log(
                                                                            rid3
                                                                          );
                                                                          frfd3 =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid3
                                                                            );
                                                                          console.log(
                                                                            frfd3
                                                                          );
                                                                          console.log(
                                                                            "Flow end with DEFAULT SWITCH CASE : 3 "
                                                                          );
                                                                      }
                                                                    }
                                                                  }
                                                                );
                                                              },
                                                              delayTime
                                                            );
                                                            break;

                                                          case "INTERNAL_SERVER_ERROR":
                                                          case "TIMED_OUT":
                                                          case "PAYMENT_PENDING":
                                                            console.log(
                                                              "Level 2B : Refund Process status : " +
                                                                data.code
                                                            );
                                                            // console.log(data.data.transactionId);
                                                            // console.log(data.data.providerReferenceId);
                                                            const prfd =
                                                              await storeRefund(
                                                                data,
                                                                rid2
                                                              );
                                                            //console.log(prfd);
                                                            // console.log(svtr.id);
                                                            const checksum = cjs
                                                              .SHA256(
                                                                "/v3/transaction/" +
                                                                  merchantId +
                                                                  "/" +
                                                                  rid2 +
                                                                  "/status" +
                                                                  saltKey
                                                              )
                                                              .toString(
                                                                cjs.enc.Hex
                                                              );
                                                            //console.log("Api checksum: ", checksum);
                                                            xVerify =
                                                              checksum +
                                                              "###" +
                                                              saltIndex;
                                                            //console.log(xVerify);
                                                            const options = {
                                                              method: "GET",
                                                              url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid2}/status`,
                                                              headers: {
                                                                "Content-Type":
                                                                  "application/json",
                                                                "X-VERIFY":
                                                                  xVerify,
                                                              },
                                                            };
                                                            console.log(
                                                              " Level 2C :Request data:"
                                                            ); //comment
                                                            console.log(
                                                              options
                                                            ); //comment
                                                            /////////////////////////////////////////////time out///////////////////////////////////////////////////////////////////
                                                            setTimeout(
                                                              function () {
                                                                request(
                                                                  options,
                                                                  async function (
                                                                    error,
                                                                    response,
                                                                    body
                                                                  ) {
                                                                    if (error) {
                                                                      /////////need to handle here if error comes///////
                                                                      console.log(
                                                                        error
                                                                      );
                                                                    } else {
                                                                      var data =
                                                                        JSON.parse(
                                                                          body
                                                                        );
                                                                      console.log(
                                                                        " Level 2C :Check Status Response Body:"
                                                                      ); //comment
                                                                      // console.log(data.data.transactionId);
                                                                      // console.log(data.data.providerReferenceId);
                                                                      console.log(
                                                                        "Level 2C :Check Status  API RESPONSE: " +
                                                                          data.success
                                                                      );
                                                                      console.log(
                                                                        data.code
                                                                      );
                                                                      switch (
                                                                        data.code
                                                                      ) {
                                                                        case "PAYMENT_SUCCESS":
                                                                          console.log(
                                                                            "Level 2C : Refund Process Completed..."
                                                                          );
                                                                          console.log(
                                                                            rid2
                                                                          );
                                                                          const srfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid2
                                                                            );
                                                                          console.log(
                                                                            "Flow end with CHECK_STATUS SUCCESSFULLY PAYMENT_SUCCESS : 4 "
                                                                          );
                                                                          break;
                                                                        case "PAYMENT_ERROR":
                                                                          console.log(
                                                                            rid2
                                                                          );
                                                                          frfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid2
                                                                            );
                                                                          console.log(
                                                                            "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                          );

                                                                          //console.log(svtr);
                                                                          /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:REFUND 3      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                          console.log(
                                                                            "BLOCK:REFUND 3"
                                                                          );
                                                                          const rid3 =
                                                                            await createRefund(
                                                                              svtr.id
                                                                            );
                                                                          console.log(
                                                                            "Level 2A: NEW REFUND ID GENERATED.."
                                                                          ); /////////////////////////////////////
                                                                          console.log(
                                                                            rid3
                                                                          );
                                                                          //when request complete then add here code for call refund api again and handle errors and pending process
                                                                          //when request complete then add here code for call refund api again and handle errors and pending process
                                                                          console.log(
                                                                            "Level 2: Calling Refund API"
                                                                          );
                                                                          const url =
                                                                            "mercury-uat.phonepe.com";
                                                                          const path =
                                                                            "/v3/credit/backToSource";
                                                                          saltKey =
                                                                            "0afb5aa4-2206-4ea0-b081-fb94270b8c96";
                                                                          saltIndex = 1;
                                                                          const decodedRequest =
                                                                            {
                                                                              merchantId:
                                                                                merchantId,
                                                                              transactionId:
                                                                                rid3,
                                                                              providerReferenceId:
                                                                                svtr.providerReferenceId,
                                                                              amount:
                                                                                rfAmount,
                                                                              message:
                                                                                "Incorrect Amount",
                                                                            };
                                                                          // console.log(decodedRequest);
                                                                          let encodedRequest =
                                                                            decodedRequest ===
                                                                            ""
                                                                              ? ""
                                                                              : Buffer.from(
                                                                                  JSON.stringify(
                                                                                    decodedRequest
                                                                                  )
                                                                                ).toString(
                                                                                  "base64"
                                                                                );
                                                                          generateChecksum(
                                                                            encodedRequest,
                                                                            path,
                                                                            saltKey,
                                                                            saltIndex
                                                                          );
                                                                          function generateChecksum(
                                                                            encodedRequest,
                                                                            path,
                                                                            saltKey,
                                                                            keyIndex
                                                                          ) {
                                                                            const checksum =
                                                                              cjs
                                                                                .SHA256(
                                                                                  encodedRequest +
                                                                                    path +
                                                                                    saltKey
                                                                                )
                                                                                .toString(
                                                                                  cjs
                                                                                    .enc
                                                                                    .Hex
                                                                                );
                                                                            // console.log("base64 request:", encodedRequest, "Api checksum: ", checksum);
                                                                            xVerify =
                                                                              checksum +
                                                                              "###" +
                                                                              keyIndex;
                                                                          }
                                                                          if (
                                                                            encodedRequest ===
                                                                            ""
                                                                          )
                                                                            body1 =
                                                                              "";
                                                                          else
                                                                            body1 =
                                                                              JSON.stringify(
                                                                                {
                                                                                  request:
                                                                                    encodedRequest,
                                                                                }
                                                                              );
                                                                          options2 =
                                                                            {
                                                                              method:
                                                                                "POST",
                                                                              url: "https://mercury-uat.phonepe.com/v3/credit/backToSource",
                                                                              headers:
                                                                                {
                                                                                  "Content-Type":
                                                                                    "application/json",
                                                                                  "X-VERIFY":
                                                                                    xVerify,
                                                                                },
                                                                              body: body1,
                                                                            };
                                                                          console.log(
                                                                            " Level 2: Request data:"
                                                                          ); //comment
                                                                          console.log(
                                                                            options2
                                                                          ); //comment
                                                                          ////////////////////////////////////////////////////////////////////////////////////////////////time out//////////////////////////////////////////////////////////////////////////////////////////////////
                                                                          setTimeout(
                                                                            function () {
                                                                              request(
                                                                                options2,
                                                                                async function (
                                                                                  error,
                                                                                  response,
                                                                                  body
                                                                                ) {
                                                                                  if (
                                                                                    error
                                                                                  ) {
                                                                                    /////////need to handle here if error comes///////
                                                                                    console.log(
                                                                                      error
                                                                                    );
                                                                                  } else {
                                                                                    var data =
                                                                                      JSON.parse(
                                                                                        body
                                                                                      );
                                                                                    console.log(
                                                                                      "Level 2A :Response Body:"
                                                                                    ); //comment
                                                                                    //console.log(data);
                                                                                    console.log(
                                                                                      "Level 2A :REFUND API RESPONSE: " +
                                                                                        data.success
                                                                                    );
                                                                                    console.log(
                                                                                      data.code
                                                                                    );
                                                                                    switch (
                                                                                      data.code
                                                                                    ) {
                                                                                      case "PAYMENT_SUCCESS":
                                                                                        console.log(
                                                                                          "Level 2A :Refund Process Completed..."
                                                                                        );
                                                                                        console.log(
                                                                                          rid3
                                                                                        );
                                                                                        const srfd =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        console.log(
                                                                                          "Flow end with REFUND SUCCESSFULLY PAYMENT_SUCCESS : 2 "
                                                                                        );
                                                                                        break;

                                                                                      case "PAYMENT_ERROR":
                                                                                        console.log(
                                                                                          rid3
                                                                                        );
                                                                                        frfd =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        console.log(
                                                                                          "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                                        );
                                                                                        /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                        console.log(
                                                                                          "BLOCK:PAYMENT_ERROR :END  1 "
                                                                                        );
                                                                                        //    //console.log(svtr);
                                                                                        //    const rid3 = await createRefund(svtr.id);
                                                                                        //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                                                        //    console.log(rid3);
                                                                                        //when request complete then add here code for call refund api again and handle errors and pending process
                                                                                        break;
                                                                                      case "INTERNAL_SERVER_ERROR":
                                                                                      case "TIMED_OUT":
                                                                                      case "PAYMENT_PENDING":
                                                                                        // case 'PAYMENT_ERROR'://need to remove
                                                                                        console.log(
                                                                                          "Check Status API calling...."
                                                                                        );
                                                                                        console.log(
                                                                                          "Level 2A : Refund Process status : " +
                                                                                            data.code
                                                                                        );
                                                                                        const prfd =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:Check_Status 3A      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                        console.log(
                                                                                          "BLOCK:Check_Status 3A"
                                                                                        );
                                                                                        //console.log(prfd);
                                                                                        //console.log(svtr.id);
                                                                                        const checksum =
                                                                                          cjs
                                                                                            .SHA256(
                                                                                              "/v3/transaction/" +
                                                                                                merchantId +
                                                                                                "/" +
                                                                                                rid3 +
                                                                                                "/status" +
                                                                                                saltKey
                                                                                            )
                                                                                            .toString(
                                                                                              cjs
                                                                                                .enc
                                                                                                .Hex
                                                                                            );
                                                                                        //console.log("Api checksum: ", checksum);
                                                                                        xVerify =
                                                                                          checksum +
                                                                                          "###" +
                                                                                          saltIndex;
                                                                                        //console.log(xVerify);
                                                                                        options =
                                                                                          {
                                                                                            method:
                                                                                              "GET",
                                                                                            url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                                                                            headers:
                                                                                              {
                                                                                                "Content-Type":
                                                                                                  "application/json",
                                                                                                "X-VERIFY":
                                                                                                  xVerify,
                                                                                              },
                                                                                          };
                                                                                        console.log(
                                                                                          "Level 2A : Request data:"
                                                                                        ); //comment
                                                                                        console.log(
                                                                                          options
                                                                                        ); //comment
                                                                                        ///////////////////////////////////////////////////////////////time out/////////////////////////////////////////////////////
                                                                                        setTimeout(
                                                                                          function () {
                                                                                            request(
                                                                                              options,
                                                                                              async function (
                                                                                                error,
                                                                                                response,
                                                                                                body
                                                                                              ) {
                                                                                                if (
                                                                                                  error
                                                                                                ) {
                                                                                                  /////////need to handle here if error comes///////
                                                                                                  console.log(
                                                                                                    error
                                                                                                  );
                                                                                                } else {
                                                                                                  var data =
                                                                                                    JSON.parse(
                                                                                                      body
                                                                                                    );
                                                                                                  console.log(
                                                                                                    " Level 2B :Check Status Response Body:"
                                                                                                  ); //comment
                                                                                                  //console.log(data);
                                                                                                  console.log(
                                                                                                    "Level 2B : Check Status API RESPONSE: " +
                                                                                                      data.success
                                                                                                  );
                                                                                                  console.log(
                                                                                                    data.code
                                                                                                  );
                                                                                                  switch (
                                                                                                    data.code
                                                                                                  ) {
                                                                                                    case "PAYMENT_SUCCESS":
                                                                                                      console.log(
                                                                                                        "Level 2B : Check Status Process Completed..."
                                                                                                      );
                                                                                                      console.log(
                                                                                                        rid3
                                                                                                      );
                                                                                                      const srfd =
                                                                                                        await storeRefund(
                                                                                                          data,
                                                                                                          rid3
                                                                                                        );
                                                                                                      console.log(
                                                                                                        "Flow end with CHECK STATUS PAYMENT_SUCCESS : 3 "
                                                                                                      );
                                                                                                      break;

                                                                                                    case "PAYMENT_ERROR":
                                                                                                      console.log(
                                                                                                        rid3
                                                                                                      );
                                                                                                      frfd =
                                                                                                        await storeRefund(
                                                                                                          data,
                                                                                                          rid3
                                                                                                        );
                                                                                                      console.log(
                                                                                                        "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                                                      );
                                                                                                      /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3A:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                                      console.log(
                                                                                                        "BLOCK:PAYMENT_ERROR :END  3A:1 "
                                                                                                      );
                                                                                                      //    //console.log(svtr);
                                                                                                      //    const rid4 = await createRefund(svtr.id);
                                                                                                      //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                                                                      //    console.log(rid4);
                                                                                                      //when request complete then add here code for call refund api again and handle errors and pending process
                                                                                                      break;

                                                                                                    case "INTERNAL_SERVER_ERROR":
                                                                                                    case "TIMED_OUT":
                                                                                                    case "PAYMENT_PENDING":
                                                                                                      /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@        BLOCK:Check_Status 3B     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                                      console.log(
                                                                                                        "BLOCK:Check_Status 3B "
                                                                                                      );
                                                                                                      console.log(
                                                                                                        "Level 2B : Refund Process status : " +
                                                                                                          data.code
                                                                                                      );
                                                                                                      // console.log(data.data.transactionId);
                                                                                                      // console.log(data.data.providerReferenceId);
                                                                                                      const prfd =
                                                                                                        await storeRefund(
                                                                                                          data,
                                                                                                          rid3
                                                                                                        );
                                                                                                      //console.log(prfd);
                                                                                                      // console.log(svtr.id);
                                                                                                      const checksum =
                                                                                                        cjs
                                                                                                          .SHA256(
                                                                                                            "/v3/transaction/" +
                                                                                                              merchantId +
                                                                                                              "/" +
                                                                                                              rid3 +
                                                                                                              "/status" +
                                                                                                              saltKey
                                                                                                          )
                                                                                                          .toString(
                                                                                                            cjs
                                                                                                              .enc
                                                                                                              .Hex
                                                                                                          );
                                                                                                      //console.log("Api checksum: ", checksum);
                                                                                                      xVerify =
                                                                                                        checksum +
                                                                                                        "###" +
                                                                                                        saltIndex;
                                                                                                      //console.log(xVerify);
                                                                                                      const options =
                                                                                                        {
                                                                                                          method:
                                                                                                            "GET",
                                                                                                          url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                                                                                          headers:
                                                                                                            {
                                                                                                              "Content-Type":
                                                                                                                "application/json",
                                                                                                              "X-VERIFY":
                                                                                                                xVerify,
                                                                                                            },
                                                                                                        };
                                                                                                      console.log(
                                                                                                        " Level 2C :Request data:"
                                                                                                      ); //comment
                                                                                                      console.log(
                                                                                                        options
                                                                                                      ); //comment
                                                                                                      /////////////////////////////////////////////time out///////////////////////////////////////////////////////////////////
                                                                                                      setTimeout(
                                                                                                        function () {
                                                                                                          request(
                                                                                                            options,
                                                                                                            async function (
                                                                                                              error,
                                                                                                              response,
                                                                                                              body
                                                                                                            ) {
                                                                                                              if (
                                                                                                                error
                                                                                                              ) {
                                                                                                                /////////need to handle here if error comes///////
                                                                                                                console.log(
                                                                                                                  error
                                                                                                                );
                                                                                                              } else {
                                                                                                                var data =
                                                                                                                  JSON.parse(
                                                                                                                    body
                                                                                                                  );
                                                                                                                console.log(
                                                                                                                  " Level 2C :Check Status Response Body:"
                                                                                                                ); //comment
                                                                                                                // console.log(data.data.transactionId);
                                                                                                                // console.log(data.data.providerReferenceId);
                                                                                                                console.log(
                                                                                                                  "Level 2C :Check Status  API RESPONSE: " +
                                                                                                                    data.success
                                                                                                                );
                                                                                                                console.log(
                                                                                                                  data.code
                                                                                                                );
                                                                                                                switch (
                                                                                                                  data.code
                                                                                                                ) {
                                                                                                                  case "PAYMENT_SUCCESS":
                                                                                                                    console.log(
                                                                                                                      "Level 2C : Refund Process Completed..."
                                                                                                                    );
                                                                                                                    console.log(
                                                                                                                      rid2
                                                                                                                    );
                                                                                                                    const srfd =
                                                                                                                      await storeRefund(
                                                                                                                        data,
                                                                                                                        rid3
                                                                                                                      );
                                                                                                                    console.log(
                                                                                                                      "Flow end with CHECK_STATUS SUCCESSFULLY PAYMENT_SUCCESS : 4 "
                                                                                                                    );
                                                                                                                    break;
                                                                                                                  case "PAYMENT_ERROR":
                                                                                                                    console.log(
                                                                                                                      rid3
                                                                                                                    );
                                                                                                                    frfd =
                                                                                                                      await storeRefund(
                                                                                                                        data,
                                                                                                                        rid3
                                                                                                                      );
                                                                                                                    console.log(
                                                                                                                      "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                                                                    );
                                                                                                                    /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3B:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                                                    console.log(
                                                                                                                      "BLOCK:PAYMENT_ERROR :END  3c:1 "
                                                                                                                    );
                                                                                                                    //    //console.log(svtr);
                                                                                                                    //    const rid3 = await createRefund(svtr.id);
                                                                                                                    //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                                                                                    //    console.log(rid3);
                                                                                                                    //when request complete then add here code for call refund api again and handle errors and pending process
                                                                                                                    break;

                                                                                                                  case "INTERNAL_SERVER_ERROR":
                                                                                                                  case "TIMED_OUT":
                                                                                                                  case "PAYMENT_PENDING":
                                                                                                                    /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@        BLOCK:Check_Status 3C     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                                                    console.log(
                                                                                                                      "BLOCK:Check_Status 3C "
                                                                                                                    );
                                                                                                                    console.log(
                                                                                                                      "Level 2B : Refund Process status : " +
                                                                                                                        data.code
                                                                                                                    );
                                                                                                                    // console.log(data.data.transactionId);
                                                                                                                    // console.log(data.data.providerReferenceId);
                                                                                                                    const prfd =
                                                                                                                      await storeRefund(
                                                                                                                        data,
                                                                                                                        rid3
                                                                                                                      );
                                                                                                                    //console.log(prfd);
                                                                                                                    // console.log(svtr.id);
                                                                                                                    const checksum =
                                                                                                                      cjs
                                                                                                                        .SHA256(
                                                                                                                          "/v3/transaction/" +
                                                                                                                            merchantId +
                                                                                                                            "/" +
                                                                                                                            rid3 +
                                                                                                                            "/status" +
                                                                                                                            saltKey
                                                                                                                        )
                                                                                                                        .toString(
                                                                                                                          cjs
                                                                                                                            .enc
                                                                                                                            .Hex
                                                                                                                        );
                                                                                                                    //console.log("Api checksum: ", checksum);
                                                                                                                    xVerify =
                                                                                                                      checksum +
                                                                                                                      "###" +
                                                                                                                      saltIndex;
                                                                                                                    //console.log(xVerify);
                                                                                                                    const options =
                                                                                                                      {
                                                                                                                        method:
                                                                                                                          "GET",
                                                                                                                        url: `https://mercury-uat.phonepe.com/v3/transaction/${merchantId}/${rid3}/status`,
                                                                                                                        headers:
                                                                                                                          {
                                                                                                                            "Content-Type":
                                                                                                                              "application/json",
                                                                                                                            "X-VERIFY":
                                                                                                                              xVerify,
                                                                                                                          },
                                                                                                                      };
                                                                                                                    console.log(
                                                                                                                      " Level 2C :Request data:"
                                                                                                                    ); //comment
                                                                                                                    console.log(
                                                                                                                      options
                                                                                                                    ); //comment
                                                                                                                    /////////////////////////////////////////////time out///////////////////////////////////////////////////////////////////
                                                                                                                    setTimeout(
                                                                                                                      function () {
                                                                                                                        request(
                                                                                                                          options,
                                                                                                                          async function (
                                                                                                                            error,
                                                                                                                            response,
                                                                                                                            body
                                                                                                                          ) {
                                                                                                                            if (
                                                                                                                              error
                                                                                                                            ) {
                                                                                                                              /////////need to handle here if error comes///////
                                                                                                                              console.log(
                                                                                                                                error
                                                                                                                              );
                                                                                                                            } else {
                                                                                                                              var data =
                                                                                                                                JSON.parse(
                                                                                                                                  body
                                                                                                                                );
                                                                                                                              console.log(
                                                                                                                                " Level 2C :Check Status Response Body:"
                                                                                                                              ); //comment
                                                                                                                              // console.log(data.data.transactionId);
                                                                                                                              // console.log(data.data.providerReferenceId);
                                                                                                                              console.log(
                                                                                                                                "Level 2C :Check Status  API RESPONSE: " +
                                                                                                                                  data.success
                                                                                                                              );
                                                                                                                              console.log(
                                                                                                                                data.code
                                                                                                                              );
                                                                                                                              switch (
                                                                                                                                data.code
                                                                                                                              ) {
                                                                                                                                case "PAYMENT_SUCCESS":
                                                                                                                                  console.log(
                                                                                                                                    "Level 2C : Refund Process Completed..."
                                                                                                                                  );
                                                                                                                                  console.log(
                                                                                                                                    rid2
                                                                                                                                  );
                                                                                                                                  const srfd =
                                                                                                                                    await storeRefund(
                                                                                                                                      data,
                                                                                                                                      rid3
                                                                                                                                    );
                                                                                                                                  console.log(
                                                                                                                                    "Flow end with CHECK_STATUS SUCCESSFULLY PAYMENT_SUCCESS : 4 "
                                                                                                                                  );
                                                                                                                                  break;
                                                                                                                                case "PAYMENT_ERROR":
                                                                                                                                  console.log(
                                                                                                                                    rid3
                                                                                                                                  );
                                                                                                                                  frfd =
                                                                                                                                    await storeRefund(
                                                                                                                                      data,
                                                                                                                                      rid3
                                                                                                                                    );
                                                                                                                                  console.log(
                                                                                                                                    "Flow end with REFUND FAILED PAYMENT_ERROR : 1 "
                                                                                                                                  );
                                                                                                                                  /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:PAYMENT_ERROR :END  3C:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                                                                  console.log(
                                                                                                                                    "BLOCK:PAYMENT_ERROR :END  3c:1 "
                                                                                                                                  );
                                                                                                                                  //    //console.log(svtr);
                                                                                                                                  //    const rid3 = await createRefund(svtr.id);
                                                                                                                                  //    console.log("Level 2A: NEW REFUND ID GENERATED..")/////////////////////////////////////
                                                                                                                                  //    console.log(rid3);
                                                                                                                                  //when request complete then add here code for call refund api again and handle errors and pending process
                                                                                                                                  break;

                                                                                                                                case "INTERNAL_SERVER_ERROR":
                                                                                                                                case "TIMED_OUT":
                                                                                                                                case "PAYMENT_PENDING":
                                                                                                                                  /////////////////////////////////////@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         BLOCK:INTERNAL_SERVER_ERROR :END  3C:1      @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////////////////////////////////////////
                                                                                                                                  console.log(
                                                                                                                                    rid2
                                                                                                                                  );
                                                                                                                                  frfd =
                                                                                                                                    await storeRefund(
                                                                                                                                      data,
                                                                                                                                      rid3
                                                                                                                                    );
                                                                                                                                  console.log(
                                                                                                                                    frfd
                                                                                                                                  );
                                                                                                                                  console.log(
                                                                                                                                    "FINAL Flow end with CHECK_STATUS FAILED PAYMENT_ERROR,INTERNAL_SERVER_ERROR,TIMED_OUT,PAYMENT_PENDING : 3 "
                                                                                                                                  );
                                                                                                                                  //when request complete then add here code for call refund api again and handle errors and pending process
                                                                                                                                  break;
                                                                                                                                default:
                                                                                                                                  console.log(
                                                                                                                                    rid3
                                                                                                                                  );
                                                                                                                                  frfd3 =
                                                                                                                                    await storeRefund(
                                                                                                                                      data,
                                                                                                                                      rid3
                                                                                                                                    );
                                                                                                                                  console.log(
                                                                                                                                    frfd3
                                                                                                                                  );
                                                                                                                                  console.log(
                                                                                                                                    "Flow end with DEFAULT SWITCH CASE : 1 "
                                                                                                                                  );
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        );
                                                                                                                      },
                                                                                                                      delayTime
                                                                                                                    );
                                                                                                                    break;
                                                                                                                  default:
                                                                                                                    console.log(
                                                                                                                      rid3
                                                                                                                    );
                                                                                                                    frfd3 =
                                                                                                                      await storeRefund(
                                                                                                                        data,
                                                                                                                        rid3
                                                                                                                      );
                                                                                                                    console.log(
                                                                                                                      frfd3
                                                                                                                    );
                                                                                                                    console.log(
                                                                                                                      "Flow end with DEFAULT SWITCH CASE : 1 "
                                                                                                                    );
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          );
                                                                                                        },
                                                                                                        delayTime
                                                                                                      );
                                                                                                      break;
                                                                                                    default:
                                                                                                      console.log(
                                                                                                        rid3
                                                                                                      );
                                                                                                      frfd3 =
                                                                                                        await storeRefund(
                                                                                                          data,
                                                                                                          rid3
                                                                                                        );
                                                                                                      console.log(
                                                                                                        frfd3
                                                                                                      );
                                                                                                      console.log(
                                                                                                        "Flow end with DEFAULT SWITCH CASE : 2 "
                                                                                                      );
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            );
                                                                                          },
                                                                                          delayTime
                                                                                        );
                                                                                        break;
                                                                                      default:
                                                                                        console.log(
                                                                                          rid3
                                                                                        );
                                                                                        frfd3 =
                                                                                          await storeRefund(
                                                                                            data,
                                                                                            rid3
                                                                                          );
                                                                                        console.log(
                                                                                          frfd3
                                                                                        );
                                                                                        console.log(
                                                                                          "Flow end with DEFAULT SWITCH CASE : 3 "
                                                                                        );
                                                                                    }
                                                                                  }
                                                                                }
                                                                              );
                                                                            },
                                                                            delayTime
                                                                          );
                                                                          break;

                                                                        case "INTERNAL_SERVER_ERROR":
                                                                        case "TIMED_OUT":
                                                                        case "PAYMENT_PENDING":
                                                                          console.log(
                                                                            rid2
                                                                          );
                                                                          frfd =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid2
                                                                            );
                                                                          console.log(
                                                                            frfd
                                                                          );
                                                                          console.log(
                                                                            "FINAL Flow end with CHECK_STATUS FAILED PAYMENT_ERROR,INTERNAL_SERVER_ERROR,TIMED_OUT,PAYMENT_PENDING : 3 "
                                                                          );
                                                                          //when request complete then add here code for call refund api again and handle errors and pending process
                                                                          break;
                                                                        default:
                                                                          console.log(
                                                                            rid2
                                                                          );
                                                                          frfd2 =
                                                                            await storeRefund(
                                                                              data,
                                                                              rid2
                                                                            );
                                                                          console.log(
                                                                            frfd2
                                                                          );
                                                                          console.log(
                                                                            "Flow end with DEFAULT SWITCH CASE : 1 "
                                                                          );
                                                                      }
                                                                    }
                                                                  }
                                                                );
                                                              },
                                                              delayTime
                                                            );
                                                            break;
                                                          default:
                                                            console.log(rid2);
                                                            frfd2 =
                                                              await storeRefund(
                                                                data,
                                                                rid2
                                                              );
                                                            console.log(frfd2);
                                                            console.log(
                                                              "Flow end with DEFAULT SWITCH CASE : 2 "
                                                            );
                                                        }
                                                      }
                                                    }
                                                  );
                                                }, delayTime);
                                                break;
                                              default:
                                                console.log(rid2);
                                                frfd2 = await storeRefund(
                                                  data,
                                                  rid2
                                                );
                                                console.log(frfd2);
                                                console.log(
                                                  "Flow end with DEFAULT SWITCH CASE : 3 "
                                                );
                                            }
                                          }
                                        }
                                      );
                                    }, delayTime);
                                    break;
                                  case "INTERNAL_SERVER_ERROR":
                                  case "TIMED_OUT":
                                  case "PAYMENT_PENDING":
                                    console.log(rid);
                                    frfd = await storeRefund(data, rid);
                                    console.log(frfd);
                                    console.log(
                                      "Flow end with CHECK_STATUS FAILED PAYMENT_ERROR : 6 "
                                    );
                                    //when request complete then add here code for call refund api again and handle errors and pending process
                                    break;
                                  default:
                                    console.log(rid);
                                    frfd2 = await storeRefund(data, rid);
                                    console.log(frfd2);
                                    console.log(
                                      "Flow end with DEFAULT SWITCH CASE : 7 "
                                    );
                                }
                              }
                            }
                          );
                        }, delayTime);
                        break;
                      default:
                        console.log(rid);
                        frfd2 = await storeRefund(data, rid);
                        console.log(frfd2);
                        console.log("Flow end with DEFAULT SWITCH CASE : 8 ");
                    }
                  }
                });
              }, delayTime);
              break;
            default:
              console.log(rid);
              frfd2 = await storeRefund(data, rid);
              console.log(frfd2);
              console.log("Flow end with DEFAULT SWITCH CASE : 9 ");
          }
        }
      });
    }
  } else {
    console.log("xVerify not matched");
  }
  res.status(200).send("success");
});
app.get(
  "/napkinvendmachine/:storeId/:terminalId/:merchantId",
  async (req, res) => {
    //    console.log(req.params);
    //  console.log(req.headers);
    // console.log(req.body);
    try {
      const savetransaction = await Callbacktransaction.findOne({
        $and: [
          { storeId: req.params.storeId },
          { terminalId: req.params.terminalId },
          { merchantId: req.params.merchantId },
          { napkinjob: false },
          { payResponseCode: "SUCCESS" },
        ],
      });
      console.log(savetransaction);
      if (savetransaction == null) {
        console.log("transaction not found");
        res.status(400).send("fail");
      } else {
        console.log("transaction found");
        if (
          savetransaction.payResponseCode == "SUCCESS" &&
          savetransaction.paymentState == "COMPLETED" &&
          savetransaction.code == "PAYMENT_SUCCESS" &&
          savetransaction.vendstatus == "VendPending"
        ) {
          console.log("success found");
          //res.status(200).send("success");
          savetransaction.napkinjob = true;
          savetransaction.vendstatus = "Complete";
          savetransaction.jobdone_date = new Date().now;
          let result = await savetransaction.save();
          console.log(result);
          res.status(200).json({ success: true });
        } else {
          console.log("fail found");
          res.status(404).json({ success: false });
        }
      }
    } catch (e) {
      res.status(500).json({ success: false });
      console.log(e);
    }
  }
);

app.get("/allEmployees",async (req,res)=> {
  const {machineId } = req.query;
  const DataArray = [];
  const filter = {};
  if (machineId) {
    filter.machine_id = machineId;
  }
  try {
    const employeeData = await Employee.find(filter);
    if(employeeData.length<=0){
       return res.status(200).json({ "message": "No employee found" });
    }
    employeeData.map((employee) => {
      const {iempid,card_number,employee_id,employee_name,email,manager_email,cost_center,department,cost_center_owner_name,company_id,machine_id } = employee;
      DataArray.push({ Employee_Id:iempid,Card_Number:card_number,Employee_Id:employee_id,Employee_Name:employee_name,Employee_Email:email,Manger_Email:manager_email,Cost_center:cost_center,Department:department,Cost_Center_Owner_Name:cost_center_owner_name,Comapany_Id:company_id,Machine_Id:machine_id });
    });
    
    const csvFields = ["Employee_Id", "Card_Number", "Employee_Id", "Employee_Name", "Employee_Email", "Manger_Email", "Cost_center", "Department", "Cost_Center_Owner_Name", "Comapany_Id", "Machine_Id"];
    const csvParser = new CsvParser({ csvFields });
    const csvData = csvParser.parse(DataArray);
    res.setHeader("Content-Type", "text/csv");
    res.setHeader(
      "Content-Disposition",
      "attachment; filename=RejectedCards.csv"
    );

    res.status(200).end(csvData);
  } catch (e) {
    res.status(200).json({ error: "server internal error" });
    console.log(e);
  }
});

//-----------------update credit balance of employees from machine------------------------//
// Update the cost limit of the employee with ID 123
cron.schedule('0 0 * * *', async() => {
    await Credittable.updateMany({machine_id:"SVZBLR0012"}, {$set: { credit_balance: 150 }}, {upsert: true}),
    (error, result) => {
          if (error) {
            console.error(error);
          } else {
            console.log('Cost limit updated successfully');
          }
        }
        // console.log("------------------------------working--------------------------")
});

//-------------------------checkMachineConnected--------------------------//
app.post("/checkMachineConnected", async(req,res) => {
  // console.log("check");
  const data = await req.body.machine;
  let updatedate = Date.now();
  const options = {
    timeZone: 'Asia/Kolkata',
    hour12: false,
    year: 'numeric',
    month: '2-digit',
    day: '2-digit',
    hour: '2-digit',
    minute: '2-digit',
    second: '2-digit'
  };
  
  const indiaTime = new Date(updatedate).toLocaleString('en-US', options);
  
  // console.log('Current time in India:', indiaTime);
  if(data){
    const updatedata = await Machine.findOneAndUpdate({machine_id:data}, {active:true});
    const updatensewdata = await Machine.findOneAndUpdate({machine_id:data}, {update:indiaTime});
    console.log(updatedata.machine_id);
  }
});

app.get("/checkMachineConnected", async(req,res) => {
  const machineid = req.body.id;
  const conn = await Machine.find({machine_id:machineid}).select('machine_id install_location comapny_bulding_no product_type total_slots company_id slots_name active update');
  // console.log(conn);
  return res.send(conn);
});

cron.schedule("0 12 * * *", async ()=> {
  async function DailyCsvReport(req,res) {
    var trans = [];
    function transaction(x) {
      if (x) {
        trans.push(x);
      }
      return trans;
    }
    try {
    // Get yesterday's date
    const startDate = new Date();
    startDate.setDate(startDate.getDate() - 1);
    const endDate = new Date();
    endDate.setDate(endDate.getDate() - 1);
      // console.log("startDate",startDate);
      // console.log("endDate",endDate);
      // console.log(`${startDate} to ${endDate}`);
      const data = await Pendingstatus.find({
        $and: [
          { machine_id: "SVZBLR0012" },
          { status: "Completed" },
          {
            created_date: {
              $gte: new Date(new Date(startDate).setHours(00, 00, 00)),
              $lte: new Date(new Date(endDate).setHours(23, 59, 59)),
            },
          },
        ],
      });
      // console.log(data)
      // console.log(data.length);
      if (!(data.length == 0)) {
        for (i = 0; i < data.length; i++) {
          const j = {
            created_date: data[i].created_date.toLocaleString(undefined, {
              timeZone: "Asia/Kolkata",
            }),
            card_number: data[i].card_number,
            employee_name: data[i].employee_name,
            email: data[i].email,
            manager_email: data[i].manager_email,
            cost_center: "",
            item_description: data[i].item_description,
            slote_number: data[i].slote_number,
            machine_number: data[i].machine_id,
            item_price: data[i].item_price,
          };
          // console.log(j);
          transaction(j);
          // console.log(trans);
        }
        const csvFields = [
          "Created_Date",
          "Card_number",
          "Employee_name",
          "Employee_Email",
          "Manager_Email",
          "Cost_center",
          "Item_Description",
          "Slot_Number",
          "Machine_Number",
          "Item_Price",
        ];
        const csvParser = new CsvParser({ csvFields });
        const csvData = csvParser.parse(trans);
        await email.sendDailyCsvReportEMail(csvData, endDate);
        res.setHeader("Content-Type", "text/csv");
        res.setHeader(
          "Content-Disposition",
          "attachment; filename=Transactions.csv"
        );
        res.status(200).send("email send");
      } else {
        res.status(200).json({ error: "transactions not found" });
      }
    } catch (e) {
      res.status(200).json({ error: "server internal error" });
      console.log(e);
    }
}
  await DailyCsvReport()
});

app.listen(port, () => {
  console.log(`connection is setup at ${port}`);
});
